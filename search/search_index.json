{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"%23%20%E5%BA%B7%E6%89%98%E5%B0%94%E3%80%81%E5%93%A5%E5%BE%B7%E5%B0%94%E3%80%81%E5%9B%BE%E7%81%B5%E2%80%94%E2%80%94%E6%B0%B8%E6%81%92%E7%9A%84%E9%87%91%E8%89%B2%E5%AF%B9%E8%A7%92%E7%BA%BF%28rev%232%29/","text":"\u5eb7\u6258\u5c14\u3001\u54e5\u5fb7\u5c14\u3001\u56fe\u7075\u2014\u2014\u6c38\u6052\u7684\u91d1\u8272\u5bf9\u89d2\u7ebf(rev#2) \u00b6 blog.csdn.net \u4e18\u9f50 \uff0c\u8ddf\u56fe\u7075\u540c\u65f6\u4ee3\u7684\u5929\u624d\uff0c\u5219\u4ece\u53e6\u4e00\u4e2a\u62bd\u8c61\u89d2\u5ea6\u63d0\u51fa\u4e86 lambda\u7b97\u5b50 \u7684\u601d\u60f3\uff0c\u4e0e \u56fe\u7075\u673a \u62bd\u8c61\u7684\u503e\u5411\u4e8e\u786c\u4ef6\u6027\u4e0d\u540c\uff0c\u4e18\u9f50\u7684 lambda \u7b97\u5b50\u7406\u8bba\u662f\u4ece\u6570\u5b66\u7684\u89d2\u5ea6\u8fdb\u884c\u62bd\u8c61\uff0c\u4e0d\u5173\u5fc3\u8fd0\u7b97\u7684\u673a\u68b0\u8fc7\u7a0b\u800c\u53ea\u5173\u5fc3\u8fd0\u7b97\u7684\u62bd\u8c61\u6027\u8d28\uff0c\u53ea\u7528\u6700\u7b80\u6d01\u7684\u51e0\u6761\u516c\u7406\u4fbf\u5efa\u7acb\u8d77\u4e86\u4e0e\u56fe\u7075\u673a \u5b8c\u5168\u7b49\u4ef7 \u7684\u8ba1\u7b97\u6a21\u578b SCIP\u5373\u4f7f\u7528\u57fa\u4e8elambda\u7b97\u5b50\u7684scheme\u8bed\u8a00\u8bb2\u6388 CS61A\u662f\u57fa\u4e8eSCIP\u6559\u6750\u5c06\u8bed\u8a00\u4fee\u6539\u4e3a\u66f4\u52a0\u5927\u4f17\u7684Python\u6559\u5b66\u3002","title":"\u5eb7\u6258\u5c14\u3001\u54e5\u5fb7\u5c14\u3001\u56fe\u7075\u2014\u2014\u6c38\u6052\u7684\u91d1\u8272\u5bf9\u89d2\u7ebf(rev#2)"},{"location":"%23%20%E5%BA%B7%E6%89%98%E5%B0%94%E3%80%81%E5%93%A5%E5%BE%B7%E5%B0%94%E3%80%81%E5%9B%BE%E7%81%B5%E2%80%94%E2%80%94%E6%B0%B8%E6%81%92%E7%9A%84%E9%87%91%E8%89%B2%E5%AF%B9%E8%A7%92%E7%BA%BF%28rev%232%29/#rev2","text":"blog.csdn.net \u4e18\u9f50 \uff0c\u8ddf\u56fe\u7075\u540c\u65f6\u4ee3\u7684\u5929\u624d\uff0c\u5219\u4ece\u53e6\u4e00\u4e2a\u62bd\u8c61\u89d2\u5ea6\u63d0\u51fa\u4e86 lambda\u7b97\u5b50 \u7684\u601d\u60f3\uff0c\u4e0e \u56fe\u7075\u673a \u62bd\u8c61\u7684\u503e\u5411\u4e8e\u786c\u4ef6\u6027\u4e0d\u540c\uff0c\u4e18\u9f50\u7684 lambda \u7b97\u5b50\u7406\u8bba\u662f\u4ece\u6570\u5b66\u7684\u89d2\u5ea6\u8fdb\u884c\u62bd\u8c61\uff0c\u4e0d\u5173\u5fc3\u8fd0\u7b97\u7684\u673a\u68b0\u8fc7\u7a0b\u800c\u53ea\u5173\u5fc3\u8fd0\u7b97\u7684\u62bd\u8c61\u6027\u8d28\uff0c\u53ea\u7528\u6700\u7b80\u6d01\u7684\u51e0\u6761\u516c\u7406\u4fbf\u5efa\u7acb\u8d77\u4e86\u4e0e\u56fe\u7075\u673a \u5b8c\u5168\u7b49\u4ef7 \u7684\u8ba1\u7b97\u6a21\u578b SCIP\u5373\u4f7f\u7528\u57fa\u4e8elambda\u7b97\u5b50\u7684scheme\u8bed\u8a00\u8bb2\u6388 CS61A\u662f\u57fa\u4e8eSCIP\u6559\u6750\u5c06\u8bed\u8a00\u4fee\u6539\u4e3a\u66f4\u52a0\u5927\u4f17\u7684Python\u6559\u5b66\u3002","title":"\u5eb7\u6258\u5c14\u3001\u54e5\u5fb7\u5c14\u3001\u56fe\u7075\u2014\u2014\u6c38\u6052\u7684\u91d1\u8272\u5bf9\u89d2\u7ebf(rev#2)"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/","text":"\u78c1\u6d41\u4f53\u6750\u6599\u7684\u5e94\u7528 \u00b6 2021.09.25 \u00b6 Ferrofluid technology first appeared on the technological scene in the 1960\u2019s when a researcher at NASA tried to create a magnetic rocket fuel that could be manipulated under zero gravity by powerful magnets and fed into rocket engines. \u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684 Ferrofluid \u754c\u9762\uff0c\u5176\u4e2d\u5c06\u78c1\u6d41\u4f53\u7684\u5e94\u7528\u5206\u4e3a\u4e86: \u73b0\u5728\u7684\u5e94\u7528 \u8fc7\u53bb\u7684\u5e94\u7528 \u672a\u6765\u7684\u5e94\u7528 \u73b0\u5728\u7684\u5e94\u7528 \u00b6 1.\u78c1\u6d41\u4f53\u5bc6\u5c01 \u00b6 \u78c1\u6d41\u4f53\u56e0\u4e3a\u5176\u5bf9\u78c1\u4f53\u5177\u6709\u5438\u9644\u6027\uff0c\u800c\u4e14\u5177\u6709\u826f\u597d\u7684\u5bc6\u5c01\u6027\uff0c\u7ecf\u5e38\u88ab\u7528\u4f5c\u9ad8\u901f\u7535\u673a\u5e26\u52a8\u7684\u8f74\u627f\u7684\u5bc6\u5c01\u3002\u6bd4\u5982 Ferrotec Corporation \u7684 Ferrofluidic \uff08\u5b66\u4e1a\u7e41\u5fd9\u65f6\u95f4\u6709\u9650\u4ec5\u4e3e\u4e00\u4f8b\uff09. 2.\u673a\u68b0\u4e2d\u6da6\u6ed1 \u00b6 \u78c1\u6d41\u4f53\u51cf\u5c11\u6469\u64e6\u7684\u7279\u6027\u4f7f\u5176\u53ef\u4ee5\u5e94\u7528\u4e8e\u67d0\u4e9b\u5f3a\u78c1\u4f53\u8868\u9762\u7684\u6da6\u6ed1\u3002\u94c1\u78c1\u6d41\u4f53\u8fd8\u53ef\u7528\u4e8e\u673a\u68b0\u548c\u822a\u7a7a\u822a\u5929\u5e94\u7528\u4e2d\u7684\u534a\u4e3b\u52a8\u963b\u5c3c\u5668\u3002 \uff08\u56e0\u4e3a\u5728\u592a\u7a7a\u73af\u5883\u4e2d\uff0c\u6ca1\u6709\u91cd\u529b\u7684\u9650\u5236\uff0c\u666e\u901a\u7684\u6da6\u6ed1\u5242\u53ef\u80fd\u4f1a\u4e0e\u5668\u4ef6\u8868\u9762\u5206\u79bb\u4ea7\u751f\u95f4\u9699\uff0c\u800c\u5728\u592a\u7a7a\u4e2d\uff0c\u78c1\u529b\u53ef\u4ee5\u8d77\u5230\u826f\u597d\u7684\u675f\u7f1a\u4f5c\u7528\uff0c\u800c\u4e14\u53ef\u4ee5\u51cf\u5c11\u6469\u64e6\uff0c\u6240\u4ee5\u5927\u91cf\u88ab\u5e94\u7528\u4e0e\u822a\u7a7a\u822a\u5929\uff09 \u8fc7\u53bb\u7684\u5e94\u7528 \u00b6 1.\u533b\u7597 \u00b6 \u4e3b\u8981\u7528\u4e8e\u78c1\u5171\u632f\u6210\u50cf\u4e2d\u7684\u5bf9\u6bd4\u5242\uff0c\u4f9d\u9760\u4e0d\u540c\u7ec4\u7ec7\u7684\u78c1\u5f1b\u8c6b\u65f6\u95f4\u7684\u5dee\u5f02\uff0c\u4ee5\u4ea7\u751f\u5bf9\u6bd4\u3002\u6bd4\u5982 Feridex I.V. \u672a\u6765\u7684\u5e94\u7528 \u00b6 1.\u533b\u7597 \u00b6 \u6765\u6e90 The verge: How a 50-year-old NASA invention could change the way we fight cancer Scientists like Thomas Webster, the director of the Nanomedicine Laboratory at Northeastern University, are looking at the ways ferrofluid can kill cancer cells, fight drug-resistant infections, and even help neurons communicate with each other. Watch the video above to delve into the sci-fi world of ferrofluid \u2014 and enjoy some hypnotizing goo along the way. 2.\u5149\u5b66 \u00b6 \u5149\u5b66\u6ee4\u6ce2\u5668\u7528\u4e8e\u9009\u62e9\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u3002\u66f4\u6362\u6ee4\u5149\u7247\u5f88\u9ebb\u70e6\uff0c\u5c24\u5176\u662f\u5f53\u6ce2\u957f\u968f\u7740\u53ef\u8c03\u8c10\u578b\u6fc0\u5149\u5668\u4e0d\u65ad\u53d8\u5316\u65f6\u3002\u901a\u8fc7\u6539\u53d8\u78c1\u573a\u53ef\u4ee5\u4e3a\u4e0d\u540c\u6ce2\u957f\u8c03\u8c10\u7684\u6ee4\u5149\u7247\u53ef\u4ee5\u4f7f\u7528\u78c1\u6d41\u4f53\u4e73\u6db2\u5236\u9020\u3002\u76ee\u524d\u62c9\u74e6\u5c14\u5927\u5b66\u6b63\u5728\u5229\u7528\u78c1\u6d41\u4f53\u4e3a\u57fa\u7840\uff0c\u4e3a\u5730\u7403\u5929\u6587\u671b\u8fdc\u955c\u5236\u9020\u4e00\u79cd\u81ea\u9002\u5e94\u5149\u5b66\u53d8\u578b\u78c1\u955c\u3002 \u6765\u6e90 Newscientist: Morphing mirror could clear the skies for astronomers The new morphing mirror developed at Laval University in Quebec is made from a magnetic liquid \u2013 a ferrofluid \u2013 that can be easily reshaped using magnetic fields. A video, top right, shows their amazing adaptability. \u89c6\u9891 \u00b6 \uff08\u4ee5\u4e0b\u5185\u5d4c\u5747\u4e3aYoutube\u7a97\u53e3\uff0c\u6211\u4e5f\u4e0b\u8f7d\u4e86\u4e00\u4efd\u5728\u6587\u4ef6\u5939\u7684videos\u4e0b\u7684\u89c6\u9891\u540c\u540d\u6587\u4ef6\uff09(\u6253\u5f00\u7684\u5982\u679c\u662f\u672c\u5730\u6587\u4ef6\u4e2d\u7684html\u5219\u4e0d\u80fd\u6b63\u5e38\u64ad\u653e) Ferrofluids: Introductory History and Applications \u6ca1\u770b\u5b8c\uff0c\u4e0d\u597d\u505a\u8bc4\u4ef7 \u5c55\u5f00\u89c6\u9891 Ferrofluid Piston \u5c55\u793a\u4e86\u5728\u5706\u67f1\u4f53\u6d3b\u585e\u4e2d\u5e94\u7528\u78c1\u6d41\u4f53\u5bc6\u5c01\u548c\u6da6\u6ed1\u7684\u6548\u679c \u5c55\u5f00\u89c6\u9891","title":"\u78c1\u6d41\u4f53\u6750\u6599\u7684\u5e94\u7528"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#_1","text":"","title":"\u78c1\u6d41\u4f53\u6750\u6599\u7684\u5e94\u7528"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#20210925","text":"Ferrofluid technology first appeared on the technological scene in the 1960\u2019s when a researcher at NASA tried to create a magnetic rocket fuel that could be manipulated under zero gravity by powerful magnets and fed into rocket engines. \u6839\u636e\u7ef4\u57fa\u767e\u79d1\u7684 Ferrofluid \u754c\u9762\uff0c\u5176\u4e2d\u5c06\u78c1\u6d41\u4f53\u7684\u5e94\u7528\u5206\u4e3a\u4e86: \u73b0\u5728\u7684\u5e94\u7528 \u8fc7\u53bb\u7684\u5e94\u7528 \u672a\u6765\u7684\u5e94\u7528","title":"2021.09.25"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#_2","text":"","title":"\u73b0\u5728\u7684\u5e94\u7528"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#1","text":"\u78c1\u6d41\u4f53\u56e0\u4e3a\u5176\u5bf9\u78c1\u4f53\u5177\u6709\u5438\u9644\u6027\uff0c\u800c\u4e14\u5177\u6709\u826f\u597d\u7684\u5bc6\u5c01\u6027\uff0c\u7ecf\u5e38\u88ab\u7528\u4f5c\u9ad8\u901f\u7535\u673a\u5e26\u52a8\u7684\u8f74\u627f\u7684\u5bc6\u5c01\u3002\u6bd4\u5982 Ferrotec Corporation \u7684 Ferrofluidic \uff08\u5b66\u4e1a\u7e41\u5fd9\u65f6\u95f4\u6709\u9650\u4ec5\u4e3e\u4e00\u4f8b\uff09.","title":"1.\u78c1\u6d41\u4f53\u5bc6\u5c01"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#2","text":"\u78c1\u6d41\u4f53\u51cf\u5c11\u6469\u64e6\u7684\u7279\u6027\u4f7f\u5176\u53ef\u4ee5\u5e94\u7528\u4e8e\u67d0\u4e9b\u5f3a\u78c1\u4f53\u8868\u9762\u7684\u6da6\u6ed1\u3002\u94c1\u78c1\u6d41\u4f53\u8fd8\u53ef\u7528\u4e8e\u673a\u68b0\u548c\u822a\u7a7a\u822a\u5929\u5e94\u7528\u4e2d\u7684\u534a\u4e3b\u52a8\u963b\u5c3c\u5668\u3002 \uff08\u56e0\u4e3a\u5728\u592a\u7a7a\u73af\u5883\u4e2d\uff0c\u6ca1\u6709\u91cd\u529b\u7684\u9650\u5236\uff0c\u666e\u901a\u7684\u6da6\u6ed1\u5242\u53ef\u80fd\u4f1a\u4e0e\u5668\u4ef6\u8868\u9762\u5206\u79bb\u4ea7\u751f\u95f4\u9699\uff0c\u800c\u5728\u592a\u7a7a\u4e2d\uff0c\u78c1\u529b\u53ef\u4ee5\u8d77\u5230\u826f\u597d\u7684\u675f\u7f1a\u4f5c\u7528\uff0c\u800c\u4e14\u53ef\u4ee5\u51cf\u5c11\u6469\u64e6\uff0c\u6240\u4ee5\u5927\u91cf\u88ab\u5e94\u7528\u4e0e\u822a\u7a7a\u822a\u5929\uff09","title":"2.\u673a\u68b0\u4e2d\u6da6\u6ed1"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#_3","text":"","title":"\u8fc7\u53bb\u7684\u5e94\u7528"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#1_1","text":"\u4e3b\u8981\u7528\u4e8e\u78c1\u5171\u632f\u6210\u50cf\u4e2d\u7684\u5bf9\u6bd4\u5242\uff0c\u4f9d\u9760\u4e0d\u540c\u7ec4\u7ec7\u7684\u78c1\u5f1b\u8c6b\u65f6\u95f4\u7684\u5dee\u5f02\uff0c\u4ee5\u4ea7\u751f\u5bf9\u6bd4\u3002\u6bd4\u5982 Feridex I.V.","title":"1.\u533b\u7597"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#_4","text":"","title":"\u672a\u6765\u7684\u5e94\u7528"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#1_2","text":"\u6765\u6e90","title":"1.\u533b\u7597"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#2_1","text":"\u5149\u5b66\u6ee4\u6ce2\u5668\u7528\u4e8e\u9009\u62e9\u4e0d\u540c\u6ce2\u957f\u7684\u5149\u3002\u66f4\u6362\u6ee4\u5149\u7247\u5f88\u9ebb\u70e6\uff0c\u5c24\u5176\u662f\u5f53\u6ce2\u957f\u968f\u7740\u53ef\u8c03\u8c10\u578b\u6fc0\u5149\u5668\u4e0d\u65ad\u53d8\u5316\u65f6\u3002\u901a\u8fc7\u6539\u53d8\u78c1\u573a\u53ef\u4ee5\u4e3a\u4e0d\u540c\u6ce2\u957f\u8c03\u8c10\u7684\u6ee4\u5149\u7247\u53ef\u4ee5\u4f7f\u7528\u78c1\u6d41\u4f53\u4e73\u6db2\u5236\u9020\u3002\u76ee\u524d\u62c9\u74e6\u5c14\u5927\u5b66\u6b63\u5728\u5229\u7528\u78c1\u6d41\u4f53\u4e3a\u57fa\u7840\uff0c\u4e3a\u5730\u7403\u5929\u6587\u671b\u8fdc\u955c\u5236\u9020\u4e00\u79cd\u81ea\u9002\u5e94\u5149\u5b66\u53d8\u578b\u78c1\u955c\u3002 \u6765\u6e90","title":"2.\u5149\u5b66"},{"location":"%23%20%E7%A3%81%E6%B5%81%E4%BD%93%E6%9D%90%E6%96%99%E7%9A%84%E5%BA%94%E7%94%A8/#_5","text":"\uff08\u4ee5\u4e0b\u5185\u5d4c\u5747\u4e3aYoutube\u7a97\u53e3\uff0c\u6211\u4e5f\u4e0b\u8f7d\u4e86\u4e00\u4efd\u5728\u6587\u4ef6\u5939\u7684videos\u4e0b\u7684\u89c6\u9891\u540c\u540d\u6587\u4ef6\uff09(\u6253\u5f00\u7684\u5982\u679c\u662f\u672c\u5730\u6587\u4ef6\u4e2d\u7684html\u5219\u4e0d\u80fd\u6b63\u5e38\u64ad\u653e) Ferrofluids: Introductory History and Applications \u6ca1\u770b\u5b8c\uff0c\u4e0d\u597d\u505a\u8bc4\u4ef7 \u5c55\u5f00\u89c6\u9891 Ferrofluid Piston \u5c55\u793a\u4e86\u5728\u5706\u67f1\u4f53\u6d3b\u585e\u4e2d\u5e94\u7528\u78c1\u6d41\u4f53\u5bc6\u5c01\u548c\u6da6\u6ed1\u7684\u6548\u679c \u5c55\u5f00\u89c6\u9891","title":"\u89c6\u9891"},{"location":"CLRS%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E6%94%B6%E7%BA%B3%E8%A2%8B/","text":"CLRS\u4e2d\u7684\u7b97\u6cd5\u6536\u7eb3\u888b \u00b6 \u53d7\u5b66\u4e60\u8fdb\u5ea6\u6240\u8feb\uff0c\u76ee\u524d\u6240\u6709\u7684\u51fd\u6570\u5747\u7528\u4f2a\u4ee3\u7801\u5199\u6210\uff0c\u4e4b\u540e\u4f1a\u4fee\u70bcpython\u91cd\u65b0\u7f16\u5199\u3002 Linked list \u00b6 Search \u00b6 Use a simple linear search though the list. def LIST_SEARCH ( L , k ): x = L . head while x != None and x . key != k : x = x . next return x Worst-case complexity: \\(\\Theta(n)\\) Insert \u00b6 Insert an element \\(x\\) into the head of the list with the value of \\(key\\) . def LIST_INSERT ( L , x ): x . next = L . head if L . head != None L . head . prev = x L . head = x x . prev = NIL L.head.prev denotes the prev attribute of the object that L.head points to. Complexity: \\(O(1)\\) Delete \u00b6 def LIST_DELETE ( L , x ): if x . prev != None : x . prev . next = x . next else L . head = x . next if x . next != None : x . next . prev = x . prev LIST-DELETE runs in \\(O(1)\\) time, but if we wish to delete an element with a given key, \\(\\Theta(n)\\) time is required in the worst case because we must first call LIST-SEARCH to find the element . With sentinel \u00b6 def LIST_SEARCH_WITH_SENTINEL ( L , x ): x . next = L . nil . next while x != L . nil and x . key != k : x = x . next return x def LIST_INSERT_WITH_SENTINEL ( L , x ): x . next = L . nil . next L . nil . next . prev = x L . nil . next = x x . prev = L . nil In this book, we use sentinels only when they truly simplify the code.","title":"CLRS\u4e2d\u7684\u7b97\u6cd5\u6536\u7eb3\u888b"},{"location":"CLRS%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E6%94%B6%E7%BA%B3%E8%A2%8B/#clrs","text":"\u53d7\u5b66\u4e60\u8fdb\u5ea6\u6240\u8feb\uff0c\u76ee\u524d\u6240\u6709\u7684\u51fd\u6570\u5747\u7528\u4f2a\u4ee3\u7801\u5199\u6210\uff0c\u4e4b\u540e\u4f1a\u4fee\u70bcpython\u91cd\u65b0\u7f16\u5199\u3002","title":"CLRS\u4e2d\u7684\u7b97\u6cd5\u6536\u7eb3\u888b"},{"location":"CLRS%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E6%94%B6%E7%BA%B3%E8%A2%8B/#linked-list","text":"","title":"Linked list"},{"location":"CLRS%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E6%94%B6%E7%BA%B3%E8%A2%8B/#search","text":"Use a simple linear search though the list. def LIST_SEARCH ( L , k ): x = L . head while x != None and x . key != k : x = x . next return x Worst-case complexity: \\(\\Theta(n)\\)","title":"Search"},{"location":"CLRS%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E6%94%B6%E7%BA%B3%E8%A2%8B/#insert","text":"Insert an element \\(x\\) into the head of the list with the value of \\(key\\) . def LIST_INSERT ( L , x ): x . next = L . head if L . head != None L . head . prev = x L . head = x x . prev = NIL L.head.prev denotes the prev attribute of the object that L.head points to. Complexity: \\(O(1)\\)","title":"Insert"},{"location":"CLRS%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E6%94%B6%E7%BA%B3%E8%A2%8B/#delete","text":"def LIST_DELETE ( L , x ): if x . prev != None : x . prev . next = x . next else L . head = x . next if x . next != None : x . next . prev = x . prev LIST-DELETE runs in \\(O(1)\\) time, but if we wish to delete an element with a given key, \\(\\Theta(n)\\) time is required in the worst case because we must first call LIST-SEARCH to find the element .","title":"Delete"},{"location":"CLRS%E4%B8%AD%E7%9A%84%E7%AE%97%E6%B3%95%E6%94%B6%E7%BA%B3%E8%A2%8B/#with-sentinel","text":"def LIST_SEARCH_WITH_SENTINEL ( L , x ): x . next = L . nil . next while x != L . nil and x . key != k : x = x . next return x def LIST_INSERT_WITH_SENTINEL ( L , x ): x . next = L . nil . next L . nil . next . prev = x L . nil . next = x x . prev = L . nil In this book, we use sentinels only when they truly simplify the code.","title":"With sentinel"},{"location":"%E5%BA%B7%E6%89%98%E5%B0%94%E3%80%81%E5%93%A5%E5%BE%B7%E5%B0%94%E3%80%81%E5%9B%BE%E7%81%B5%E2%80%94%E2%80%94%E6%B0%B8%E6%81%92%E7%9A%84%E9%87%91%E8%89%B2%E5%AF%B9%E8%A7%92%E7%BA%BF%28rev%232%29%E6%89%B9%E6%B3%A8/","text":"\u5eb7\u6258\u5c14\u3001\u54e5\u5fb7\u5c14\u3001\u56fe\u7075\u2014\u2014\u6c38\u6052\u7684\u91d1\u8272\u5bf9\u89d2\u7ebf(rev#2) \u00b6 blog.csdn.net \u6279\u6ce8 \u00b6 \u4e18\u9f50 \uff0c\u8ddf\u56fe\u7075\u540c\u65f6\u4ee3\u7684\u5929\u624d\uff0c\u5219\u4ece\u53e6\u4e00\u4e2a\u62bd\u8c61\u89d2\u5ea6\u63d0\u51fa\u4e86 lambda\u7b97\u5b50 \u7684\u601d\u60f3\uff0c\u4e0e \u56fe\u7075\u673a \u62bd\u8c61\u7684\u503e\u5411\u4e8e\u786c\u4ef6\u6027\u4e0d\u540c\uff0c\u4e18\u9f50\u7684 lambda \u7b97\u5b50\u7406\u8bba\u662f\u4ece\u6570\u5b66\u7684\u89d2\u5ea6\u8fdb\u884c\u62bd\u8c61\uff0c\u4e0d\u5173\u5fc3\u8fd0\u7b97\u7684\u673a\u68b0\u8fc7\u7a0b\u800c\u53ea\u5173\u5fc3\u8fd0\u7b97\u7684\u62bd\u8c61\u6027\u8d28\uff0c\u53ea\u7528\u6700\u7b80\u6d01\u7684\u51e0\u6761\u516c\u7406\u4fbf\u5efa\u7acb\u8d77\u4e86\u4e0e\u56fe\u7075\u673a \u5b8c\u5168\u7b49\u4ef7 \u7684\u8ba1\u7b97\u6a21\u578b SCIP\u5373\u4f7f\u7528\u57fa\u4e8elambda\u7b97\u5b50\u7684scheme\u8bed\u8a00\u8bb2\u6388 CS61A\u662f\u57fa\u4e8eSCIP\u6559\u6750\u5c06\u8bed\u8a00\u4fee\u6539\u4e3a\u66f4\u52a0\u5927\u4f17\u7684Python\u6559\u5b66\u3002","title":"\u5eb7\u6258\u5c14\u3001\u54e5\u5fb7\u5c14\u3001\u56fe\u7075\u2014\u2014\u6c38\u6052\u7684\u91d1\u8272\u5bf9\u89d2\u7ebf(rev#2)"},{"location":"%E5%BA%B7%E6%89%98%E5%B0%94%E3%80%81%E5%93%A5%E5%BE%B7%E5%B0%94%E3%80%81%E5%9B%BE%E7%81%B5%E2%80%94%E2%80%94%E6%B0%B8%E6%81%92%E7%9A%84%E9%87%91%E8%89%B2%E5%AF%B9%E8%A7%92%E7%BA%BF%28rev%232%29%E6%89%B9%E6%B3%A8/#rev2","text":"blog.csdn.net","title":"\u5eb7\u6258\u5c14\u3001\u54e5\u5fb7\u5c14\u3001\u56fe\u7075\u2014\u2014\u6c38\u6052\u7684\u91d1\u8272\u5bf9\u89d2\u7ebf(rev#2)"},{"location":"%E5%BA%B7%E6%89%98%E5%B0%94%E3%80%81%E5%93%A5%E5%BE%B7%E5%B0%94%E3%80%81%E5%9B%BE%E7%81%B5%E2%80%94%E2%80%94%E6%B0%B8%E6%81%92%E7%9A%84%E9%87%91%E8%89%B2%E5%AF%B9%E8%A7%92%E7%BA%BF%28rev%232%29%E6%89%B9%E6%B3%A8/#_1","text":"\u4e18\u9f50 \uff0c\u8ddf\u56fe\u7075\u540c\u65f6\u4ee3\u7684\u5929\u624d\uff0c\u5219\u4ece\u53e6\u4e00\u4e2a\u62bd\u8c61\u89d2\u5ea6\u63d0\u51fa\u4e86 lambda\u7b97\u5b50 \u7684\u601d\u60f3\uff0c\u4e0e \u56fe\u7075\u673a \u62bd\u8c61\u7684\u503e\u5411\u4e8e\u786c\u4ef6\u6027\u4e0d\u540c\uff0c\u4e18\u9f50\u7684 lambda \u7b97\u5b50\u7406\u8bba\u662f\u4ece\u6570\u5b66\u7684\u89d2\u5ea6\u8fdb\u884c\u62bd\u8c61\uff0c\u4e0d\u5173\u5fc3\u8fd0\u7b97\u7684\u673a\u68b0\u8fc7\u7a0b\u800c\u53ea\u5173\u5fc3\u8fd0\u7b97\u7684\u62bd\u8c61\u6027\u8d28\uff0c\u53ea\u7528\u6700\u7b80\u6d01\u7684\u51e0\u6761\u516c\u7406\u4fbf\u5efa\u7acb\u8d77\u4e86\u4e0e\u56fe\u7075\u673a \u5b8c\u5168\u7b49\u4ef7 \u7684\u8ba1\u7b97\u6a21\u578b SCIP\u5373\u4f7f\u7528\u57fa\u4e8elambda\u7b97\u5b50\u7684scheme\u8bed\u8a00\u8bb2\u6388 CS61A\u662f\u57fa\u4e8eSCIP\u6559\u6750\u5c06\u8bed\u8a00\u4fee\u6539\u4e3a\u66f4\u52a0\u5927\u4f17\u7684Python\u6559\u5b66\u3002","title":"\u6279\u6ce8"},{"location":"%E6%97%A0%E6%9C%BA%E5%8C%96%E5%AD%A6%E5%A4%8D%E4%B9%A0/","text":"\u590d\u4e60\u65e0\u673a\u5316\u5b66\u91cd\u4fee\u7684\u671f\u672b\u8003\u8bd5\u7528\u7684\u6587\u6863\uff0c\u6392\u7248\u6ca1\u6709\u505a\uff0c\u4e0d\u662f\u95f2\u7684\u65e0\u804a\u8fd8\u662f\u4e0d\u8981\u770b\u4e86\u3002 \u8003\u8bd5\u5305\u62ec\uff1a\u70ed\u529b\u5b66\uff0c\u5316\u5b66\u5e73\u8861\uff0c \u6eb6\u6db2\u5e73\u8861 \uff0c \u539f\u7535\u6c60 \u70ed\u529b\u5b66\u521d\u6b65 \u00b6 \u53cd\u5e94 \\(C _{3} H _{8}( g )+5 O _{2}( g )=3 CO _{2}( g )+4 H _{2} O\\) (1) \u5728\u655e\u5f00\u5bb9\u5668\u4f53\u7cfb\u4e2d\u71c3\u70e7, \u6d4b\u5f97\u5176 298. 15K \u7684\u6052\u538b\u53cd\u5e94\u70ed\u4e3a \\(-2220 kJ \\cdot mol ^{-1}\\) , \u6c42: (1) \u53cd\u5e94\u7684 \\(\\Delta_{r} H_{ m }^{\\ominus}\\) \u662f\u591a\u5c11? (2) \u53cd\u5e94\u7684 \\(\\Delta U\\) \u662f\u591a\u5c11? \u89e3: (1) \\(\\triangle_{ r } H^{0}{ }_{ u }=-2220 kJ \\cdot mol ^{-1}\\) (2) \\(\\triangle U=\\) \\(\\Delta_{ r } H{ }^{0} u +W\\) \\(=\\Delta_{ x } H{ }^{0}{ }_{ y }-P \\Delta V\\) \\(=\\triangle_{ r } H^{0}{ }_{ x }-\\Delta n R T\\) \\(=-2220-(3-5) R T\\) \\(=-2220-(-2) \\times 8.314 \\times 298 \\times 10^{-3}=-2217.52 kJ \\cdot mol ^{-1}\\) Note \u5b9a\u538b\u53cd\u5e94\u70ed\uff1a \\(\\Delta H = \\Delta U+p\\Delta V\\) \uff08\u4ecepv=nRT\uff0c\u4ee5\u53ca\u70ed\u529b\u5b66\u7b2c\u4e00\u5b9a\u5f8b \\(\\Delta U=Q+W\\) \uff09 \\(\\Delta_{r} H_{ m }^{\\ominus}\\) \uff1a\u6807\u51c6\u6469\u5c14\u7113\u53d8 \u5df2\u77e5\u4e0b\u5217\u6570\u636e (1) \\(Zn ( s )+1 / 2 O _{2}( g ) \\leftrightharpoons ZnO ( s ) \\quad \\Delta_{ r } H_{ m }^{\\ominus}=-348.0 kJ \\cdot mol ^{-1}\\) (2) \\(S\\) (\u659c\u65b9) \\(+ O _{2}( g )= SO _{2}( g ) \\quad \\Delta_{ r } H_{ m }^{\\ominus}=-296.9 kJ \\cdot mol ^{-1}\\) (3) \\(SO _{2}( g )+1 / 2 O _{2}( g )= SO _{3}( g ) \\quad \\Delta_{ r } H_{ m }^{\\ominus}=-98.3 kJ \\cdot mol ^{-1}\\) (4) \\(ZnSO _{4}( s )= ZnO ( s )+ SO _{3}( g ) \\quad \\Delta_{ r } H_{ m }^{\\ominus}=235.4 kJ \\cdot mol ^{-1}\\) \u6c42 \\(ZnSO _{4}( s )\\) \u7684\u6807\u51c6\u751f\u6210\u70ed\u3002 \u89e3\uff1a\u65b9\u7a0b\u5f0f(1) \\(+(2)+(3)-(4)\\) \u4e3a: \\[ Zn ( s )+ S (\\text { \u659c\u65b9 })+2 O _{2}( g ) \\rightarrow ZnSO _{4}( s ) \\] \u6b63\u597d\u662f\u7531\u6307\u5b9a\u5355\u8d28\u751f\u6210 \\(ZnSO _{4}( s )\\) \u7684\u53cd\u5e94\u65b9\u7a0b\u5f0f, \u5176\u70ed\u6548\u5e94\u5c31\u662f \\(ZnSO _{4}( s )\\) \u7684\u751f\u6210\u7113 \\(H_{1}^{0} Mo\\) \\[ \\begin{aligned} & H_{ f }^{0} w \\left( ZnSO _{4}, s \\right)=H_{ r }{ }^{0} w (1)+H_{ r }{ }^{0} w (2)+H_{ r }{ }^{0} w (3)-H_{ r }{ }^{0} w (4) \\\\ =&-348.0-296.9-98.3-235.4=-978.6 kJ \\cdot mol ^{-1} \\end{aligned} \\] Note \u51d1\u53cd\u5e94\u7269\u548c\u751f\u6210\u7269 \u5df2\u77e5\u4e0b\u5217\u6570\u636e \\(\\begin{array}{lccc} & CaSO _{4}( s ) & CaO ( s ) & SO _{3}( g ) \\\\ \\Delta_{ f } H_{ m }^{\\ominus} / kJ \\cdot mol ^{-1} & -1432.7 & -635.1 & -395.72 \\\\ S_{ m }^{\\ominus} / J \\cdot mol ^{-1} \\cdot K ^{-1} & 107.0 & 39.75 & 256.65\\end{array}\\) \u901a\u8fc7\u8ba1\u7b97\u8bf4\u660e\u80fd\u5426\u7528 \\(CaO ( s )\\) \u5438\u6536\u9ad8\u7089\u5e9f\u6c14\u4e2d\u7684 \\(SO _{3}\\) \u6c14\u4f53\u4ee5\u9632\u6b62 \\(SO _{3}\\) \u6c61\u67d3\u73af\u5883\u3002 \u89e3: \u7528 \\(CaO\\) (s) \u5438\u6536\u9ad8\u7089\u5e9f\u4e2d\u7684 \\(SO _{3}\\) \u6c14\u4f53\u7684\u5316\u5b66\u65b9\u7a0b\u5f0f\u4e3a: \\[ \\begin{array}{l} CaO ( s )+ SO _{3}( g ) \\rightarrow CaSO _{4}( s ) \\\\ \\Delta_{ r } H_{ m }{ }^{ o }=\\Delta_{ r } H_{ m }{ }^{\\circ}\\left( CaSO _{4}, s \\right)-\\Delta_{ r } H_{ m }{ }^{\\circ}( CaO , s )-\\Delta_{ r } H_{ m }{ }^{\\circ}\\left( SO _{3}, g \\right) \\\\ =-1432.7-(-635.1)-(-395.72)=-401.88 kJ \\\\ \\Delta_{ r } S_{ m }{ }^{ O }=S_{ m }{ }^{\\circ}\\left( CaSO _{4}, s \\right)-S_{ m }{ }^{\\circ}( CaO , s )-S_{ m }{ }^{\\circ}\\left( SO _{3}, g \\right) \\\\ =107.0-39.75-256.65=-189.4 J \\cdot mol ^{-1} \\cdot K ^{-1} \\\\ \\text { \u82e5\u53cd\u5e94\u53d1\u751f } T \\geqslant \\frac{\\Delta_{r} H_{m}^{\\theta}}{\\Delta_{ r } S_{ m }{ }^{ O }}=\\frac{-401.88 \\times 10^{-3}}{-189.4}=2121.86 K \\end{array} \\] \u5728 \\(2121.86 K\\) \u7684\u9ad8\u7a33\u4e0b\u90fd\u80fd\u81ea\u53d1\u8fdb\u884c, \u8be5\u53cd\u5e94\u5728\u9ad8\u7089\u4e2d\u80fd\u8fdb\u884c\u3002 Note \u603b\u4e4b\u662f \\(\\Delta_{ r } G=\\Delta_{ r } H-T \\Delta_{ r } S\\) \u7684\u5e94\u7528 \u5df2\u77e5\u4e0b\u5217\u6570\u636e: \\(\\begin{array}{lcc} & SbCl _{5}( g ) & SbCl _{3}( g ) \\\\ \\Delta_{ f } H_{ m }^{\\ominus} / kJ \\cdot mol ^{-1} & -394.3 & -313.8 \\\\ \\Delta_{ f } G_{ m }^{\\ominus} / kJ \\cdot mol ^{-1} & -334.3 & -301.2\\end{array}\\) \u901a\u8fc7\u8ba1\u7b97\u56de\u7b54\u53cd\u5e94 \\(SbCl _{5}( g )= SbCl _{3}( g )+ Cl _{2}( g )\\) (1) \u5728\u5e38\u6e29\u4e0b\u80fd\u5426\u81ea\u53d1\u8fdb\u884c? (2) \u5728 \\(500^{\\circ} C\\) \u65f6\u80fd\u5426\u81ea\u53d1\u8fdb\u884c? \u89e3: (1) \\(\\Delta_{ r } G_{ m }{ }^{ O }=\\Delta_{ r } G_{ m }{ }^{\\circ}\\left( SbCl _{3}, g \\right)-\\Delta_{ r } G_{ m }{ }^{\\circ}\\left( Cl _{2}, g \\right)-\\Delta_{ r } G_{ m }{ }^{\\circ}\\left( SbCl _{5}, g \\right)=-301.2+0-(-334.3)=33.1 kJ >0\\) \u5728\u5e38\u6e29\u4e0b\u8be5\u53cd\u5e94\u4e0d\u80fd\u81ea\u53d1\u8fdb\u884c\u3002 (2) \\(\\Delta_{ r } H_{ m }{ }^{ O }=\\Delta_{ r } H_{ m }{ }^{ O }\\left( SbCl _{3}, g \\right)-\\Delta_{ r } H_{ m }{ }^{ o }\\left( Cl _{2}, g \\right)-\\Delta_{ r } H_{ m }{ }^{ o }\\left( SbCl _{5}, g \\right)=-313.8+0-(-394.3)=80.5 kJ\\) \\(\\Delta_{ r } S_{ m }{ }^{ o }=\\frac{\\Delta_{r} H_{m}^{\\theta}-\\Delta_{r} G_{m}^{\\theta}}{T}=\\frac{(80.5-33.1) \\times 10^{3}}{298.15}=159.0 J \\cdot mol ^{-1} \\cdot K ^{-1}\\) \\(\\Delta_{ r } G_{ m }{ }^{\\circ}(500 K )=\\Delta_{ r } H_{ m }{ }^{\\circ}-T \\Delta_{ r } S_{ m }{ }^{\\circ}\\) \\(=80.5-(273.15+500) \\times 159.0 \\times 10^{-3}=-42.4 kJ \\cdot mol ^{-1}<0\\) \u5728 \\(500 K\\) \u65f6\u8be5\u53cd\u5e94\u80fd\u81ea\u53d1\u8fdb\u884c\u3002 Note \\(0\u2103 = 273.15K,\u5e38\u6e29=25\u2103=298.15K\\) \\(\\Delta_{ f } G_{ m }^{\\ominus}\\) \u7684f\u662fformation,\u751f\u6210\u7684\u610f\u601d\u3002\u7528\u4e8e\u5355\u4e2a\u7269\u8d28\uff0cr\u7528\u4e8e\u53cd\u5e94\u3002 \u672c\u9898\uff081\uff09\u5373\u7528f\u4ee3\u5165\u53cd\u5e94\u5f0f\u5f97\u5230r\u7684\u81ea\u7531\u80fd\uff0c\u5224\u65ad\u53cd\u5e94\u65b9\u5411\u3002 \uff082\uff09\u8fd0\u7528 \\(\\Delta_{ r } G=\\Delta_{ r } H-T \\Delta_{ r } S\\) \u53cd\u5e94\u901f\u7387\u548c\u5316\u5b66\u5e73\u8861 \u00b6 \\(600 K\\) \u65f6, \u6d4b\u5f97\u53cd\u5e94 \\(2 NO ( g )+ O _{2}( g ) \\longrightarrow 2 NO _{2}( g )\\) \u7684\u4e09\u7ec4\u5b9e\u9a8c\u6570\u636e\u5982\u4e0b: \\(c_{0}(NO)/mol* L^{-1}\\) \\(c_{0}(O_{2})/mol*L^{-1}\\) \\(v/mol*L^{-1}*s^{-1}\\) 0.010 0.010 \\(2.5\\times 10^{-3}\\) 0.010 0.020 \\(5.0\\times 10^{-3}\\) 0.030 0.020 \\(45\\times 10^{-3}\\) (1)\u786e\u5b9a\u53cd\u5e94\u7ea7\u6570, \u5199\u51fa\u53cd\u5e94\u901f\u7387\u65b9\u7a0b\u5f0f; (2) \u8ba1\u7b97\u53cd\u5e94\u901f\u7387\u5e38\u6570; (3) \u8ba1\u7b97 \\(c_{0}( NO )=0.015 mol \\cdot L ^{-1}, c_{0}\\left( O _{2}\\right)=0.025 mol \\cdot L ^{-1}\\) \u65f6\u7684\u53cd\u5e94\u901f\u7387\u3002 (1)\u53cd\u5e94\u662f\u57fa\u5143\u53cd\u5e94\uff0c\u6545\u5404\u7269\u8d28\u53cd\u5e94\u7ea7\u6570=\u8ba1\u91cf\u6570\uff0c\u5219\u53cd\u5e94\u7684\u7ea7\u6570 \\(n=2+1\\) ,\u53cd\u5e94\u65b9\u7a0b\u5f0f\uff1a \\(v=kc(NO)^2c(O_{2})\\) (2)\u4efb\u610f\u6311\u9009\u4e00\u7ec4\u5b9e\u9a8c\u6570\u636e\u7686\u53ef\uff0c\u4f7f\u7528\u7b2c\u4e09\u7ec4\u8ba1\u7b97\u3002 \\(v=k\\left[c( NO ) / c_{0}\\right]^{2}\\left[c( O_{2} ) / c_{0}\\right]^{1}\\) \uff0ck=\u5df4\u62c9\u62c9 (3)\u7531k\u5e26\u5165\u9898\u8bbe\u6570\u636e\u5373\u53ef\u3002 Note \u53cd\u5e94\u7ea7\u6570(order of reaction)\uff1a\u57fa\u5143\u53cd\u5e94\u7684\u53cd\u5e94\u7ea7\u6570=\u5316\u5b66\u8ba1\u91cf\u6570 \u53cd\u5e94\u65b9\u7a0b\u5f0f\uff1a \\(a A +b B =d D +e E\\) \u4e0b \\(v=k c^{x}( A ) c^{y}( B )\\) \u53cd\u5e94\u901f\u7387\u5e38\u6570\uff1a \\(v=k\\left[c( A ) / c_{0}\\right]^{x}\\left[c( B ) / c_{0}\\right]^{y}\\) \uff0c\u5355\u4f4d \\(\\left( mol \\cdot L ^{-1}\\right)^{(1-x-y)} \\cdot s ^{-1}\\)","title":"\u65e0\u673a\u5316\u5b66\u590d\u4e60"},{"location":"%E6%97%A0%E6%9C%BA%E5%8C%96%E5%AD%A6%E5%A4%8D%E4%B9%A0/#_1","text":"\u53cd\u5e94 \\(C _{3} H _{8}( g )+5 O _{2}( g )=3 CO _{2}( g )+4 H _{2} O\\) (1) \u5728\u655e\u5f00\u5bb9\u5668\u4f53\u7cfb\u4e2d\u71c3\u70e7, \u6d4b\u5f97\u5176 298. 15K \u7684\u6052\u538b\u53cd\u5e94\u70ed\u4e3a \\(-2220 kJ \\cdot mol ^{-1}\\) , \u6c42: (1) \u53cd\u5e94\u7684 \\(\\Delta_{r} H_{ m }^{\\ominus}\\) \u662f\u591a\u5c11? (2) \u53cd\u5e94\u7684 \\(\\Delta U\\) \u662f\u591a\u5c11? \u89e3: (1) \\(\\triangle_{ r } H^{0}{ }_{ u }=-2220 kJ \\cdot mol ^{-1}\\) (2) \\(\\triangle U=\\) \\(\\Delta_{ r } H{ }^{0} u +W\\) \\(=\\Delta_{ x } H{ }^{0}{ }_{ y }-P \\Delta V\\) \\(=\\triangle_{ r } H^{0}{ }_{ x }-\\Delta n R T\\) \\(=-2220-(3-5) R T\\) \\(=-2220-(-2) \\times 8.314 \\times 298 \\times 10^{-3}=-2217.52 kJ \\cdot mol ^{-1}\\) Note","title":"\u70ed\u529b\u5b66\u521d\u6b65"},{"location":"%E6%97%A0%E6%9C%BA%E5%8C%96%E5%AD%A6%E5%A4%8D%E4%B9%A0/#_2","text":"\\(600 K\\) \u65f6, \u6d4b\u5f97\u53cd\u5e94 \\(2 NO ( g )+ O _{2}( g ) \\longrightarrow 2 NO _{2}( g )\\) \u7684\u4e09\u7ec4\u5b9e\u9a8c\u6570\u636e\u5982\u4e0b: \\(c_{0}(NO)/mol* L^{-1}\\) \\(c_{0}(O_{2})/mol*L^{-1}\\) \\(v/mol*L^{-1}*s^{-1}\\) 0.010 0.010 \\(2.5\\times 10^{-3}\\) 0.010 0.020 \\(5.0\\times 10^{-3}\\) 0.030 0.020 \\(45\\times 10^{-3}\\) (1)\u786e\u5b9a\u53cd\u5e94\u7ea7\u6570, \u5199\u51fa\u53cd\u5e94\u901f\u7387\u65b9\u7a0b\u5f0f; (2) \u8ba1\u7b97\u53cd\u5e94\u901f\u7387\u5e38\u6570; (3) \u8ba1\u7b97 \\(c_{0}( NO )=0.015 mol \\cdot L ^{-1}, c_{0}\\left( O _{2}\\right)=0.025 mol \\cdot L ^{-1}\\) \u65f6\u7684\u53cd\u5e94\u901f\u7387\u3002 (1)\u53cd\u5e94\u662f\u57fa\u5143\u53cd\u5e94\uff0c\u6545\u5404\u7269\u8d28\u53cd\u5e94\u7ea7\u6570=\u8ba1\u91cf\u6570\uff0c\u5219\u53cd\u5e94\u7684\u7ea7\u6570 \\(n=2+1\\) ,\u53cd\u5e94\u65b9\u7a0b\u5f0f\uff1a \\(v=kc(NO)^2c(O_{2})\\) (2)\u4efb\u610f\u6311\u9009\u4e00\u7ec4\u5b9e\u9a8c\u6570\u636e\u7686\u53ef\uff0c\u4f7f\u7528\u7b2c\u4e09\u7ec4\u8ba1\u7b97\u3002 \\(v=k\\left[c( NO ) / c_{0}\\right]^{2}\\left[c( O_{2} ) / c_{0}\\right]^{1}\\) \uff0ck=\u5df4\u62c9\u62c9 (3)\u7531k\u5e26\u5165\u9898\u8bbe\u6570\u636e\u5373\u53ef\u3002 Note","title":"\u53cd\u5e94\u901f\u7387\u548c\u5316\u5b66\u5e73\u8861"},{"location":"%E7%89%9B%E9%A1%BF%E5%8A%9B%E5%AD%A6%E4%B8%8E%E4%BA%A4%E5%8F%89%E7%86%B5%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8E%E5%AE%9A%E4%B9%89%E4%B8%8E%E6%A6%82%E5%BF%B5%E7%9A%84%E6%80%9D%E8%80%83/","text":"\u725b\u987f\u529b\u5b66\u4e0e\u4ea4\u53c9\u71b5\u2014\u2014\u2014\u2014\u5173\u4e8e\u5b9a\u4e49\u4e0e\u6982\u5ff5\u7684\u601d\u8003 \u00b6 2021.11.10 \u6982\u8ff0 \u00b6 \u672c\u6587\u662f\u4eca\u5929\u5b66\u4e60\u4e86\u4ea4\u53c9\u71b5\u7684\u6982\u5ff5\u4e4b\u540e\u7684\u4e00\u7bc7\u8bb0\u5f55\u6027\u7684\u6587\u7ae0\uff0c\u539f\u521b\u6027\u7565\u4f4e\uff0c\u6765\u6e90\u4e3b\u8981\u662f\u300a\u6570\u5b66\u4e4b\u7f8e\u300b\u7b2c6\u7ae0\u2014\u2014\u4fe1\u606f\u7684\u5ea6\u91cf\u4e0e\u4f5c\u7528\uff0c\u91cc\u9762\u8bb2\u89e3\u4e86\u4fe1\u606f\u8bba\u7684\u57fa\u672c\u77e5\u8bc6\uff1a\u4fe1\u606f\u91cf\u3001\u71b5\uff0c\u53c8\u901a\u8fc7\u4e92\u4fe1\u606f\u5f15\u51fa\u4e86\u4ea4\u53c9\u71b5\u3002\u4ee5\u53caB\u7ad9up\u4e3b \u738b\u6728\u5934\u5b66\u79d1\u5b66 \u7684 \u201c\u4ea4\u53c9\u71b5\u201d\u5982\u4f55\u505a\u635f\u5931\u51fd\u6570\uff1f\u6253\u5305\u7406\u89e3\u201c\u4fe1\u606f\u91cf\u201d\u3001\u201c\u6bd4\u7279\u201d\u3001\u201c\u71b5\u201d\u3001\u201cKL\u6563\u5ea6\u201d\u3001\u201c\u4ea4\u53c9\u71b5\u201d \u524d\u8a00 \u00b6 \u4e4b\u524d\u81ea\u5b66\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u57fa\u7840\u77e5\u8bc6\u7684\u65f6\u5019\u5b66\u4e60\u5230\u4e86\u4ea4\u53c9\u71b5\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u867d\u7136\u5bf9\u4fe1\u606f\u8bba\u3001\u9999\u519c\u7684\u4e00\u4e9b\u8d21\u732e\u4ee5\u53ca\u4fe1\u606f\u7684\u71b5\u7565\u6709\u8033\u95fb\uff0c\u4f46\u662f\u5b9e\u5728\u770b\u4e0d\u51fa\u4e3a\u4ec0\u4e48\u5982\u4e0b\u5f62\u5f0f\u7684\u4ea4\u53c9\u71b5\u516c\u5f0f\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u3002 \\[ \\min -\\left(\\sum_{i=1}^{n}\\left(x_{i} \\cdot \\log y_{i}+\\left(1-x_{i}\\right) \\cdot \\log \\left(1-y_{i}\\right)\\right)\\right)\\tag{1} \\] \\[ \u4ea4\u53c9\u71b5 \\] \u4f46\u662f\u4eca\u5929\u770b\u300a\u6570\u5b66\u4e4b\u7f8e\u300b\u7684\u65f6\u5019\u8bb2\u5230\u4e86\u8fd9\u4e2a\u77e5\u8bc6\u70b9\uff0c\u800c\u4e14\u5de7\u5408\u7684\u662f\u5728\u51e0\u5929\u524d\u6b63\u597d\u770b\u5230\u4e86\u738b\u6728\u5934\u8bb2\u7684\u5173\u4e8e\u68af\u5ea6\u4e0b\u964d\u7684\u89c6\u9891\uff0c\u4ed6\u90a3\u79cd\u7531\u95ee\u9898\u6b65\u6b65\u6df1\u5165\u5f15\u51fa\u5173\u952e\u77e5\u8bc6\u70b9\u7684\u6559\u5b66\u65b9\u6cd5\u8ba9\u6211\u5bf9\u5f88\u591a\u6982\u5ff5\u6709\u4e86\u4e0d\u540c\u4e8e\u4e66\u672c\u4e0a\u523b\u677f\u7684\u516c\u5f0f\u7684\u66f4\u6df1\u7684\u7406\u89e3\u3002\u4e8e\u662f\u53c8\u627e\u51fa\u4ed6\u8bb2\u7684\u4ea4\u53c9\u71b5\u7684\u8bb2\u89e3\u89c6\u9891\uff0c\u9605\u6bd5\u6df1\u6709\u611f\u89e6\uff0c\u4ee5\u6b64\u6587\u8bb0\u5f55\u4e0b\u5f53\u4e0b\u7684\u5fc3\u60c5\uff08\u6240\u4ee5\u5e76\u4e0d\u662f\u4ec0\u4e48\u4e25\u8c28\u7684\u5b66\u672f\u7b14\u8bb0\uff09\u3002 \u6f14\u7ece \u00b6 \u6587\u7ae0\u4f0a\u59cb\uff0c\u6211\u60f3\u5148\u5c06\u6211\u4eca\u5929\u7684\u5b66\u4e60\u8def\u5f84\u590d\u8ff0\u4e00\u6b21\uff0c\u4ee5\u4fbf\u4e4b\u540e\u7684\u56de\u987e\u3002 \u4fe1\u606f \uff0cinformation.\u4e00\u4e2a\u91cd\u8981\u7684\u4f5c\u7528\u5c31\u662f\u51cf\u5c11\u6211\u4eec\u5bf9\u4e00\u4ef6\u4e8b\u60c5\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u6253\u5f00\u5929\u6c14APP\u5c31\u53ef\u4ee5\u770b\u5230\u63a5\u4e0b\u6765\u7684\u5929\u6c14\u600e\u4e48\u6837\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u5bf9\u63a5\u4e0b\u6765\u7684\u5929\u6c14\u7684\u4e0d\u786e\u5b9a\u3002\u4f46\u662f\u4fe1\u606f\u7684\u5ea6\u91cf\u4e00\u76f4\u90fd\u6ca1\u6709\u76f8\u5173\u7684\u5b9a\u4e49\uff0c\u7c7b\u4f3c\u53e4\u4ee3\u4eba\u4eec\u77e5\u9053\u4e00\u4e2a\u4eba\u529b\u91cf\u7684\u5927\u5c0f\u4f46\u662f\u4e0d\u77e5\u9053\u529b\u5177\u4f53\u7684\u5ea6\u91cf\u662f\u600e\u6837\uff0c\u53ea\u4f1a\u7c97\u6d45\u7684\u8fdb\u884c\u6bd4\u8f83\u3002 \u300a\u6570\u5b66\u4e4b\u7f8e\u300b\u4e2d\u8fd9\u6837\u8bb2\u5230: Cite \u300c\u76f4\u52301948\u5e74\uff0c\u9999\u519c\uff08Claude Shannon\uff09\u5728\u4ed6\u8457\u540d\u7684\u8bba\u6587\u201c\u901a\u4fe1\u7684\u6570\u5b66\u539f\u7406\u201d\uff08A Mathmatic Theory of Communication\uff09\u4e2d\u63d0\u51fa\u4e86\u201c\u4fe1\u606f\u71b5\u201d\u7684\u6982\u5ff5\uff0c\u624d\u89e3\u51b3\u4e86\u4fe1\u606f\u7684\u5ea6\u91cf\u95ee\u9898\uff0c\u5e76\u4e14\u91cf\u5316\u51fa\u4fe1\u606f\u7684\u4f5c\u7528\u3002\u300d \u8bb0\u5f97\u5728\u8bb2softmax\u56de\u5f52 \uff08\u7535\u5b50\u8bfe\u4ef6\u5730\u5740\uff09 \u7684\u65f6\u5019\uff0cD2L cite:1 \u4e2d\u5bf9\u71b5\u6709\u8fd9\u6837\u7684\u5b9a\u4e49\uff1a \\[ H[P]=\\sum_{j}-P(j) \\log P(j) \\] \u800c\u7c7b\u4f3c\u7684\u4f5c\u4e3asoftmax\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\u4ea4\u53c9\u71b5\u635f\u5931\uff08cross-entropy loss\uff09\u7684\u5b9a\u4e49\u662f\u8fd9\u6837\u7684\uff1a \\[ l( y , \\hat{ y })=-\\sum_{j=1}^{q} y_{j} \\log \\hat{y}_{j} \\] \u5de6\u8fb9\u81ea\u4e0d\u5fc5\u8bf4\uff0c\u4ee3\u8868\u81ea\u53d8\u91cf\u4e3a\u6807\u7b7e\u503c \\(y\\) \u4ee5\u53ca\u6a21\u578b\u9884\u6d4b\u503c \\(\\hat{y}\\) \u7684\u635f\u5931\uff08loss\uff09\u51fd\u6570\u3002 \u53f3\u8fb9\u5219\u662f\u5148\u6765\u4e00\u4e2a\u4e0d\u77e5\u6240\u4e91\u7684\u8d1f\u53f7\uff0c\u7136\u540e\u4e00\u8bb0\u897f\u683c\u739b\u51b2\u62f3\u5c31\u5df2\u7ecf\u770b\u7684\u4eba\u5934\u660f\u8111\u80c0\u4e86\uff0c\u63a5\u4e0b\u6765\u53c8\u662f\u4e00\u4e2a\u6807\u7b7e\u503c \\(y\\) \u4e58\u4ee5\u4e00\u4e2a\u6a21\u578b\u9884\u6d4b\u503c \\(\\hat{y}\\) \u7684\u5bf9\u6570 \\(\\log \\hat{y}\\) \u3002\u5927\u8111\u5df2\u7ecf\u5904\u7406\u4e0d\u4e86\u5176\u4e2d\u7684\u903b\u8f91\u5b95\u673a\u4e86\u3002\u8111\u5b50\u4e2d\u53ea\u5269\u4e24\u4e2a\u95ee\u9898\uff1a Question \u4e3a\u4ec0\u4e48\u8fd9\u6837\u8fc7\u5206\u8e42\u8e8f\u6211\u7684\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u7684\u51fa\u6807\u7b7e\u548c\u9884\u6d4b\u503c\u7684\u5dee\u8ddd\uff1f \u4e3a\u4ec0\u4e48\u5b83\u4f1a\u6bd4\u6700\u5c0f\u4e8c\u4e58\u6cd5\u8981\u6765\u5f97\u597d\u4ee5\u81f3\u4e8e\u5728\u8fd9\u91cc\u4f7f\u7528\uff1f \u8981\u660e\u767d\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u5149\u662f\u770b\u6559\u6750\uff0c\u534a\u4e2a\u4e16\u7eaa\u4e5f\u4e0d\u4e00\u5b9a\u660e\u767d\u7684\u6bd4\u7b2c\u4e00\u773c\u66f4\u591a\uff0c\u6240\u4ee5\u54b1\u4eec\u6765\u5148\u8bb2\u70b9\u6545\u4e8b\u3002 \u7ee7\u7eed\u8bb2\u5230\u9999\u519c\u5f00\u521b\u4e86\u4fe1\u606f\u8bba\u3002\u90a3\u9996\u5148\uff0c\u4fe1\u606f\u600e\u4e48\u5ea6\u91cf\u5462\uff1f \u4e0a\u6587\u63d0\u5230\uff0c\u4fe1\u606f\u91cd\u8981\u7684\u4f5c\u7528\u5c31\u662f\u51cf\u5c11\u6211\u4eec\u5bf9\u4e00\u4ef6\u4e8b\u60c5\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u90a3\u4e48\u4fe1\u606f\u91cf\u81ea\u7136\u53ef\u4ee5\u7528\u51cf\u5c11\u7684\u4e0d\u786e\u5b9a\u6027\u7684\u91cf\u6765\u5b9a\u4e49\u3002\u8fd9\u4e5f\u5c31\u5f15\u5165\u4e86\u6982\u7387\u8bba\u7684\u77e5\u8bc6\u3002 \u4e00\u4e2a\u4e8b\u4ef6 \\(x\\) \u53d1\u751f\u7684\u6982\u7387\u662f \\(P(x)\\) \uff0c\u5176\u503c\u5728 \\((0,1)\\) \u95f4\uff0c \\(P(x)\\) \u8d8a\u9ad8\u4e8b\u4ef6\u53d1\u751f\u7684\u53ef\u80fd\u6027\u8d8a\u9ad8\u3002\u6bd4\u5982\u7b80\u5355\u5730\uff0c\u63b7\u4e00\u6b21\u786c\u5e01\u6b63\u9762\u671d\u4e0a\u7684\u6982\u7387\u5c31\u662f0.5\u3002 \u5982\u679c\u63b7\u4e24\u6b21\u786c\u5e01\u7ed3\u679c\u90fd\u662f\u671d\u4e0a\uff0c\u8fd9\u6837\u7684\u4e8b\u60c5\u53d1\u751f\u7684\u6982\u7387\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\(P(\u6b63\u9762\u671d\u4e0a)\\times P(\u6b63\u9762\u671d\u4e0a)=0.5^2=0.25\\) \u800c\u6ca1\u6709\u63b7\u51fa\u53bb\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u77e5\u9053\u7ed3\u679c\u4f1a\u662f\u600e\u4e48\u6837\uff0c\u4f46\u662f\u4e00\u65e6\u77e5\u9053\u7ed3\u679c\uff0c\u6bd4\u5982\u6b63\u9762\u671d\u4e0a\u4e86\uff0c\u90a3\u4e48\u4e8b\u60c5\u5c31\u662f\u786e\u5b9a\u7684\u4e86\uff0c\u4ece0.5\u53d8\u6210\u4e861\u3002 \u5176\u5b9e\u5728\u751f\u6d3b\u4e2d\u6709\u4e00\u79cd\u53ef\u4ee5\u5c06\u6982\u7387\u548c\u4fe1\u606f\u7684\u4ef7\u503c\u76f4\u63a5\u8054\u7cfb\u8d77\u6765\u7684\u60c5\u51b5\uff1a\u535a\u5f69\u3002 \u6bd4\u5982\u8bf4\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u4e2d\uff1a\u8d4c\u9ab0\u5b50\u5927\u5c0f\u3002\u62bc10\u4e2a\u91d1\u5e01\uff0c\u731c\u9ab0\u5b50\u70b9\u6570\u662f\u5927\u662f\u5c0f\uff0c\u731c\u4e2d\u4e86\u5c31\u53ef\u4ee5\u83b7\u5f9710\u4e2a\u91d1\u5e01\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e2d\u731c\u5bf9\u731c\u9519\u7684\u6982\u7387\u90fd\u662f0.5\uff0c\u5982\u679c\u6211\u6709\u672a\u535c\u5148\u77e5\u7684\u80fd\u529b\uff0c\u544a\u8bc9\u4f60\u7b2c\u4e00\u6b21\u7684\u7ed3\u679c\u662f\u5927\uff0c\u90a3\u4e48\u8fd9\u6761\u4fe1\u606f\u5c31\u503c20\u4e2a\u91d1\u5e01\u3002 \u800c\u8fd9\u76d8\u63b7\u4e24\u4e2a\u9ab0\u5b50\u540c\u65f6\u8f93\u8d62\u7684\u500d\u7387\u7ffb\u500d\u7684\u8bdd\uff0c\u9884\u8a00\u5c31\u503c\uff1a \\(10\\times 2^2 =40\\) \u4e2a\u91d1\u5e01\u3002\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u8fd9\u4e2a\u7b54\u6848\u6240\u4ee3\u8868\u7684\u7ed3\u679c\u53d1\u751f\u7684\u6982\u7387\u5c31\u964d\u5230\u4e86 \\(0.5^2=0.25\\) \u3002 \u8fd9\u4e2a\u65f6\u5019\u6211\u7684\u9884\u8a00\u7684\u4ef7\u503c\u5c31\u968f\u7740\u6e38\u620f\u8f6e\u6570\u5448\u6307\u6570\u4e0a\u5347\uff1a\u9884\u8a0010\u5c40\u5c31\u503c10240\u4e2a\u91d1\u5e01\uff01 \u867d\u7136\u6211\u5e76\u4e0d\u80fd\u672a\u535c\u5148\u77e5\uff0c\u4f46\u662f\u6211\u77e5\u9053\u6211\u4eec\u5982\u679c\u60f3\u5bf9\u67d0\u6761\u4fe1\u606f\u7684\u4ef7\u503c\u8fdb\u884c\u5ea6\u91cf\uff0c\u4fe1\u606f\u91cf\u5fc5\u987b\u662f\u548c\u4fe1\u606f\u6240\u4ee3\u8868\u7684\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u76f8\u5173\u3002 \u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 \\(f(x)\\) \u3002\u90a3\u4e48\uff0c\u201c\u8fd9\u6b21\u63b7\u786c\u5e01\u7684\u7ed3\u679c\u662f\u6b63\u9762\u3002\u201d\u8fd9\u6761\u4fe1\u606f\u7684\u4fe1\u606f\u91cf\u5c31\u53ef\u4ee5\u8868\u8fbe\u4e3a\uff1a \\(f(0.5)\\) \uff0c\u5373 \\(f\\) \u8868\u793a\u4ece\u4fe1\u606f\u5230\u4fe1\u606f\u91cf\u7684\u51fd\u6570\uff0c\u800c\u81ea\u53d8\u91cf \\(x\\) \u662f\u4fe1\u606f\u4e2d\u8574\u542b\u7684\u6982\u7387\u3002 \u5982\u679c\u6211\u4eec\u671f\u5f85\u4fe1\u606f\u91cf\u662f\u4e00\u79cd\u53ef\u4ee5\u76f4\u63a5\u7684\uff08\u4e5f\u5c31\u662f\u7ebf\u6027\uff09\u53e0\u52a0\u7684\u5ea6\u91cf\u3002 \u90a3\u4fe1\u606f\u91cf\u53ef\u4ee5\u8868\u8fbe\u4e3a\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u7684\u4fe1\u606f\u91cf\u52a0\u4e0a\u7b2c\u4e8c\u4e2a\u4e8b\u4ef6\u7684\u4fe1\u606f\u91cf\uff1a \\(f(0.25)=f(0.5)+f(0.5)\\) \u3002 \u800c\u6982\u7387\u4e0a\u4e24\u4e2a\u4e8b\u4ef6\u63a5\u8fde\u53d1\u751f\u7684\u6982\u7387\u7b49\u4e8e\u4e24\u4e2a\u4e8b\u4ef6\u53d1\u751f\u6982\u7387\u7684\u4e58\u79ef\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u60f3\u5230\uff1a\u8fd9\u4e2a\u51fd\u6570\u91cc\u5e94\u8be5\u6709 \\(\\log_{n}(P(x))\\) \u3002 \u800c\u4fe1\u606f\u7684\u4ef7\u503c\u4f1a\u968f\u7740\u6982\u7387\u964d\u4f4e\u800c\u4e0a\u5347\uff0c\u6240\u4ee5\u8fd8\u8981\u6709\u4e2a\u8d1f\u53f7\u3002 \u4f46\u662f\u5bf9\u6570\u7684\u5b9a\u4e49\u57df\u5e76\u4e0d\u5305\u62ec\u8d1f\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u5c06\u76ee\u5149\u8f6c\u5411\u5176\u4ed6\u7684\u8d1f\u76f8\u5173\u7684\u51fd\u6570\u3002 \u6700\u540e\u53d1\u73b0\u9009\u62e9 \\(\\frac{1}{x}\\) \u662f\u6700\u5408\u9002\u7684\u3002 \u56e0\u4e3a\uff1a \\[ \\log _{n} M^{a}=a \\log _{n} M \\] \u4e5f\u5c31\u662f\u8bf4 \\(\\log_{n}(\\frac{1}{x})=-\\log_{n}(x)\\) \u3002 \u8fd9\u4e0d\u6b63\u662f\u4e0a\u9762\u90a3\u4e2a\u4ea4\u53c9\u71b5\u5b9a\u4e49\u4e2d\u8d1f\u53f7\u7684\u6765\u6e90\u561b\uff0c\u575a\u5b9a\u4e86\u6211\u8ba4\u8bc6\u4ea4\u53c9\u71b5\u7684\u4fe1\u5fc3\u3002 \u5bf9\u6570\u4e2d\u7684\u5e95\u6570\u6309\u7406\u662f\u4e0d\u4f1a\u5bf9\u6211\u4eec\u7684\u5ea6\u91cf\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u7684\u3002\u4f46\u662f\u4f17\u6240\u5468\u77e5\uff0c\u73b0\u5728\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u51e0\u4e4e\u90fd\u662f\u57fa\u4e8e\u51af\u8bfa\u4f9d\u66fc\u67b6\u6784\u7684\uff0c\u91c7\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u3002\u4e8c\u8fdb\u5236\u5b58\u50a8\u5bf9\u4e8e\u8ba1\u7b97\u673a\u800c\u8a00\u5177\u6709\u5929\u7136\u7684\u4f18\u52bf\uff0c\u6240\u4ee5\u4e00\u822c\u5728\u4fe1\u606f\u8bba\u4e2d\u91c7\u75282\u4f5c\u4e3a\u5bf9\u6570\u7684\u5e95\u6570\u3002\u5e76\u4e14\u5f80\u5f80\u5ffd\u7565\u5e95\u65702\u76f4\u63a5\u8bb0\u4f5c \\(\\log n\\) . \u73b0\u5728\u8fd9\u4e2a\u5b9a\u4e49\u5f0f\u5c31\u53d8\u6210\u4e86 \\(f(P(x))=-\\log(P(x))\\) \uff0c\u73b0\u5728\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u662f\u9999\u519c\u5bf9\u4e8e\u4fe1\u606f\u91cf\u7684\u5b9a\u4e49\u4e86\u3002\u8fd9\u65f6\u957f\u547c\u4e00\u53e3\u6c14\uff0c\u603b\u7b97\u662f\u5bf9\u4e00\u4e2a\u4fe1\u606f\u7684\u91cf\u6709\u4e86\u6982\u5ff5\u3002 \u90a3\u63a5\u4e0b\u6765\u8ba9\u6211\u5eb7\u5eb7\u4fe1\u606f\u71b5\u53c8\u662f\u4ec0\u4e48\uff01 \u71b5\u8fd9\u4e2a\u6982\u5ff5\u5bf9\u5e94\u7684\u4e00\u822c\u662f\u4e00\u4e2a\u7cfb\u7edf\uff0c\u6b63\u5982\u4fe1\u606f\u5f80\u5f80\u4e0d\u662f\u5355\u72ec\u7684\u4e0d\u5bf9\u5176\u4ed6\u4e8b\u4ef6\u6709\u5f71\u54cd\u7684\uff1a\u6bd4\u5982\u4f60\u542c\u4e86\u6211\u7684\u9884\u8a00\u4e24\u6b21\u90fd\u62bc\u5bf9\u4e86\uff0c\u4f46\u662f\u4f60\u7684\u5bf9\u624b\u4eec\u5374\u906d\u6b83\u4e86\uff0c\u6240\u4ee5\u6211\u7684\u9884\u8a00\u5bf9\u4ed6\u4eec\u4e5f\u662f\u6709\u4ef7\u503c\u7684\u3002 \u6bd4\u5982\u8bf4\u5982\u679c\u4e0d\u77e5\u9053\u4e8b\u60c5\u7684\u7ed3\u679c\uff0c\u4e24\u4e2a\u9ab0\u5b50\u9009\u548c\u4f60\u9009\u62e9\u4e0d\u4e00\u6837\u7684\u8bdd\uff0c\u4f60\u8f93\u800c\u4ed6\u8d62\u7684\u6982\u7387\u6709\uff1a0.75\u3002\u5bf9\u4e8e\u4ed6\u800c\u8a00\uff0c\u4ed6\u8d62\u7684\u4fe1\u606f\u91cf\u5c31\u662f \\(-\\log(0.75)\\) \u3002\u5f88\u663e\u7136\u6bd4\u5bf9\u4f60\u7684\u4ef7\u503c\u4f4e\u3002 \u800c\u5bf9\u7cfb\u7edf\u7684\u800c\u8a00\uff0c\u786e\u5b9a\u6027\u9ad8\u5f97\u591a\uff0c\u56e0\u4e3a\u7ed3\u679c\u4e0a\u770b\u4f60\u8f93\u7684\u6982\u7387\u5f88\u5927\uff0c\u6bd4\u5355\u63b7\u4e00\u4e2a\u7684\u65f6\u5019\u201c\u786e\u5b9a\u201d\u7684\u591a\u3002 \u90a3\u5bf9\u4e8e\u8fd9\u4e24\u5c40\u6e38\u620f\u6765\u8bf4\uff0c\u6574\u4f53\u7684\u4fe1\u606f\u91cf\uff0c\u4e5f\u5c31\u662f\u7cfb\u7edf\u7684\u4fe1\u606f\u71b5\u5982\u4f55\u5462\uff1f \u662f\u4e24\u8005\u7b80\u5355\u52a0\u548c\u5417\uff1f \u5982\u679c\u662f\u7684\u8bdd\uff0c\u90a3\u4e48\u5355\u63b7\u4e00\u4e2a\u9ab0\u5b50\u7684\u6574\u4f53\u4fe1\u606f\u71b5\u4f1a\u662f\uff1a \\(2\\times-log\\frac{1}{2}=2\\) \u800c\u63b7\u4e24\u4e2a\u9ab0\u5b50\u7684\u6574\u4f53\u4fe1\u606f\u71b5\u4f1a\u662f\uff1a \\(-\\log(0.75)-\\log(0.25)\\approx 2.415\\) \u3002\u660e\u660e\u5bf9\u4e8e\u6574\u4f53\u800c\u8a00\uff0c\u7ed3\u679c\u662f\u66f4\u52a0\u7684\u786e\u5b9a\u7684\uff0c\u8fd9\u548c\u6211\u4eec\u5bf9\u4fe1\u606f\u71b5\u7684\u671f\u5f85\u4e0d\u7b26\u3002 \u5c0f\u5b66\u7684\u65f6\u5019\u6211\u4eec\u5b66\u8fc7\u52a0\u6743\u5e73\u5747\u6570\u7684\u6982\u5ff5\uff1a\u5c06\u5404\u6570\u503c\u4e58\u4ee5\u76f8\u5e94\u7684\u6743\u6570\uff0c\u7136\u540e\u52a0\u603b\u6c42\u548c\u5f97\u5230\u603b\u4f53\u503c\uff0c\u518d\u9664\u4ee5\u603b\u7684\u5355\u4f4d\u6570\u3002 \u56e0\u4e3a\u6bcf\u4e00\u4e2a\u6570\u503c\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5f71\u54cd\u5927\u5c0f\u5e76\u4e0d\u50cf\u6bcf\u4e00\u5206\u94b1\u5bf9\u81ea\u5df1\u8d22\u5bcc\u7684\u5f71\u54cd\u4e00\u6837\u4e00\u81f4\u3002\u6bcf\u4e00\u6761\u4fe1\u606f\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5f71\u54cd\u4e5f\u662f\u6709\u6743\u91cd\u7684\u3002 \u5373\u6bcf\u4e2a\u4e8b\u4ef6\u5e76\u4e0d\u662f\u540c\u7b49\u6982\u7387\u53d1\u751f\u7684\u3002\u5c31\u50cf\u662f\u5373\u4f7f\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\u4e4b\u540e\u90fd\u6709\u53ef\u80fd\u53d1\u751f\u610f\u5916\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u603b\u4f1a\u4f7f\u6211\u4eec\u5728\u4efb\u4f55\u65f6\u523b\u90fd\u8c28\u5c0f\u614e\u5fae\uff0c\u53ea\u6709\u5728\u9762\u5bf9\u7684\u98ce\u9669\u6bd4\u8f83\u5927\uff0c\u4e5f\u5c31\u662f\u53d1\u751f\u7684\u6982\u7387\u8f83\u5927\u7684\u5371\u9669\u4e8b\u4ef6\uff0c\u624d\u4f1a\u6253\u8d77\u767e\u5206\u4e4b\u516b\u767e\u7684\u4e13\u6ce8\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u7cfb\u7edf\u800c\u8a00\uff0c\u6bcf\u6761\u4fe1\u606f\u5bf9\u4e8e\u7cfb\u7edf\u7684\u8d21\u732e\u503c\u5fc5\u7136\u548c\u5b83\u53d1\u751f\u7684\u6982\u7387\u662f\u76f8\u5173\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4fe1\u606f\u71b5\u7684\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\(H(P(x),-\\log(P(x)))\\) \uff0c\u5f53\u7136\uff0c\u5728\u6211\u4eec\u4e86\u89e3\u4e86\u5177\u4f53\u5728\u51fd\u6570\u4e2d\u4e24\u90e8\u5206\u7684\u5173\u7cfb\uff0c\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u4e8c\u5143\u51fd\u6570\u8f6c\u6362\u6210\u4e00\u5143\u51fd\u6570\u3002 \u52a0\u6743\u5e73\u5747\u6570\u91cc\uff0c\u6743\u91cd\u548c\u5bf9\u5e94\u7684\u6570\u503c\u662f\u76f8\u4e58\u7684\u5173\u7cfb\uff0c\u81ea\u7136\u6211\u4eec\u5c31\u4f1a\u8054\u60f3\u4f1a\u4e0d\u4f1a\u5728\u8fd9\u91cc\u4e5f\u662f\u76f8\u4e58\u7684\u5173\u7cfb\uff1f \u800c\u6743\u91cd\u4ee3\u8868\u7684\u610f\u601d\u6b63\u662f\u53d6\u51b3\u4e8e\u5404\u6570\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff08\u9891\u6570\uff09\uff0c\u548c\u6982\u7387\u4e0d\u80fd\u8bf4\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u80fd\u8bf4\u662f\u5de7\u5de7\u4ed6\u5988\u7ed9\u5de7\u5de7\u5f00\u95e8\u2014\u2014\u2014\u2014\u5de7\u5230\u5bb6\u4e86\u3002 \u4e8e\u662f\u6211\u4eec\u6784\u5efa\u7684\u4fe1\u606f\u71b5","title":"\u725b\u987f\u529b\u5b66\u4e0e\u4ea4\u53c9\u71b5\u2014\u2014\u2014\u2014\u5173\u4e8e\u5b9a\u4e49\u4e0e\u6982\u5ff5\u7684\u601d\u8003"},{"location":"%E7%89%9B%E9%A1%BF%E5%8A%9B%E5%AD%A6%E4%B8%8E%E4%BA%A4%E5%8F%89%E7%86%B5%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8E%E5%AE%9A%E4%B9%89%E4%B8%8E%E6%A6%82%E5%BF%B5%E7%9A%84%E6%80%9D%E8%80%83/#_1","text":"2021.11.10","title":"\u725b\u987f\u529b\u5b66\u4e0e\u4ea4\u53c9\u71b5\u2014\u2014\u2014\u2014\u5173\u4e8e\u5b9a\u4e49\u4e0e\u6982\u5ff5\u7684\u601d\u8003"},{"location":"%E7%89%9B%E9%A1%BF%E5%8A%9B%E5%AD%A6%E4%B8%8E%E4%BA%A4%E5%8F%89%E7%86%B5%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8E%E5%AE%9A%E4%B9%89%E4%B8%8E%E6%A6%82%E5%BF%B5%E7%9A%84%E6%80%9D%E8%80%83/#_2","text":"\u672c\u6587\u662f\u4eca\u5929\u5b66\u4e60\u4e86\u4ea4\u53c9\u71b5\u7684\u6982\u5ff5\u4e4b\u540e\u7684\u4e00\u7bc7\u8bb0\u5f55\u6027\u7684\u6587\u7ae0\uff0c\u539f\u521b\u6027\u7565\u4f4e\uff0c\u6765\u6e90\u4e3b\u8981\u662f\u300a\u6570\u5b66\u4e4b\u7f8e\u300b\u7b2c6\u7ae0\u2014\u2014\u4fe1\u606f\u7684\u5ea6\u91cf\u4e0e\u4f5c\u7528\uff0c\u91cc\u9762\u8bb2\u89e3\u4e86\u4fe1\u606f\u8bba\u7684\u57fa\u672c\u77e5\u8bc6\uff1a\u4fe1\u606f\u91cf\u3001\u71b5\uff0c\u53c8\u901a\u8fc7\u4e92\u4fe1\u606f\u5f15\u51fa\u4e86\u4ea4\u53c9\u71b5\u3002\u4ee5\u53caB\u7ad9up\u4e3b \u738b\u6728\u5934\u5b66\u79d1\u5b66 \u7684 \u201c\u4ea4\u53c9\u71b5\u201d\u5982\u4f55\u505a\u635f\u5931\u51fd\u6570\uff1f\u6253\u5305\u7406\u89e3\u201c\u4fe1\u606f\u91cf\u201d\u3001\u201c\u6bd4\u7279\u201d\u3001\u201c\u71b5\u201d\u3001\u201cKL\u6563\u5ea6\u201d\u3001\u201c\u4ea4\u53c9\u71b5\u201d","title":"\u6982\u8ff0"},{"location":"%E7%89%9B%E9%A1%BF%E5%8A%9B%E5%AD%A6%E4%B8%8E%E4%BA%A4%E5%8F%89%E7%86%B5%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8E%E5%AE%9A%E4%B9%89%E4%B8%8E%E6%A6%82%E5%BF%B5%E7%9A%84%E6%80%9D%E8%80%83/#_3","text":"\u4e4b\u524d\u81ea\u5b66\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u57fa\u7840\u77e5\u8bc6\u7684\u65f6\u5019\u5b66\u4e60\u5230\u4e86\u4ea4\u53c9\u71b5\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u867d\u7136\u5bf9\u4fe1\u606f\u8bba\u3001\u9999\u519c\u7684\u4e00\u4e9b\u8d21\u732e\u4ee5\u53ca\u4fe1\u606f\u7684\u71b5\u7565\u6709\u8033\u95fb\uff0c\u4f46\u662f\u5b9e\u5728\u770b\u4e0d\u51fa\u4e3a\u4ec0\u4e48\u5982\u4e0b\u5f62\u5f0f\u7684\u4ea4\u53c9\u71b5\u516c\u5f0f\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u3002 \\[ \\min -\\left(\\sum_{i=1}^{n}\\left(x_{i} \\cdot \\log y_{i}+\\left(1-x_{i}\\right) \\cdot \\log \\left(1-y_{i}\\right)\\right)\\right)\\tag{1} \\] \\[ \u4ea4\u53c9\u71b5 \\] \u4f46\u662f\u4eca\u5929\u770b\u300a\u6570\u5b66\u4e4b\u7f8e\u300b\u7684\u65f6\u5019\u8bb2\u5230\u4e86\u8fd9\u4e2a\u77e5\u8bc6\u70b9\uff0c\u800c\u4e14\u5de7\u5408\u7684\u662f\u5728\u51e0\u5929\u524d\u6b63\u597d\u770b\u5230\u4e86\u738b\u6728\u5934\u8bb2\u7684\u5173\u4e8e\u68af\u5ea6\u4e0b\u964d\u7684\u89c6\u9891\uff0c\u4ed6\u90a3\u79cd\u7531\u95ee\u9898\u6b65\u6b65\u6df1\u5165\u5f15\u51fa\u5173\u952e\u77e5\u8bc6\u70b9\u7684\u6559\u5b66\u65b9\u6cd5\u8ba9\u6211\u5bf9\u5f88\u591a\u6982\u5ff5\u6709\u4e86\u4e0d\u540c\u4e8e\u4e66\u672c\u4e0a\u523b\u677f\u7684\u516c\u5f0f\u7684\u66f4\u6df1\u7684\u7406\u89e3\u3002\u4e8e\u662f\u53c8\u627e\u51fa\u4ed6\u8bb2\u7684\u4ea4\u53c9\u71b5\u7684\u8bb2\u89e3\u89c6\u9891\uff0c\u9605\u6bd5\u6df1\u6709\u611f\u89e6\uff0c\u4ee5\u6b64\u6587\u8bb0\u5f55\u4e0b\u5f53\u4e0b\u7684\u5fc3\u60c5\uff08\u6240\u4ee5\u5e76\u4e0d\u662f\u4ec0\u4e48\u4e25\u8c28\u7684\u5b66\u672f\u7b14\u8bb0\uff09\u3002","title":"\u524d\u8a00"},{"location":"%E7%89%9B%E9%A1%BF%E5%8A%9B%E5%AD%A6%E4%B8%8E%E4%BA%A4%E5%8F%89%E7%86%B5%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E5%85%B3%E4%BA%8E%E5%AE%9A%E4%B9%89%E4%B8%8E%E6%A6%82%E5%BF%B5%E7%9A%84%E6%80%9D%E8%80%83/#_4","text":"\u6587\u7ae0\u4f0a\u59cb\uff0c\u6211\u60f3\u5148\u5c06\u6211\u4eca\u5929\u7684\u5b66\u4e60\u8def\u5f84\u590d\u8ff0\u4e00\u6b21\uff0c\u4ee5\u4fbf\u4e4b\u540e\u7684\u56de\u987e\u3002 \u4fe1\u606f \uff0cinformation.\u4e00\u4e2a\u91cd\u8981\u7684\u4f5c\u7528\u5c31\u662f\u51cf\u5c11\u6211\u4eec\u5bf9\u4e00\u4ef6\u4e8b\u60c5\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u6253\u5f00\u5929\u6c14APP\u5c31\u53ef\u4ee5\u770b\u5230\u63a5\u4e0b\u6765\u7684\u5929\u6c14\u600e\u4e48\u6837\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u5bf9\u63a5\u4e0b\u6765\u7684\u5929\u6c14\u7684\u4e0d\u786e\u5b9a\u3002\u4f46\u662f\u4fe1\u606f\u7684\u5ea6\u91cf\u4e00\u76f4\u90fd\u6ca1\u6709\u76f8\u5173\u7684\u5b9a\u4e49\uff0c\u7c7b\u4f3c\u53e4\u4ee3\u4eba\u4eec\u77e5\u9053\u4e00\u4e2a\u4eba\u529b\u91cf\u7684\u5927\u5c0f\u4f46\u662f\u4e0d\u77e5\u9053\u529b\u5177\u4f53\u7684\u5ea6\u91cf\u662f\u600e\u6837\uff0c\u53ea\u4f1a\u7c97\u6d45\u7684\u8fdb\u884c\u6bd4\u8f83\u3002 \u300a\u6570\u5b66\u4e4b\u7f8e\u300b\u4e2d\u8fd9\u6837\u8bb2\u5230: Cite \u300c\u76f4\u52301948\u5e74\uff0c\u9999\u519c\uff08Claude Shannon\uff09\u5728\u4ed6\u8457\u540d\u7684\u8bba\u6587\u201c\u901a\u4fe1\u7684\u6570\u5b66\u539f\u7406\u201d\uff08A Mathmatic Theory of Communication\uff09\u4e2d\u63d0\u51fa\u4e86\u201c\u4fe1\u606f\u71b5\u201d\u7684\u6982\u5ff5\uff0c\u624d\u89e3\u51b3\u4e86\u4fe1\u606f\u7684\u5ea6\u91cf\u95ee\u9898\uff0c\u5e76\u4e14\u91cf\u5316\u51fa\u4fe1\u606f\u7684\u4f5c\u7528\u3002\u300d \u8bb0\u5f97\u5728\u8bb2softmax\u56de\u5f52 \uff08\u7535\u5b50\u8bfe\u4ef6\u5730\u5740\uff09 \u7684\u65f6\u5019\uff0cD2L cite:1 \u4e2d\u5bf9\u71b5\u6709\u8fd9\u6837\u7684\u5b9a\u4e49\uff1a \\[ H[P]=\\sum_{j}-P(j) \\log P(j) \\] \u800c\u7c7b\u4f3c\u7684\u4f5c\u4e3asoftmax\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\u4ea4\u53c9\u71b5\u635f\u5931\uff08cross-entropy loss\uff09\u7684\u5b9a\u4e49\u662f\u8fd9\u6837\u7684\uff1a \\[ l( y , \\hat{ y })=-\\sum_{j=1}^{q} y_{j} \\log \\hat{y}_{j} \\] \u5de6\u8fb9\u81ea\u4e0d\u5fc5\u8bf4\uff0c\u4ee3\u8868\u81ea\u53d8\u91cf\u4e3a\u6807\u7b7e\u503c \\(y\\) \u4ee5\u53ca\u6a21\u578b\u9884\u6d4b\u503c \\(\\hat{y}\\) \u7684\u635f\u5931\uff08loss\uff09\u51fd\u6570\u3002 \u53f3\u8fb9\u5219\u662f\u5148\u6765\u4e00\u4e2a\u4e0d\u77e5\u6240\u4e91\u7684\u8d1f\u53f7\uff0c\u7136\u540e\u4e00\u8bb0\u897f\u683c\u739b\u51b2\u62f3\u5c31\u5df2\u7ecf\u770b\u7684\u4eba\u5934\u660f\u8111\u80c0\u4e86\uff0c\u63a5\u4e0b\u6765\u53c8\u662f\u4e00\u4e2a\u6807\u7b7e\u503c \\(y\\) \u4e58\u4ee5\u4e00\u4e2a\u6a21\u578b\u9884\u6d4b\u503c \\(\\hat{y}\\) \u7684\u5bf9\u6570 \\(\\log \\hat{y}\\) \u3002\u5927\u8111\u5df2\u7ecf\u5904\u7406\u4e0d\u4e86\u5176\u4e2d\u7684\u903b\u8f91\u5b95\u673a\u4e86\u3002\u8111\u5b50\u4e2d\u53ea\u5269\u4e24\u4e2a\u95ee\u9898\uff1a Question \u4e3a\u4ec0\u4e48\u8fd9\u6837\u8fc7\u5206\u8e42\u8e8f\u6211\u7684\u516c\u5f0f\u53ef\u4ee5\u8868\u793a\u7684\u51fa\u6807\u7b7e\u548c\u9884\u6d4b\u503c\u7684\u5dee\u8ddd\uff1f \u4e3a\u4ec0\u4e48\u5b83\u4f1a\u6bd4\u6700\u5c0f\u4e8c\u4e58\u6cd5\u8981\u6765\u5f97\u597d\u4ee5\u81f3\u4e8e\u5728\u8fd9\u91cc\u4f7f\u7528\uff1f \u8981\u660e\u767d\u8fd9\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u5149\u662f\u770b\u6559\u6750\uff0c\u534a\u4e2a\u4e16\u7eaa\u4e5f\u4e0d\u4e00\u5b9a\u660e\u767d\u7684\u6bd4\u7b2c\u4e00\u773c\u66f4\u591a\uff0c\u6240\u4ee5\u54b1\u4eec\u6765\u5148\u8bb2\u70b9\u6545\u4e8b\u3002 \u7ee7\u7eed\u8bb2\u5230\u9999\u519c\u5f00\u521b\u4e86\u4fe1\u606f\u8bba\u3002\u90a3\u9996\u5148\uff0c\u4fe1\u606f\u600e\u4e48\u5ea6\u91cf\u5462\uff1f \u4e0a\u6587\u63d0\u5230\uff0c\u4fe1\u606f\u91cd\u8981\u7684\u4f5c\u7528\u5c31\u662f\u51cf\u5c11\u6211\u4eec\u5bf9\u4e00\u4ef6\u4e8b\u60c5\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u90a3\u4e48\u4fe1\u606f\u91cf\u81ea\u7136\u53ef\u4ee5\u7528\u51cf\u5c11\u7684\u4e0d\u786e\u5b9a\u6027\u7684\u91cf\u6765\u5b9a\u4e49\u3002\u8fd9\u4e5f\u5c31\u5f15\u5165\u4e86\u6982\u7387\u8bba\u7684\u77e5\u8bc6\u3002 \u4e00\u4e2a\u4e8b\u4ef6 \\(x\\) \u53d1\u751f\u7684\u6982\u7387\u662f \\(P(x)\\) \uff0c\u5176\u503c\u5728 \\((0,1)\\) \u95f4\uff0c \\(P(x)\\) \u8d8a\u9ad8\u4e8b\u4ef6\u53d1\u751f\u7684\u53ef\u80fd\u6027\u8d8a\u9ad8\u3002\u6bd4\u5982\u7b80\u5355\u5730\uff0c\u63b7\u4e00\u6b21\u786c\u5e01\u6b63\u9762\u671d\u4e0a\u7684\u6982\u7387\u5c31\u662f0.5\u3002 \u5982\u679c\u63b7\u4e24\u6b21\u786c\u5e01\u7ed3\u679c\u90fd\u662f\u671d\u4e0a\uff0c\u8fd9\u6837\u7684\u4e8b\u60c5\u53d1\u751f\u7684\u6982\u7387\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\(P(\u6b63\u9762\u671d\u4e0a)\\times P(\u6b63\u9762\u671d\u4e0a)=0.5^2=0.25\\) \u800c\u6ca1\u6709\u63b7\u51fa\u53bb\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u77e5\u9053\u7ed3\u679c\u4f1a\u662f\u600e\u4e48\u6837\uff0c\u4f46\u662f\u4e00\u65e6\u77e5\u9053\u7ed3\u679c\uff0c\u6bd4\u5982\u6b63\u9762\u671d\u4e0a\u4e86\uff0c\u90a3\u4e48\u4e8b\u60c5\u5c31\u662f\u786e\u5b9a\u7684\u4e86\uff0c\u4ece0.5\u53d8\u6210\u4e861\u3002 \u5176\u5b9e\u5728\u751f\u6d3b\u4e2d\u6709\u4e00\u79cd\u53ef\u4ee5\u5c06\u6982\u7387\u548c\u4fe1\u606f\u7684\u4ef7\u503c\u76f4\u63a5\u8054\u7cfb\u8d77\u6765\u7684\u60c5\u51b5\uff1a\u535a\u5f69\u3002 \u6bd4\u5982\u8bf4\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u89c4\u5219\u4e2d\uff1a\u8d4c\u9ab0\u5b50\u5927\u5c0f\u3002\u62bc10\u4e2a\u91d1\u5e01\uff0c\u731c\u9ab0\u5b50\u70b9\u6570\u662f\u5927\u662f\u5c0f\uff0c\u731c\u4e2d\u4e86\u5c31\u53ef\u4ee5\u83b7\u5f9710\u4e2a\u91d1\u5e01\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e2d\u731c\u5bf9\u731c\u9519\u7684\u6982\u7387\u90fd\u662f0.5\uff0c\u5982\u679c\u6211\u6709\u672a\u535c\u5148\u77e5\u7684\u80fd\u529b\uff0c\u544a\u8bc9\u4f60\u7b2c\u4e00\u6b21\u7684\u7ed3\u679c\u662f\u5927\uff0c\u90a3\u4e48\u8fd9\u6761\u4fe1\u606f\u5c31\u503c20\u4e2a\u91d1\u5e01\u3002 \u800c\u8fd9\u76d8\u63b7\u4e24\u4e2a\u9ab0\u5b50\u540c\u65f6\u8f93\u8d62\u7684\u500d\u7387\u7ffb\u500d\u7684\u8bdd\uff0c\u9884\u8a00\u5c31\u503c\uff1a \\(10\\times 2^2 =40\\) \u4e2a\u91d1\u5e01\u3002\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u8fd9\u4e2a\u7b54\u6848\u6240\u4ee3\u8868\u7684\u7ed3\u679c\u53d1\u751f\u7684\u6982\u7387\u5c31\u964d\u5230\u4e86 \\(0.5^2=0.25\\) \u3002 \u8fd9\u4e2a\u65f6\u5019\u6211\u7684\u9884\u8a00\u7684\u4ef7\u503c\u5c31\u968f\u7740\u6e38\u620f\u8f6e\u6570\u5448\u6307\u6570\u4e0a\u5347\uff1a\u9884\u8a0010\u5c40\u5c31\u503c10240\u4e2a\u91d1\u5e01\uff01 \u867d\u7136\u6211\u5e76\u4e0d\u80fd\u672a\u535c\u5148\u77e5\uff0c\u4f46\u662f\u6211\u77e5\u9053\u6211\u4eec\u5982\u679c\u60f3\u5bf9\u67d0\u6761\u4fe1\u606f\u7684\u4ef7\u503c\u8fdb\u884c\u5ea6\u91cf\uff0c\u4fe1\u606f\u91cf\u5fc5\u987b\u662f\u548c\u4fe1\u606f\u6240\u4ee3\u8868\u7684\u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u76f8\u5173\u3002 \u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 \\(f(x)\\) \u3002\u90a3\u4e48\uff0c\u201c\u8fd9\u6b21\u63b7\u786c\u5e01\u7684\u7ed3\u679c\u662f\u6b63\u9762\u3002\u201d\u8fd9\u6761\u4fe1\u606f\u7684\u4fe1\u606f\u91cf\u5c31\u53ef\u4ee5\u8868\u8fbe\u4e3a\uff1a \\(f(0.5)\\) \uff0c\u5373 \\(f\\) \u8868\u793a\u4ece\u4fe1\u606f\u5230\u4fe1\u606f\u91cf\u7684\u51fd\u6570\uff0c\u800c\u81ea\u53d8\u91cf \\(x\\) \u662f\u4fe1\u606f\u4e2d\u8574\u542b\u7684\u6982\u7387\u3002 \u5982\u679c\u6211\u4eec\u671f\u5f85\u4fe1\u606f\u91cf\u662f\u4e00\u79cd\u53ef\u4ee5\u76f4\u63a5\u7684\uff08\u4e5f\u5c31\u662f\u7ebf\u6027\uff09\u53e0\u52a0\u7684\u5ea6\u91cf\u3002 \u90a3\u4fe1\u606f\u91cf\u53ef\u4ee5\u8868\u8fbe\u4e3a\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u7684\u4fe1\u606f\u91cf\u52a0\u4e0a\u7b2c\u4e8c\u4e2a\u4e8b\u4ef6\u7684\u4fe1\u606f\u91cf\uff1a \\(f(0.25)=f(0.5)+f(0.5)\\) \u3002 \u800c\u6982\u7387\u4e0a\u4e24\u4e2a\u4e8b\u4ef6\u63a5\u8fde\u53d1\u751f\u7684\u6982\u7387\u7b49\u4e8e\u4e24\u4e2a\u4e8b\u4ef6\u53d1\u751f\u6982\u7387\u7684\u4e58\u79ef\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u60f3\u5230\uff1a\u8fd9\u4e2a\u51fd\u6570\u91cc\u5e94\u8be5\u6709 \\(\\log_{n}(P(x))\\) \u3002 \u800c\u4fe1\u606f\u7684\u4ef7\u503c\u4f1a\u968f\u7740\u6982\u7387\u964d\u4f4e\u800c\u4e0a\u5347\uff0c\u6240\u4ee5\u8fd8\u8981\u6709\u4e2a\u8d1f\u53f7\u3002 \u4f46\u662f\u5bf9\u6570\u7684\u5b9a\u4e49\u57df\u5e76\u4e0d\u5305\u62ec\u8d1f\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u5c06\u76ee\u5149\u8f6c\u5411\u5176\u4ed6\u7684\u8d1f\u76f8\u5173\u7684\u51fd\u6570\u3002 \u6700\u540e\u53d1\u73b0\u9009\u62e9 \\(\\frac{1}{x}\\) \u662f\u6700\u5408\u9002\u7684\u3002 \u56e0\u4e3a\uff1a \\[ \\log _{n} M^{a}=a \\log _{n} M \\] \u4e5f\u5c31\u662f\u8bf4 \\(\\log_{n}(\\frac{1}{x})=-\\log_{n}(x)\\) \u3002 \u8fd9\u4e0d\u6b63\u662f\u4e0a\u9762\u90a3\u4e2a\u4ea4\u53c9\u71b5\u5b9a\u4e49\u4e2d\u8d1f\u53f7\u7684\u6765\u6e90\u561b\uff0c\u575a\u5b9a\u4e86\u6211\u8ba4\u8bc6\u4ea4\u53c9\u71b5\u7684\u4fe1\u5fc3\u3002 \u5bf9\u6570\u4e2d\u7684\u5e95\u6570\u6309\u7406\u662f\u4e0d\u4f1a\u5bf9\u6211\u4eec\u7684\u5ea6\u91cf\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u7684\u3002\u4f46\u662f\u4f17\u6240\u5468\u77e5\uff0c\u73b0\u5728\u6211\u4eec\u7684\u8ba1\u7b97\u673a\u51e0\u4e4e\u90fd\u662f\u57fa\u4e8e\u51af\u8bfa\u4f9d\u66fc\u67b6\u6784\u7684\uff0c\u91c7\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u3002\u4e8c\u8fdb\u5236\u5b58\u50a8\u5bf9\u4e8e\u8ba1\u7b97\u673a\u800c\u8a00\u5177\u6709\u5929\u7136\u7684\u4f18\u52bf\uff0c\u6240\u4ee5\u4e00\u822c\u5728\u4fe1\u606f\u8bba\u4e2d\u91c7\u75282\u4f5c\u4e3a\u5bf9\u6570\u7684\u5e95\u6570\u3002\u5e76\u4e14\u5f80\u5f80\u5ffd\u7565\u5e95\u65702\u76f4\u63a5\u8bb0\u4f5c \\(\\log n\\) . \u73b0\u5728\u8fd9\u4e2a\u5b9a\u4e49\u5f0f\u5c31\u53d8\u6210\u4e86 \\(f(P(x))=-\\log(P(x))\\) \uff0c\u73b0\u5728\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u662f\u9999\u519c\u5bf9\u4e8e\u4fe1\u606f\u91cf\u7684\u5b9a\u4e49\u4e86\u3002\u8fd9\u65f6\u957f\u547c\u4e00\u53e3\u6c14\uff0c\u603b\u7b97\u662f\u5bf9\u4e00\u4e2a\u4fe1\u606f\u7684\u91cf\u6709\u4e86\u6982\u5ff5\u3002 \u90a3\u63a5\u4e0b\u6765\u8ba9\u6211\u5eb7\u5eb7\u4fe1\u606f\u71b5\u53c8\u662f\u4ec0\u4e48\uff01 \u71b5\u8fd9\u4e2a\u6982\u5ff5\u5bf9\u5e94\u7684\u4e00\u822c\u662f\u4e00\u4e2a\u7cfb\u7edf\uff0c\u6b63\u5982\u4fe1\u606f\u5f80\u5f80\u4e0d\u662f\u5355\u72ec\u7684\u4e0d\u5bf9\u5176\u4ed6\u4e8b\u4ef6\u6709\u5f71\u54cd\u7684\uff1a\u6bd4\u5982\u4f60\u542c\u4e86\u6211\u7684\u9884\u8a00\u4e24\u6b21\u90fd\u62bc\u5bf9\u4e86\uff0c\u4f46\u662f\u4f60\u7684\u5bf9\u624b\u4eec\u5374\u906d\u6b83\u4e86\uff0c\u6240\u4ee5\u6211\u7684\u9884\u8a00\u5bf9\u4ed6\u4eec\u4e5f\u662f\u6709\u4ef7\u503c\u7684\u3002 \u6bd4\u5982\u8bf4\u5982\u679c\u4e0d\u77e5\u9053\u4e8b\u60c5\u7684\u7ed3\u679c\uff0c\u4e24\u4e2a\u9ab0\u5b50\u9009\u548c\u4f60\u9009\u62e9\u4e0d\u4e00\u6837\u7684\u8bdd\uff0c\u4f60\u8f93\u800c\u4ed6\u8d62\u7684\u6982\u7387\u6709\uff1a0.75\u3002\u5bf9\u4e8e\u4ed6\u800c\u8a00\uff0c\u4ed6\u8d62\u7684\u4fe1\u606f\u91cf\u5c31\u662f \\(-\\log(0.75)\\) \u3002\u5f88\u663e\u7136\u6bd4\u5bf9\u4f60\u7684\u4ef7\u503c\u4f4e\u3002 \u800c\u5bf9\u7cfb\u7edf\u7684\u800c\u8a00\uff0c\u786e\u5b9a\u6027\u9ad8\u5f97\u591a\uff0c\u56e0\u4e3a\u7ed3\u679c\u4e0a\u770b\u4f60\u8f93\u7684\u6982\u7387\u5f88\u5927\uff0c\u6bd4\u5355\u63b7\u4e00\u4e2a\u7684\u65f6\u5019\u201c\u786e\u5b9a\u201d\u7684\u591a\u3002 \u90a3\u5bf9\u4e8e\u8fd9\u4e24\u5c40\u6e38\u620f\u6765\u8bf4\uff0c\u6574\u4f53\u7684\u4fe1\u606f\u91cf\uff0c\u4e5f\u5c31\u662f\u7cfb\u7edf\u7684\u4fe1\u606f\u71b5\u5982\u4f55\u5462\uff1f \u662f\u4e24\u8005\u7b80\u5355\u52a0\u548c\u5417\uff1f \u5982\u679c\u662f\u7684\u8bdd\uff0c\u90a3\u4e48\u5355\u63b7\u4e00\u4e2a\u9ab0\u5b50\u7684\u6574\u4f53\u4fe1\u606f\u71b5\u4f1a\u662f\uff1a \\(2\\times-log\\frac{1}{2}=2\\) \u800c\u63b7\u4e24\u4e2a\u9ab0\u5b50\u7684\u6574\u4f53\u4fe1\u606f\u71b5\u4f1a\u662f\uff1a \\(-\\log(0.75)-\\log(0.25)\\approx 2.415\\) \u3002\u660e\u660e\u5bf9\u4e8e\u6574\u4f53\u800c\u8a00\uff0c\u7ed3\u679c\u662f\u66f4\u52a0\u7684\u786e\u5b9a\u7684\uff0c\u8fd9\u548c\u6211\u4eec\u5bf9\u4fe1\u606f\u71b5\u7684\u671f\u5f85\u4e0d\u7b26\u3002 \u5c0f\u5b66\u7684\u65f6\u5019\u6211\u4eec\u5b66\u8fc7\u52a0\u6743\u5e73\u5747\u6570\u7684\u6982\u5ff5\uff1a\u5c06\u5404\u6570\u503c\u4e58\u4ee5\u76f8\u5e94\u7684\u6743\u6570\uff0c\u7136\u540e\u52a0\u603b\u6c42\u548c\u5f97\u5230\u603b\u4f53\u503c\uff0c\u518d\u9664\u4ee5\u603b\u7684\u5355\u4f4d\u6570\u3002 \u56e0\u4e3a\u6bcf\u4e00\u4e2a\u6570\u503c\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5f71\u54cd\u5927\u5c0f\u5e76\u4e0d\u50cf\u6bcf\u4e00\u5206\u94b1\u5bf9\u81ea\u5df1\u8d22\u5bcc\u7684\u5f71\u54cd\u4e00\u6837\u4e00\u81f4\u3002\u6bcf\u4e00\u6761\u4fe1\u606f\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684\u5f71\u54cd\u4e5f\u662f\u6709\u6743\u91cd\u7684\u3002 \u5373\u6bcf\u4e2a\u4e8b\u4ef6\u5e76\u4e0d\u662f\u540c\u7b49\u6982\u7387\u53d1\u751f\u7684\u3002\u5c31\u50cf\u662f\u5373\u4f7f\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\u4e4b\u540e\u90fd\u6709\u53ef\u80fd\u53d1\u751f\u610f\u5916\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u603b\u4f1a\u4f7f\u6211\u4eec\u5728\u4efb\u4f55\u65f6\u523b\u90fd\u8c28\u5c0f\u614e\u5fae\uff0c\u53ea\u6709\u5728\u9762\u5bf9\u7684\u98ce\u9669\u6bd4\u8f83\u5927\uff0c\u4e5f\u5c31\u662f\u53d1\u751f\u7684\u6982\u7387\u8f83\u5927\u7684\u5371\u9669\u4e8b\u4ef6\uff0c\u624d\u4f1a\u6253\u8d77\u767e\u5206\u4e4b\u516b\u767e\u7684\u4e13\u6ce8\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u7cfb\u7edf\u800c\u8a00\uff0c\u6bcf\u6761\u4fe1\u606f\u5bf9\u4e8e\u7cfb\u7edf\u7684\u8d21\u732e\u503c\u5fc5\u7136\u548c\u5b83\u53d1\u751f\u7684\u6982\u7387\u662f\u76f8\u5173\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4fe1\u606f\u71b5\u7684\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \\(H(P(x),-\\log(P(x)))\\) \uff0c\u5f53\u7136\uff0c\u5728\u6211\u4eec\u4e86\u89e3\u4e86\u5177\u4f53\u5728\u51fd\u6570\u4e2d\u4e24\u90e8\u5206\u7684\u5173\u7cfb\uff0c\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u4e8c\u5143\u51fd\u6570\u8f6c\u6362\u6210\u4e00\u5143\u51fd\u6570\u3002 \u52a0\u6743\u5e73\u5747\u6570\u91cc\uff0c\u6743\u91cd\u548c\u5bf9\u5e94\u7684\u6570\u503c\u662f\u76f8\u4e58\u7684\u5173\u7cfb\uff0c\u81ea\u7136\u6211\u4eec\u5c31\u4f1a\u8054\u60f3\u4f1a\u4e0d\u4f1a\u5728\u8fd9\u91cc\u4e5f\u662f\u76f8\u4e58\u7684\u5173\u7cfb\uff1f \u800c\u6743\u91cd\u4ee3\u8868\u7684\u610f\u601d\u6b63\u662f\u53d6\u51b3\u4e8e\u5404\u6570\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff08\u9891\u6570\uff09\uff0c\u548c\u6982\u7387\u4e0d\u80fd\u8bf4\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u80fd\u8bf4\u662f\u5de7\u5de7\u4ed6\u5988\u7ed9\u5de7\u5de7\u5f00\u95e8\u2014\u2014\u2014\u2014\u5de7\u5230\u5bb6\u4e86\u3002 \u4e8e\u662f\u6211\u4eec\u6784\u5efa\u7684\u4fe1\u606f\u71b5","title":"\u6f14\u7ece"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/","text":"\u732b\u732b\u5f00\u9500\u9884\u7b97\u6574\u7406\u8c03\u7814\u7edf\u8ba1\u8868 \u00b6 \u4e00\u56fe\u6d41 ![[Pasted image 20220124175950.png]] \u5fc5\u987b \u00b6 \u7b3c\u5b50 \u00b6 \u95f2\u9c7c100\u5de6\u53f3 \u732b\u7802\u76c6(100\u5de6\u53f3) \u00b6 \u8d70\u5eca\u5f0f ![[Pasted image 20220124165344.png]] \u8d70\u5eca\u5f0f\u732b\u7802\u76c6\u5168\u5c01\u95ed\u5f0f\u9694\u81ed\u5e7c\u732b\u8d85\u5927\u53f7\u732b\u5395\u6240\u9632\u5e26\u7802\u732b\u5c4e\u76c6\u732b\u54aa\u7528\u54c1-tmall.com\u5929\u732b 129 \u732b\u7802 \u00b6 \u53f2\u4e0a\u6700\u5168\u732b\u7802\u9009\u8d2d\u6307\u5357 - \u77e5\u4e4e (zhihu.com) ![[Pasted image 20220124175047.png]] ![[Pasted image 20220124175103.png]] \u8c46\u8150\u732b\u7802\uff1a\u4e00\u888b39\u51434\u65a4\uff0c\u7528\u7ea6\u534a\u6708 \u51ef\u9510\u601d\u8c46\u8150\u732b\u7802\u9664\u81ed\u732b\u6c99\u732b\u54aa\u8c46\u8150\u7802\u8c46\u8150\u6e23\u65e0\u5c18\u5927\u9897\u7c92\u7ed3\u56e2\u5438\u6c34\u5305\u90ae-tmall.com\u5929\u732b ![[Pasted image 20220124171045.png]] \u732b\u7cae \u00b6 \u8c46\u67f4 \u4e00\u888b59\u51431.2kg\u534a\u6708 \u5927\u888b305\u51436kg80\u5929\uff08114.375/\u6708\uff09 \u8c46\u67f4\u4e09\u62fc\u51bb\u5e72\u732b\u7cae\u65e0\u8c37\u5929\u7136\u6210\u5e74\u732b\u7cae\u5168\u7c7b\u82f1\u7f8e\u77ed\u732b\u4e3b\u7cae\u589e\u80a5\u53d1\u816e6kg-tmall.com\u5929\u732b \u822a\u7a7a\u7bb1 (35) \u00b6 35\u5143\u5de6\u53f3 ![[Pasted image 20220124170107.png]] \u5ba0\u7269\u822a\u7a7a\u7bb1\u732b\u54aa\u72d7\u72d7\u5916\u51fa\u4fbf\u643a\u732b\u7b3c\u5b50\u5c0f\u578b\u4e2d\u5927\u578b\u72ac\u822a\u7a7a\u6258\u8fd0\u8f66\u8f7d\u72d7\u7b3c-tmall.com\u5929\u732b \u6d17\u6fa1 \u00b6 100\u5de6\u53f3 \u4f53\u68c0+\u75ab\u82d7 \u00b6 166 \u4e2d\u519c\u5927\u7231\u8bfa\u5ba0\u7269\u533b\u9662\u56e2\u8d2d166\u5143-\u592a\u539f-\u5927\u4f17\u70b9\u8bc4\u56e2 (dianping.com) \u6307\u7532\u94b3 \u00b6 24.9 \u72d7\u72d7\u6307\u7532\u526a\u732b\u54aa\u6307\u7532\u94b3\u5ba0\u7269\u6307\u7532\u5200\u4e13\u7528\u65b0\u624b\u795e\u5668\u7528\u54c1LED\u9632\u51fa\u8840\u78e8\u7532-tmall.com\u5929\u732b \u975e\u5fc5\u987b \u00b6 \u732b\u5305 (<100) \u00b6 \u767e\u5143\u4ee5\u4e0b ![[Pasted image 20220124165653.png]] \u732b\u6761\uff08\u96f6\u98df\uff09 \u00b6 48\u5143100\u652f \u732b\u6761100\u652f\u6574\u7bb1\u732b\u54aa\u96f6\u98df\u8425\u517b\u589e\u80a5\u5e7c\u732b\u7528\u54c1\u5976\u7cd5\u6e7f\u7cae\u732b\u7f50\u5934\u65e0\u8bf1\u98df\u5242-tmall.com\u5929\u732b \u732b\u6293\u677f \u00b6 39.8 L\u578b\u7acb\u5f0f\u732b\u6293\u677f\u8010\u78e8\u4e0d\u6389\u5c51\u7acb\u4f53\u8010\u6293\u5927\u53f7\u74e6\u695e\u7eb8\u732b\u722a\u677f\u732b\u54aa\u73a9\u5177\u7528\u54c1-tmall.com\u5929\u732b \u732b\u7a9d \u00b6 24.9 \u72d7\u7a9d\u732b\u7a9d\u51ac\u5b63\u4fdd\u6696\u56db\u5b63\u901a\u7528\u5c0f\u578b\u72ac\u5ba0\u7269\u57ab\u5b50\u5927\u578b\u72ac\u72d7\u6c99\u53d1\u6cf0\u8fea\u7761\u89c9\u5e8a-tmall.com\u5929\u732b ![[Pasted image 20220124175445.png]]","title":"\u732b\u732b\u5f00\u9500\u9884\u7b97\u6574\u7406\u8c03\u7814\u7edf\u8ba1\u8868"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_1","text":"\u4e00\u56fe\u6d41 ![[Pasted image 20220124175950.png]]","title":"\u732b\u732b\u5f00\u9500\u9884\u7b97\u6574\u7406\u8c03\u7814\u7edf\u8ba1\u8868"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_2","text":"","title":"\u5fc5\u987b"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_3","text":"\u95f2\u9c7c100\u5de6\u53f3","title":"\u7b3c\u5b50"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#100","text":"\u8d70\u5eca\u5f0f ![[Pasted image 20220124165344.png]] \u8d70\u5eca\u5f0f\u732b\u7802\u76c6\u5168\u5c01\u95ed\u5f0f\u9694\u81ed\u5e7c\u732b\u8d85\u5927\u53f7\u732b\u5395\u6240\u9632\u5e26\u7802\u732b\u5c4e\u76c6\u732b\u54aa\u7528\u54c1-tmall.com\u5929\u732b 129","title":"\u732b\u7802\u76c6(100\u5de6\u53f3)"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_4","text":"\u53f2\u4e0a\u6700\u5168\u732b\u7802\u9009\u8d2d\u6307\u5357 - \u77e5\u4e4e (zhihu.com) ![[Pasted image 20220124175047.png]] ![[Pasted image 20220124175103.png]] \u8c46\u8150\u732b\u7802\uff1a\u4e00\u888b39\u51434\u65a4\uff0c\u7528\u7ea6\u534a\u6708 \u51ef\u9510\u601d\u8c46\u8150\u732b\u7802\u9664\u81ed\u732b\u6c99\u732b\u54aa\u8c46\u8150\u7802\u8c46\u8150\u6e23\u65e0\u5c18\u5927\u9897\u7c92\u7ed3\u56e2\u5438\u6c34\u5305\u90ae-tmall.com\u5929\u732b ![[Pasted image 20220124171045.png]]","title":"\u732b\u7802"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_5","text":"\u8c46\u67f4 \u4e00\u888b59\u51431.2kg\u534a\u6708 \u5927\u888b305\u51436kg80\u5929\uff08114.375/\u6708\uff09 \u8c46\u67f4\u4e09\u62fc\u51bb\u5e72\u732b\u7cae\u65e0\u8c37\u5929\u7136\u6210\u5e74\u732b\u7cae\u5168\u7c7b\u82f1\u7f8e\u77ed\u732b\u4e3b\u7cae\u589e\u80a5\u53d1\u816e6kg-tmall.com\u5929\u732b","title":"\u732b\u7cae"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#35","text":"35\u5143\u5de6\u53f3 ![[Pasted image 20220124170107.png]] \u5ba0\u7269\u822a\u7a7a\u7bb1\u732b\u54aa\u72d7\u72d7\u5916\u51fa\u4fbf\u643a\u732b\u7b3c\u5b50\u5c0f\u578b\u4e2d\u5927\u578b\u72ac\u822a\u7a7a\u6258\u8fd0\u8f66\u8f7d\u72d7\u7b3c-tmall.com\u5929\u732b","title":"\u822a\u7a7a\u7bb1 (35)"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_6","text":"100\u5de6\u53f3","title":"\u6d17\u6fa1"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_7","text":"166 \u4e2d\u519c\u5927\u7231\u8bfa\u5ba0\u7269\u533b\u9662\u56e2\u8d2d166\u5143-\u592a\u539f-\u5927\u4f17\u70b9\u8bc4\u56e2 (dianping.com)","title":"\u4f53\u68c0+\u75ab\u82d7"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_8","text":"24.9 \u72d7\u72d7\u6307\u7532\u526a\u732b\u54aa\u6307\u7532\u94b3\u5ba0\u7269\u6307\u7532\u5200\u4e13\u7528\u65b0\u624b\u795e\u5668\u7528\u54c1LED\u9632\u51fa\u8840\u78e8\u7532-tmall.com\u5929\u732b","title":"\u6307\u7532\u94b3"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_9","text":"","title":"\u975e\u5fc5\u987b"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#100_1","text":"\u767e\u5143\u4ee5\u4e0b ![[Pasted image 20220124165653.png]]","title":"\u732b\u5305 (&lt;100)"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_10","text":"48\u5143100\u652f \u732b\u6761100\u652f\u6574\u7bb1\u732b\u54aa\u96f6\u98df\u8425\u517b\u589e\u80a5\u5e7c\u732b\u7528\u54c1\u5976\u7cd5\u6e7f\u7cae\u732b\u7f50\u5934\u65e0\u8bf1\u98df\u5242-tmall.com\u5929\u732b","title":"\u732b\u6761\uff08\u96f6\u98df\uff09"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_11","text":"39.8 L\u578b\u7acb\u5f0f\u732b\u6293\u677f\u8010\u78e8\u4e0d\u6389\u5c51\u7acb\u4f53\u8010\u6293\u5927\u53f7\u74e6\u695e\u7eb8\u732b\u722a\u677f\u732b\u54aa\u73a9\u5177\u7528\u54c1-tmall.com\u5929\u732b","title":"\u732b\u6293\u677f"},{"location":"%E7%8C%AB%E7%8C%AB%E5%BC%80%E9%94%80%E9%A2%84%E7%AE%97%E6%95%B4%E7%90%86%E8%B0%83%E7%A0%94%E7%BB%9F%E8%AE%A1%E8%A1%A8/#_12","text":"24.9 \u72d7\u7a9d\u732b\u7a9d\u51ac\u5b63\u4fdd\u6696\u56db\u5b63\u901a\u7528\u5c0f\u578b\u72ac\u5ba0\u7269\u57ab\u5b50\u5927\u578b\u72ac\u72d7\u6c99\u53d1\u6cf0\u8fea\u7761\u89c9\u5e8a-tmall.com\u5929\u732b ![[Pasted image 20220124175445.png]]","title":"\u732b\u7a9d"},{"location":"CS61A/CS61A/","text":"CS61A \u00b6 \u4ec5\u8bb0\u5f55\u5728CS61A(SUMMER 2020)\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u81ea\u5df1\u4e4b\u524d\u4e0d\u6e05\u695a\u7684\u77e5\u8bc6\uff0c\u6240\u4ee5\u4e0d\u662f\u77e5\u8bc6\u6587\u6863\uff0c\u53ea\u662f\u4e2a\u4eba\u7528\u7684\u603b\u7ed3\u3002 CS 61A SUMMER 2020 CS 61A Fall 2021 type: folder_brief_live","title":"CS61A"},{"location":"CS61A/CS61A/#cs61a","text":"\u4ec5\u8bb0\u5f55\u5728CS61A(SUMMER 2020)\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u81ea\u5df1\u4e4b\u524d\u4e0d\u6e05\u695a\u7684\u77e5\u8bc6\uff0c\u6240\u4ee5\u4e0d\u662f\u77e5\u8bc6\u6587\u6863\uff0c\u53ea\u662f\u4e2a\u4eba\u7528\u7684\u603b\u7ed3\u3002 CS 61A SUMMER 2020 CS 61A Fall 2021 type: folder_brief_live","title":"CS61A"},{"location":"CS61A/Homeworks/HW01/","text":"[[Homeworks]] Variables & Functions, Control \u9664\u53bb\u8c03\u67e5\u95ee\u5377\u4ee5\u5916\u8fd8\u67095\u9053\u9898 A Plus Abs B \u00b6 Fill in the blanks in the following function for adding a to the absolute value of b, without calling abs. You may not modify any of the provided code other than the two blanks. def a_plus_abs_b ( a , b ): \"\"\"Return a+abs(b), but without calling abs. >>> a_plus_abs_b(2, 3) 5 >>> a_plus_abs_b(2, -3) 5 >>> # a check that you didn't change the return statement! >>> import inspect, re >>> re.findall(r'^\\s*(return .*)', inspect.getsource(a_plus_abs_b), re.M) ['return h(a, b)'] \"\"\" if b >= 0 : def h ( a , b ): return a + b else : def h ( a , b ): return a - b return h ( a , b ) \u8fd9\u6837\u4e5f\u53ef\u4ee5\u901a\u8fc7ok\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6b63\u89e3\uff0c\u5fc3\u8def\u5386\u7a0b\u5982\u4e0b\uff1a \u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u628aif\u4e2d\u7684return\u653e\u5728\u4e0b\u4e00\u884c def h ( a , b ): return a + b \u8fd9\u6837\u4e66\u5199\u4e0d\u884c\uff0c\u4f1a\u51fa\u73b0\u5982\u56fe\u7684\u9519\u8bef\u3002 \u5e94\u8be5\u662fcheck\u91cc\u9762\u7684\u4e1c\u897f\u4f1a\u68c0\u6d4b\u72ec\u7acb\u7684return\uff1f \u8fd9\u65f6\u5019\u6211\u624d\u6ce8\u610f\u5230\u9898\u76ee\u672c\u610f\u662f\u8ba9\u6211\u4eec\u4f7f\u7528\u7ed9\u51fd\u6570\u540d\u505aassignment\uff0c\uff0c\uff0c \u5e94\u8be5\u662f\u8fd9\u6837\u5199\uff1a from operator import add , sub def a_plus_abs_b ( a , b ): \"\"\"Return a+abs(b), but without calling abs. >>> a_plus_abs_b(2, 3) 5 >>> a_plus_abs_b(2, -3) 5 >>> # a check that you didn't change the return statement! >>> import inspect, re >>> re.findall(r'^\\s*(return .*)', inspect.getsource(a_plus_abs_b), re.M) ['return h(a, b)'] \"\"\" if b >= 0 : h = add else : h = sub return h ( a , b ) Two of Three \u00b6 Write a function that takes three positive numbers as arguments and returns the sum of the squares of the two smallest numbers. Use only a single line for the body of the function. def two_of_three ( x , y , z ): \"\"\"Return a*a + b*b, where a and b are the two smallest members of the positive numbers x, y, and z. >>> two_of_three(1, 2, 3) 5 >>> two_of_three(5, 3, 1) 10 >>> two_of_three(10, 2, 8) 68 >>> two_of_three(5, 5, 5) 50 >>> # check that your code consists of nothing but an expression (this docstring) >>> # a return statement >>> import inspect, ast >>> [type(x).__name__ for x in ast.parse(inspect.getsource(two_of_three)).body[0].body] ['Expr', 'Return'] \"\"\" return x ** 2 + y ** 2 + z ** 2 - max ( x , y , z ) ** 2 \u5728\u7f51\u4e0a\u8fd8\u770b\u5230\u6709\u53e6\u4e00\u79cd\u89e3\u6cd5\uff0c\u6211\u89c9\u5f97\u6bd4\u6211\u7684\u66f4\u52a0\u7684\u6d45\u663e\uff0c\u8fc7\u5ea6\u601d\u8003\u5947\u6280\u6deb\u5de7\u7684\u6bdb\u75c5\u8fd8\u662f\u4e00\u76f4\u5728\u554a T_T return min ( x * x + y * y , y * y + z * z , x * x + z * z ) \u4e0d\u8fc7\u6211\u7684\u7b97\u6cd5\u8ba1\u7b97\u91cf\u66f4\u5c0f\uff0c \u662f\u66f4\u9ad8\u7ea7\u7684\u7b97\u6cd5\u5c31\u662f\u4e86\u54c8\u54c8\u54c8\u54c8\u54c8 \u3002 Largest Factor \u00b6 Write a function that takes an integer x that is greater than 1 and returns the largest integer that is smaller than x and evenly divides x. def largest_factor ( x ): \"\"\"Return the largest factor of x that is smaller than x. >>> largest_factor(15) # factors are 1, 3, 5 5 >>> largest_factor(80) # factors are 1, 2, 4, 5, 8, 10, 16, 20, 40 40 >>> largest_factor(13) # factor is 1 since 13 is prime 1 \"\"\" i = 1 while ( i < x ): if x % i == 0 : ans = i i += 1 return ans \u8fd9\u9898\u610f\u5916\u7684\u86ee\u7b80\u5355\uff0c\u53ef\u80fd\u662f\u6211\u7406\u89e3\u9519\u4e86\u6216\u8005\u53ea\u662f\u5faa\u73af\u7ed3\u6784\u7684\u7ec3\u624b\u3002 If Function vs Statement \u00b6 \u9898\u76ee\u6709\u70b9\u957f\uff0c\u6211\u5c31\u4e0d\u5199\u4e86\uff0c\u86ee\u6709\u610f\u601d\u7684\u3002 \u7b54\u6848\u8d34\u5728\u8fd9\u91cc\uff0c\u4e0d\u4f1a\u7684\u8bdd\u4e00\u6b65\u6b65\u8fd0\u884c\u5c31\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u4e86\u3002 def if_function ( condition , true_result , false_result ): \"\"\"Return true_result if condition is a true value, and false_result otherwise. >>> if_function(True, 2, 3) 2 >>> if_function(False, 2, 3) 3 >>> if_function(3==2, 3+2, 3-2) 1 >>> if_function(3>2, 3+2, 3-2) 5 \"\"\" if condition : return true_result else : return false_result def cond (): return False def true_func (): print ( 42 ) def false_func (): print ( 47 ) def with_if_statement (): \"\"\" >>> result = with_if_statement() 47 >>> print(result) None \"\"\" if cond (): return true_func () else : return false_func () def with_if_function (): \"\"\" >>> result = with_if_function() 42 47 >>> print(result) None \"\"\" return if_function ( cond (), true_func (), false_func ()) \u5728IDE\u91cc\u8fd0\u884c\u7684\u8bdd\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u4e24\u884c\uff1a result = with_if_function () print ( result ) Hailstone \u00b6 \u4e2d\u6587\uff1a\u51b0\u96f9\u5e8f\u5217\u3002 \u86ee\u6709\u610f\u601d\u7684\u4e00\u4e2a\u6570\u5b66\u95ee\u9898\uff0c\u4f46\u662f\u4ee5\u6211\u4e4b\u89c2\uff0c\u5e94\u8be5\u5927\u90e8\u5206\u7684\u6570\u91cd\u590d\u8db3\u591f\u591a\u7684\u6b21\u6570\u5c31\u53ef\u4ee5\u52302\u7684n\u6b21\uff0c\u4e0d\u80fd\u7684\u53ef\u80fd\u4f1a\u662f\u6709\u5faa\u73af\u51fa\u73b0\u7684\uff1f\u7814\u7a76\u4e00\u4e0b\u7684\u8bdd\u6211\u4f1a\u8fd9\u6837\u5165\u624b\u3002\u4f46\u662f\u5b83\u5bf9\u6211\u6765\u8bf4\u53ea\u662f\u62a5\u7eb8\u4e0a\u7684\u586b\u5b57\u6e38\u620f\uff0c\u5bf9\u6211\u91cd\u8981\u7684\u662f\u65b0\u95fb\u5185\u5bb9\u3002 \u6211\u662f\u4f7f\u7528\u4e86\u9012\u5f52\uff0c\u6bd5\u7adf\u8c01\u4e0d\u559c\u6b22\u9012\u5f52\u5462\uff0c\u4f46\u662f\u9012\u5f52\u7684\u8bdd\u5c31\u4e0d\u597d\u505a\u8ba1\u6570\u4e86\uff0c\u672c\u7740\u80fd\u505a\u9012\u5f52\u5c31\u9012\u5f52\uff0c\u4e0d\u80fd\u9012\u5f52\u521b\u9020\u6761\u4ef6\u4e5f\u8981\u9012\u5f52\uff0c\u5b66\u5230\u4e86global\u8bed\u53e5\u3002 i = 1 def hailstone ( x ) : print ( int ( x )) if x > 1 : if x % 2 == 0 : x = x / 2 else : x = x * 3 + 1 hailstone ( x ) global i i += 1 return i \u63d0\u4ea4\u6210\u529f \uff1a","title":"HW01"},{"location":"CS61A/Homeworks/HW01/#a-plus-abs-b","text":"Fill in the blanks in the following function for adding a to the absolute value of b, without calling abs. You may not modify any of the provided code other than the two blanks. def a_plus_abs_b ( a , b ): \"\"\"Return a+abs(b), but without calling abs. >>> a_plus_abs_b(2, 3) 5 >>> a_plus_abs_b(2, -3) 5 >>> # a check that you didn't change the return statement! >>> import inspect, re >>> re.findall(r'^\\s*(return .*)', inspect.getsource(a_plus_abs_b), re.M) ['return h(a, b)'] \"\"\" if b >= 0 : def h ( a , b ): return a + b else : def h ( a , b ): return a - b return h ( a , b ) \u8fd9\u6837\u4e5f\u53ef\u4ee5\u901a\u8fc7ok\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u6b63\u89e3\uff0c\u5fc3\u8def\u5386\u7a0b\u5982\u4e0b\uff1a \u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u628aif\u4e2d\u7684return\u653e\u5728\u4e0b\u4e00\u884c def h ( a , b ): return a + b \u8fd9\u6837\u4e66\u5199\u4e0d\u884c\uff0c\u4f1a\u51fa\u73b0\u5982\u56fe\u7684\u9519\u8bef\u3002 \u5e94\u8be5\u662fcheck\u91cc\u9762\u7684\u4e1c\u897f\u4f1a\u68c0\u6d4b\u72ec\u7acb\u7684return\uff1f \u8fd9\u65f6\u5019\u6211\u624d\u6ce8\u610f\u5230\u9898\u76ee\u672c\u610f\u662f\u8ba9\u6211\u4eec\u4f7f\u7528\u7ed9\u51fd\u6570\u540d\u505aassignment\uff0c\uff0c\uff0c \u5e94\u8be5\u662f\u8fd9\u6837\u5199\uff1a from operator import add , sub def a_plus_abs_b ( a , b ): \"\"\"Return a+abs(b), but without calling abs. >>> a_plus_abs_b(2, 3) 5 >>> a_plus_abs_b(2, -3) 5 >>> # a check that you didn't change the return statement! >>> import inspect, re >>> re.findall(r'^\\s*(return .*)', inspect.getsource(a_plus_abs_b), re.M) ['return h(a, b)'] \"\"\" if b >= 0 : h = add else : h = sub return h ( a , b )","title":"A Plus Abs B"},{"location":"CS61A/Homeworks/HW01/#two-of-three","text":"Write a function that takes three positive numbers as arguments and returns the sum of the squares of the two smallest numbers. Use only a single line for the body of the function. def two_of_three ( x , y , z ): \"\"\"Return a*a + b*b, where a and b are the two smallest members of the positive numbers x, y, and z. >>> two_of_three(1, 2, 3) 5 >>> two_of_three(5, 3, 1) 10 >>> two_of_three(10, 2, 8) 68 >>> two_of_three(5, 5, 5) 50 >>> # check that your code consists of nothing but an expression (this docstring) >>> # a return statement >>> import inspect, ast >>> [type(x).__name__ for x in ast.parse(inspect.getsource(two_of_three)).body[0].body] ['Expr', 'Return'] \"\"\" return x ** 2 + y ** 2 + z ** 2 - max ( x , y , z ) ** 2 \u5728\u7f51\u4e0a\u8fd8\u770b\u5230\u6709\u53e6\u4e00\u79cd\u89e3\u6cd5\uff0c\u6211\u89c9\u5f97\u6bd4\u6211\u7684\u66f4\u52a0\u7684\u6d45\u663e\uff0c\u8fc7\u5ea6\u601d\u8003\u5947\u6280\u6deb\u5de7\u7684\u6bdb\u75c5\u8fd8\u662f\u4e00\u76f4\u5728\u554a T_T return min ( x * x + y * y , y * y + z * z , x * x + z * z ) \u4e0d\u8fc7\u6211\u7684\u7b97\u6cd5\u8ba1\u7b97\u91cf\u66f4\u5c0f\uff0c \u662f\u66f4\u9ad8\u7ea7\u7684\u7b97\u6cd5\u5c31\u662f\u4e86\u54c8\u54c8\u54c8\u54c8\u54c8 \u3002","title":"Two of Three"},{"location":"CS61A/Homeworks/HW01/#largest-factor","text":"Write a function that takes an integer x that is greater than 1 and returns the largest integer that is smaller than x and evenly divides x. def largest_factor ( x ): \"\"\"Return the largest factor of x that is smaller than x. >>> largest_factor(15) # factors are 1, 3, 5 5 >>> largest_factor(80) # factors are 1, 2, 4, 5, 8, 10, 16, 20, 40 40 >>> largest_factor(13) # factor is 1 since 13 is prime 1 \"\"\" i = 1 while ( i < x ): if x % i == 0 : ans = i i += 1 return ans \u8fd9\u9898\u610f\u5916\u7684\u86ee\u7b80\u5355\uff0c\u53ef\u80fd\u662f\u6211\u7406\u89e3\u9519\u4e86\u6216\u8005\u53ea\u662f\u5faa\u73af\u7ed3\u6784\u7684\u7ec3\u624b\u3002","title":"Largest Factor"},{"location":"CS61A/Homeworks/HW01/#if-function-vs-statement","text":"\u9898\u76ee\u6709\u70b9\u957f\uff0c\u6211\u5c31\u4e0d\u5199\u4e86\uff0c\u86ee\u6709\u610f\u601d\u7684\u3002 \u7b54\u6848\u8d34\u5728\u8fd9\u91cc\uff0c\u4e0d\u4f1a\u7684\u8bdd\u4e00\u6b65\u6b65\u8fd0\u884c\u5c31\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u4e86\u3002 def if_function ( condition , true_result , false_result ): \"\"\"Return true_result if condition is a true value, and false_result otherwise. >>> if_function(True, 2, 3) 2 >>> if_function(False, 2, 3) 3 >>> if_function(3==2, 3+2, 3-2) 1 >>> if_function(3>2, 3+2, 3-2) 5 \"\"\" if condition : return true_result else : return false_result def cond (): return False def true_func (): print ( 42 ) def false_func (): print ( 47 ) def with_if_statement (): \"\"\" >>> result = with_if_statement() 47 >>> print(result) None \"\"\" if cond (): return true_func () else : return false_func () def with_if_function (): \"\"\" >>> result = with_if_function() 42 47 >>> print(result) None \"\"\" return if_function ( cond (), true_func (), false_func ()) \u5728IDE\u91cc\u8fd0\u884c\u7684\u8bdd\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u4e24\u884c\uff1a result = with_if_function () print ( result )","title":"If Function vs Statement"},{"location":"CS61A/Homeworks/HW01/#hailstone","text":"\u4e2d\u6587\uff1a\u51b0\u96f9\u5e8f\u5217\u3002 \u86ee\u6709\u610f\u601d\u7684\u4e00\u4e2a\u6570\u5b66\u95ee\u9898\uff0c\u4f46\u662f\u4ee5\u6211\u4e4b\u89c2\uff0c\u5e94\u8be5\u5927\u90e8\u5206\u7684\u6570\u91cd\u590d\u8db3\u591f\u591a\u7684\u6b21\u6570\u5c31\u53ef\u4ee5\u52302\u7684n\u6b21\uff0c\u4e0d\u80fd\u7684\u53ef\u80fd\u4f1a\u662f\u6709\u5faa\u73af\u51fa\u73b0\u7684\uff1f\u7814\u7a76\u4e00\u4e0b\u7684\u8bdd\u6211\u4f1a\u8fd9\u6837\u5165\u624b\u3002\u4f46\u662f\u5b83\u5bf9\u6211\u6765\u8bf4\u53ea\u662f\u62a5\u7eb8\u4e0a\u7684\u586b\u5b57\u6e38\u620f\uff0c\u5bf9\u6211\u91cd\u8981\u7684\u662f\u65b0\u95fb\u5185\u5bb9\u3002 \u6211\u662f\u4f7f\u7528\u4e86\u9012\u5f52\uff0c\u6bd5\u7adf\u8c01\u4e0d\u559c\u6b22\u9012\u5f52\u5462\uff0c\u4f46\u662f\u9012\u5f52\u7684\u8bdd\u5c31\u4e0d\u597d\u505a\u8ba1\u6570\u4e86\uff0c\u672c\u7740\u80fd\u505a\u9012\u5f52\u5c31\u9012\u5f52\uff0c\u4e0d\u80fd\u9012\u5f52\u521b\u9020\u6761\u4ef6\u4e5f\u8981\u9012\u5f52\uff0c\u5b66\u5230\u4e86global\u8bed\u53e5\u3002 i = 1 def hailstone ( x ) : print ( int ( x )) if x > 1 : if x % 2 == 0 : x = x / 2 else : x = x * 3 + 1 hailstone ( x ) global i i += 1 return i \u63d0\u4ea4\u6210\u529f \uff1a","title":"Hailstone"},{"location":"CS61A/Homeworks/HW02/","text":"[[Homeworks]] 2022.01.30 Homework 2: Higher Order Functions \u00b6 \u6ca1\u505a\u9644\u52a0\u9898== \u539f\u8c05\u6211>_< ![[Pasted image 20220130113705.png]] from operator import add , mul square = lambda x : x * x identity = lambda x : x triple = lambda x : 3 * x increment = lambda x : x + 1 HW_SOURCE_FILE = __file__ def product ( n , term ): \"\"\"Return the product of the first n terms in a sequence. n: a positive integer term: a function that takes one argument to produce the term >>> product(3, identity) # 1 * 2 * 3 6 >>> product(5, identity) # 1 * 2 * 3 * 4 * 5 120 >>> product(3, square) # 1^2 * 2^2 * 3^2 36 >>> product(5, square) # 1^2 * 2^2 * 3^2 * 4^2 * 5^2 14400 >>> product(3, increment) # (1+1) * (2+1) * (3+1) 24 >>> product(3, triple) # 1*3 * 2*3 * 3*3 162 \"\"\" total , k = 1 , 1 while k <= n : total , k = term ( k ) * total , k + 1 return total def square ( x ): return x * x add = lambda x , y : x + y mul = lambda x , y : x * y def accumulate ( merger , base , n , term ): \"\"\"Return the result of merging the first n terms in a sequence and base. The terms to be merged are term(1), term(2), ..., term(n). merger is a two-argument commutative function. >>> accumulate(add, 0, 5, identity) # 0 + 1 + 2 + 3 + 4 + 5 15 >>> accumulate(add, 11, 5, identity) # 11 + 1 + 2 + 3 + 4 + 5 26 >>> accumulate(add, 11, 0, identity) # 11 11 >>> accumulate(add, 11, 3, square) # 11 + 1^2 + 2^2 + 3^2 25 >>> accumulate(mul, 2, 3, square) # 2 * 1^2 * 2^2 * 3^2 72 >>> # 2 + (1^2 + 1) + (2^2 + 1) + (3^2 + 1) >>> accumulate(lambda x, y: x + y + 1, 2, 3, square) 19 >>> # ((2 * 1^2 * 2) * 2^2 * 2) * 3^2 * 2 >>> accumulate(lambda x, y: 2 * x * y, 2, 3, square) 576 >>> accumulate(lambda x, y: (x + y) % 17, 19, 20, square) 16 \"\"\" total = base for i in range ( 1 , n + 1 ): total = merger ( total , term ( i )) return total def summation_using_accumulate ( n , term ): \"\"\"Returns the sum: term(1) + ... + term(n), using accumulate. >>> summation_using_accumulate(5, square) 55 >>> summation_using_accumulate(5, triple) 45 \"\"\" return accumulate ( add , 0 , n , term ) def product_using_accumulate ( n , term ): \"\"\"Returns the product: term(1) * ... * term(n), using accumulate. >>> product_using_accumulate(4, square) 576 >>> product_using_accumulate(6, triple) 524880 \"\"\" return accumulate ( mul , 1 , n , term ) def accumulate_syntax_check (): \"\"\"Checks that definitions of summation_using_accumulate and produce_using_accumulate are each a single return statement. >>> # You aren't expected to understand the code of this test. >>> # Check that the bodies of the functions are just return statements. >>> # If this errors, make sure you have removed the \"***YOUR CODE HERE***\". >>> import inspect, ast >>> [type(x).__name__ for x in ast.parse(inspect.getsource(summation_using_accumulate)).body[0].body] ['Expr', 'Return'] >>> [type(x).__name__ for x in ast.parse(inspect.getsource(product_using_accumulate)).body[0].body] ['Expr', 'Return'] \"\"\" def zero ( f ): return lambda x : x def successor ( n ): return lambda f : lambda x : f ( n ( f )( x )) def one ( f ): \"\"\"Church numeral 1: same as successor(zero)\"\"\" \"*** YOUR CODE HERE ***\" def two ( f ): \"\"\"Church numeral 2: same as successor(successor(zero))\"\"\" \"*** YOUR CODE HERE ***\" three = successor ( two ) def church_to_int ( n ): \"\"\"Convert the Church numeral n to a Python integer. >>> church_to_int(zero) 0 >>> church_to_int(one) 1 >>> church_to_int(two) 2 >>> church_to_int(three) 3 \"\"\" \"*** YOUR CODE HERE ***\" def add_church ( m , n ): \"\"\"Return the Church numeral for m + n, for Church numerals m and n. >>> church_to_int(add_church(two, three)) 5 \"\"\" \"*** YOUR CODE HERE ***\" def mul_church ( m , n ): \"\"\"Return the Church numeral for m * n, for Church numerals m and n. >>> four = successor(three) >>> church_to_int(mul_church(two, three)) 6 >>> church_to_int(mul_church(three, four)) 12 \"\"\" \"*** YOUR CODE HERE ***\" def pow_church ( m , n ): \"\"\"Return the Church numeral m ** n, for Church numerals m and n. >>> church_to_int(pow_church(two, three)) 8 >>> church_to_int(pow_church(three, two)) 9 \"\"\" \"*** YOUR CODE HERE ***\"","title":"HW02"},{"location":"CS61A/Homeworks/HW02/#homework-2-higher-order-functions","text":"\u6ca1\u505a\u9644\u52a0\u9898== \u539f\u8c05\u6211>_< ![[Pasted image 20220130113705.png]] from operator import add , mul square = lambda x : x * x identity = lambda x : x triple = lambda x : 3 * x increment = lambda x : x + 1 HW_SOURCE_FILE = __file__ def product ( n , term ): \"\"\"Return the product of the first n terms in a sequence. n: a positive integer term: a function that takes one argument to produce the term >>> product(3, identity) # 1 * 2 * 3 6 >>> product(5, identity) # 1 * 2 * 3 * 4 * 5 120 >>> product(3, square) # 1^2 * 2^2 * 3^2 36 >>> product(5, square) # 1^2 * 2^2 * 3^2 * 4^2 * 5^2 14400 >>> product(3, increment) # (1+1) * (2+1) * (3+1) 24 >>> product(3, triple) # 1*3 * 2*3 * 3*3 162 \"\"\" total , k = 1 , 1 while k <= n : total , k = term ( k ) * total , k + 1 return total def square ( x ): return x * x add = lambda x , y : x + y mul = lambda x , y : x * y def accumulate ( merger , base , n , term ): \"\"\"Return the result of merging the first n terms in a sequence and base. The terms to be merged are term(1), term(2), ..., term(n). merger is a two-argument commutative function. >>> accumulate(add, 0, 5, identity) # 0 + 1 + 2 + 3 + 4 + 5 15 >>> accumulate(add, 11, 5, identity) # 11 + 1 + 2 + 3 + 4 + 5 26 >>> accumulate(add, 11, 0, identity) # 11 11 >>> accumulate(add, 11, 3, square) # 11 + 1^2 + 2^2 + 3^2 25 >>> accumulate(mul, 2, 3, square) # 2 * 1^2 * 2^2 * 3^2 72 >>> # 2 + (1^2 + 1) + (2^2 + 1) + (3^2 + 1) >>> accumulate(lambda x, y: x + y + 1, 2, 3, square) 19 >>> # ((2 * 1^2 * 2) * 2^2 * 2) * 3^2 * 2 >>> accumulate(lambda x, y: 2 * x * y, 2, 3, square) 576 >>> accumulate(lambda x, y: (x + y) % 17, 19, 20, square) 16 \"\"\" total = base for i in range ( 1 , n + 1 ): total = merger ( total , term ( i )) return total def summation_using_accumulate ( n , term ): \"\"\"Returns the sum: term(1) + ... + term(n), using accumulate. >>> summation_using_accumulate(5, square) 55 >>> summation_using_accumulate(5, triple) 45 \"\"\" return accumulate ( add , 0 , n , term ) def product_using_accumulate ( n , term ): \"\"\"Returns the product: term(1) * ... * term(n), using accumulate. >>> product_using_accumulate(4, square) 576 >>> product_using_accumulate(6, triple) 524880 \"\"\" return accumulate ( mul , 1 , n , term ) def accumulate_syntax_check (): \"\"\"Checks that definitions of summation_using_accumulate and produce_using_accumulate are each a single return statement. >>> # You aren't expected to understand the code of this test. >>> # Check that the bodies of the functions are just return statements. >>> # If this errors, make sure you have removed the \"***YOUR CODE HERE***\". >>> import inspect, ast >>> [type(x).__name__ for x in ast.parse(inspect.getsource(summation_using_accumulate)).body[0].body] ['Expr', 'Return'] >>> [type(x).__name__ for x in ast.parse(inspect.getsource(product_using_accumulate)).body[0].body] ['Expr', 'Return'] \"\"\" def zero ( f ): return lambda x : x def successor ( n ): return lambda f : lambda x : f ( n ( f )( x )) def one ( f ): \"\"\"Church numeral 1: same as successor(zero)\"\"\" \"*** YOUR CODE HERE ***\" def two ( f ): \"\"\"Church numeral 2: same as successor(successor(zero))\"\"\" \"*** YOUR CODE HERE ***\" three = successor ( two ) def church_to_int ( n ): \"\"\"Convert the Church numeral n to a Python integer. >>> church_to_int(zero) 0 >>> church_to_int(one) 1 >>> church_to_int(two) 2 >>> church_to_int(three) 3 \"\"\" \"*** YOUR CODE HERE ***\" def add_church ( m , n ): \"\"\"Return the Church numeral for m + n, for Church numerals m and n. >>> church_to_int(add_church(two, three)) 5 \"\"\" \"*** YOUR CODE HERE ***\" def mul_church ( m , n ): \"\"\"Return the Church numeral for m * n, for Church numerals m and n. >>> four = successor(three) >>> church_to_int(mul_church(two, three)) 6 >>> church_to_int(mul_church(three, four)) 12 \"\"\" \"*** YOUR CODE HERE ***\" def pow_church ( m , n ): \"\"\"Return the Church numeral m ** n, for Church numerals m and n. >>> church_to_int(pow_church(two, three)) 8 >>> church_to_int(pow_church(three, two)) 9 \"\"\" \"*** YOUR CODE HERE ***\"","title":"Homework 2: Higher Order Functions"},{"location":"CS61A/Homeworks/HW03/","text":"[[Homeworks]] HW03 \u00b6 2022-02-09 \u4e00\u5171\u56db\u4e2a\u57fa\u672c\u95ee\u9898\uff0c\u6211\u90fd\u6ca1\u770b\u63d0\u793a\uff0c\u52a0\u5927\u96be\u5ea6\uff0c\u4f46\u662f\u51cf\u5c11\u91cd\u590d\u6570\u91cf\u5c31\u4e0d\u505afun part\u4e86\u3002\u3002 Q1: Num eights \u00b6 link def num_eights ( pos ): \"\"\"Returns the number of times 8 appears as a digit of pos. >>> num_eights(3) 0 >>> num_eights(8) 1 >>> num_eights(88888888) 8 >>> num_eights(2638) 1 >>> num_eights(86380) 2 >>> num_eights(12345) 0 >>> from construct_check import check >>> # ban all assignment statements >>> check(HW_SOURCE_FILE, 'num_eights', ... ['Assign', 'AnnAssign', 'AugAssign', 'NamedExpr']) True \"\"\" if pos >= 10 : if pos % 10 == 8 : return num_eights ( pos // 10 ) + 1 else : return num_eights ( pos // 10 ) else : if pos % 10 == 8 : return 1 else : return 0 Q2: Ping-pong \u00b6 link def num_eights ( pos ): \"\"\"Returns the number of times 8 appears as a digit of pos. >>> num_eights(3) 0 >>> num_eights(8) 1 >>> num_eights(88888888) 8 >>> num_eights(2638) 1 >>> num_eights(86380) 2 >>> num_eights(12345) 0 >>> from construct_check import check >>> # ban all assignment statements >>> check(HW_SOURCE_FILE, 'num_eights', ... ['Assign', 'AnnAssign', 'AugAssign', 'NamedExpr']) True \"\"\" if pos >= 10 : if pos % 10 == 8 : return num_eights ( pos // 10 ) + 1 else : return num_eights ( pos // 10 ) else : if pos % 10 == 8 : return 1 else : return 0 def pingpong ( n ): \"\"\"Return the nth element of the ping-pong sequence. >>> pingpong(8) 8 >>> pingpong(10) 6 >>> pingpong(15) 1 >>> pingpong(21) -1 >>> pingpong(22) -2 >>> pingpong(30) -2 >>> pingpong(68) 0 >>> pingpong(69) -1 >>> pingpong(80) 0 >>> pingpong(81) 1 >>> pingpong(82) 0 >>> pingpong(100) -6 >>> from construct_check import check >>> # ban assignment statements >>> check(HW_SOURCE_FILE, 'pingpong', ... ['Assign', 'AnnAssign', 'AugAssign', 'NamedExpr']) True \"\"\" if n == 1 : return 1 if reverse ( n - 1 ) % 2 == 0 : return pingpong ( n - 1 ) + 1 else : return pingpong ( n - 1 ) - 1 def reverse ( n ): if n == 1 : return 0 if n % 8 != 0 and num_eights ( n ) == 0 : return reverse ( n - 1 ) else : return reverse ( n - 1 ) + 1 Q3: Missing Digits \u00b6 link def missing_digits ( n ): \"\"\"Given a number a that is in sorted, non-decreasing order, return the number of missing digits in n. A missing digit is a number between the first and last digit of a that is not in n. >>> missing_digits(1248) # 3, 5, 6, 7 4 >>> missing_digits(19) # 2, 3, 4, 5, 6, 7, 8 7 >>> missing_digits(1122) # No missing numbers 0 >>> missing_digits(123456) # No missing numbers 0 >>> missing_digits(3558) # 4, 6, 7 3 >>> missing_digits(35578) # 4, 6 2 >>> missing_digits(12456) # 3 1 >>> missing_digits(16789) # 2, 3, 4, 5 4 >>> missing_digits(4) # No missing numbers between 4 and 4 0 >>> from construct_check import check >>> # ban while or for loops >>> check(HW_SOURCE_FILE, 'missing_digits', ['While', 'For']) True \"\"\" if n <= 10 : return 0 else : if ( n % 10 ) - (( n // 10 ) % 10 ) != 0 : return missing_digits ( n // 10 ) + (( n % 10 ) - (( n // 10 ) % 10 ) - 1 ) else : return missing_digits ( n // 10 ) Q4: Count coins \u00b6 link def count_coins ( change ): \"\"\"Return the number of ways to make change using coins of value of 1, 5, 10, 25. >>> count_coins(15) 6 >>> count_coins(10) 4 >>> count_coins(20) 9 >>> count_coins(100) # How many ways to make change for a dollar? 242 >>> count_coins(200) 1463 >>> from construct_check import check >>> # ban iteration >>> check(HW_SOURCE_FILE, 'count_coins', ['While', 'For']) True \"\"\" coin = 25 return compare ( change , coin ) def compare ( n , coin ): if coin == 1 : return 1 else : if n >= coin : return compare ( n - coin , coin ) + compare ( n , descending_coin ( coin )) else : return compare ( n , descending_coin ( coin )) \u7ed3\u679c \u00b6 ![[Pasted image 20220209211455.png]]","title":"HW03"},{"location":"CS61A/Homeworks/HW03/#hw03","text":"2022-02-09 \u4e00\u5171\u56db\u4e2a\u57fa\u672c\u95ee\u9898\uff0c\u6211\u90fd\u6ca1\u770b\u63d0\u793a\uff0c\u52a0\u5927\u96be\u5ea6\uff0c\u4f46\u662f\u51cf\u5c11\u91cd\u590d\u6570\u91cf\u5c31\u4e0d\u505afun part\u4e86\u3002\u3002","title":"HW03"},{"location":"CS61A/Homeworks/HW03/#q1-num-eights","text":"link def num_eights ( pos ): \"\"\"Returns the number of times 8 appears as a digit of pos. >>> num_eights(3) 0 >>> num_eights(8) 1 >>> num_eights(88888888) 8 >>> num_eights(2638) 1 >>> num_eights(86380) 2 >>> num_eights(12345) 0 >>> from construct_check import check >>> # ban all assignment statements >>> check(HW_SOURCE_FILE, 'num_eights', ... ['Assign', 'AnnAssign', 'AugAssign', 'NamedExpr']) True \"\"\" if pos >= 10 : if pos % 10 == 8 : return num_eights ( pos // 10 ) + 1 else : return num_eights ( pos // 10 ) else : if pos % 10 == 8 : return 1 else : return 0","title":"Q1: Num eights"},{"location":"CS61A/Homeworks/HW03/#q2-ping-pong","text":"link def num_eights ( pos ): \"\"\"Returns the number of times 8 appears as a digit of pos. >>> num_eights(3) 0 >>> num_eights(8) 1 >>> num_eights(88888888) 8 >>> num_eights(2638) 1 >>> num_eights(86380) 2 >>> num_eights(12345) 0 >>> from construct_check import check >>> # ban all assignment statements >>> check(HW_SOURCE_FILE, 'num_eights', ... ['Assign', 'AnnAssign', 'AugAssign', 'NamedExpr']) True \"\"\" if pos >= 10 : if pos % 10 == 8 : return num_eights ( pos // 10 ) + 1 else : return num_eights ( pos // 10 ) else : if pos % 10 == 8 : return 1 else : return 0 def pingpong ( n ): \"\"\"Return the nth element of the ping-pong sequence. >>> pingpong(8) 8 >>> pingpong(10) 6 >>> pingpong(15) 1 >>> pingpong(21) -1 >>> pingpong(22) -2 >>> pingpong(30) -2 >>> pingpong(68) 0 >>> pingpong(69) -1 >>> pingpong(80) 0 >>> pingpong(81) 1 >>> pingpong(82) 0 >>> pingpong(100) -6 >>> from construct_check import check >>> # ban assignment statements >>> check(HW_SOURCE_FILE, 'pingpong', ... ['Assign', 'AnnAssign', 'AugAssign', 'NamedExpr']) True \"\"\" if n == 1 : return 1 if reverse ( n - 1 ) % 2 == 0 : return pingpong ( n - 1 ) + 1 else : return pingpong ( n - 1 ) - 1 def reverse ( n ): if n == 1 : return 0 if n % 8 != 0 and num_eights ( n ) == 0 : return reverse ( n - 1 ) else : return reverse ( n - 1 ) + 1","title":"Q2: Ping-pong"},{"location":"CS61A/Homeworks/HW03/#q3-missing-digits","text":"link def missing_digits ( n ): \"\"\"Given a number a that is in sorted, non-decreasing order, return the number of missing digits in n. A missing digit is a number between the first and last digit of a that is not in n. >>> missing_digits(1248) # 3, 5, 6, 7 4 >>> missing_digits(19) # 2, 3, 4, 5, 6, 7, 8 7 >>> missing_digits(1122) # No missing numbers 0 >>> missing_digits(123456) # No missing numbers 0 >>> missing_digits(3558) # 4, 6, 7 3 >>> missing_digits(35578) # 4, 6 2 >>> missing_digits(12456) # 3 1 >>> missing_digits(16789) # 2, 3, 4, 5 4 >>> missing_digits(4) # No missing numbers between 4 and 4 0 >>> from construct_check import check >>> # ban while or for loops >>> check(HW_SOURCE_FILE, 'missing_digits', ['While', 'For']) True \"\"\" if n <= 10 : return 0 else : if ( n % 10 ) - (( n // 10 ) % 10 ) != 0 : return missing_digits ( n // 10 ) + (( n % 10 ) - (( n // 10 ) % 10 ) - 1 ) else : return missing_digits ( n // 10 )","title":"Q3: Missing Digits"},{"location":"CS61A/Homeworks/HW03/#q4-count-coins","text":"link def count_coins ( change ): \"\"\"Return the number of ways to make change using coins of value of 1, 5, 10, 25. >>> count_coins(15) 6 >>> count_coins(10) 4 >>> count_coins(20) 9 >>> count_coins(100) # How many ways to make change for a dollar? 242 >>> count_coins(200) 1463 >>> from construct_check import check >>> # ban iteration >>> check(HW_SOURCE_FILE, 'count_coins', ['While', 'For']) True \"\"\" coin = 25 return compare ( change , coin ) def compare ( n , coin ): if coin == 1 : return 1 else : if n >= coin : return compare ( n - coin , coin ) + compare ( n , descending_coin ( coin )) else : return compare ( n , descending_coin ( coin ))","title":"Q4: Count coins"},{"location":"CS61A/Homeworks/HW03/#_1","text":"![[Pasted image 20220209211455.png]]","title":"\u7ed3\u679c"},{"location":"CS61A/Homeworks/Homeworks/","text":"Homeworks \u00b6 [[CS61A]] type: folder_brief_live","title":"Homeworks"},{"location":"CS61A/Homeworks/Homeworks/#homeworks","text":"[[CS61A]] type: folder_brief_live","title":"Homeworks"},{"location":"CS61A/Labs/Lab00/","text":"[[Labs]] Lab 00: Getting Started \u00b6 link Come up with the most creative expression that evaluates to 2020, using only numbers and the +, *, and - operators. def twenty_twenty (): \"\"\"Come up with the most creative expression that evaluates to 2020, using only numbers and the +, *, and - operators. >>> twenty_twenty() 2020 \"\"\" return (( 2020 + 2020 ) - 2020 ) * 1 \u8fc7\u7a0b\uff1a \u8fd9\u662f\u7b2c0\u4e2alab\uff0c\u662f\u65b0\u624b\u6559\u7a0b\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u5e26\u5927\u5bb6\u719f\u6089\u505a\u9898\u4ee5\u53ca\u63d0\u4ea4\u6d41\u7a0b\u3002 CS61A\u6709\u4e00\u4e2a\u81ea\u52a8\u6d4b\u8bd5\u8f6f\u4ef6\u53eb okpy \u4e13\u4e3a\u672c\u8bfe\u5f00\u53d1\uff0c\u675c\u7edd\u4e86\u4eba\u5de5\u6279\u9605\u53ef\u80fd\u5b58\u5728\u7684\u5404\u79cd\u95ee\u9898\uff0c\u611f\u89c9\u597d\u5389\u5bb3\uff0c\u4f46\u662f\u66f4\u503c\u5f97\u6b23\u8d4f\u7684\u662f\u6559\u5b66\u7684\u6001\u5ea6\u3002\u636e\u8bf4\u4e4b\u540e\u7684\u6e38\u620f\u4f5c\u4e1a\u4e3a\u4e86\u641e\u5b9a\u81ea\u52a8\u6279\u9605\uff0c\u51e0\u4e4e\u8003\u8651\u5230\u4e86\u6240\u6709\u7684\u60c5\u51b5\uff0c\u5b9e\u5728\u4f69\u670d\u3002 cd\u5230\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c\u4e4b\u540e\u7528 python3 ok \u4f46\u662f\u6211\u7684\u6ca1\u6709\u53cd\u5e94\uff0c\u5e94\u8be5\u662f\u56e0\u4e3a\u6211\u5b89\u88c5\u7684python\u662fanaconda\u73af\u5883\uff1f\u6362\u6210 python ok \u5c31\u53ef\u4ee5\u4e86 \u7531\u4e8e\u662f\u81ea\u5b66\u6ca1\u6709\u4f2f\u514b\u5229\u7684\u90ae\u7bb1\u4e5f\u81ea\u7136\u6ca1\u6709enroll\u5230\u8bfe\u7a0b\u91cc\u53bb\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u5f71\u54cd\u6211\u4eec\u4f7f\u7528ok \u7b2c\u4e00\u6b21\u8f93\u5165 python3 ok \u4f1a\u8ba9\u4f60\u8f93\u5165\u90ae\u7bb1\uff0c\u53ea\u8981\u8f93\u81ea\u5df1\u90ae\u7bb1\u5c31\u53ef\u4ee5\u4e86\uff0c\u6211\u7528\u7684gmail\uff0c\u8df3\u51fa\u7f51\u9875\u70b9\u51fb\u7ee7\u7eed\u5c31\u53ef\u4ee5\uff0c\u6709\u7ed3\u679c\u4f46\u662f\u4e0d\u4f1a\u7d2f\u8ba1\u4f60\u7684\u5206\u6570\u3002 \u63d0\u4ea4\u6210\u529f","title":"Lab00"},{"location":"CS61A/Labs/Lab00/#lab-00-getting-started","text":"link Come up with the most creative expression that evaluates to 2020, using only numbers and the +, *, and - operators. def twenty_twenty (): \"\"\"Come up with the most creative expression that evaluates to 2020, using only numbers and the +, *, and - operators. >>> twenty_twenty() 2020 \"\"\" return (( 2020 + 2020 ) - 2020 ) * 1 \u8fc7\u7a0b\uff1a \u8fd9\u662f\u7b2c0\u4e2alab\uff0c\u662f\u65b0\u624b\u6559\u7a0b\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u5e26\u5927\u5bb6\u719f\u6089\u505a\u9898\u4ee5\u53ca\u63d0\u4ea4\u6d41\u7a0b\u3002 CS61A\u6709\u4e00\u4e2a\u81ea\u52a8\u6d4b\u8bd5\u8f6f\u4ef6\u53eb okpy \u4e13\u4e3a\u672c\u8bfe\u5f00\u53d1\uff0c\u675c\u7edd\u4e86\u4eba\u5de5\u6279\u9605\u53ef\u80fd\u5b58\u5728\u7684\u5404\u79cd\u95ee\u9898\uff0c\u611f\u89c9\u597d\u5389\u5bb3\uff0c\u4f46\u662f\u66f4\u503c\u5f97\u6b23\u8d4f\u7684\u662f\u6559\u5b66\u7684\u6001\u5ea6\u3002\u636e\u8bf4\u4e4b\u540e\u7684\u6e38\u620f\u4f5c\u4e1a\u4e3a\u4e86\u641e\u5b9a\u81ea\u52a8\u6279\u9605\uff0c\u51e0\u4e4e\u8003\u8651\u5230\u4e86\u6240\u6709\u7684\u60c5\u51b5\uff0c\u5b9e\u5728\u4f69\u670d\u3002 cd\u5230\u6587\u4ef6\u6240\u5728\u76ee\u5f55\uff0c\u4e4b\u540e\u7528 python3 ok \u4f46\u662f\u6211\u7684\u6ca1\u6709\u53cd\u5e94\uff0c\u5e94\u8be5\u662f\u56e0\u4e3a\u6211\u5b89\u88c5\u7684python\u662fanaconda\u73af\u5883\uff1f\u6362\u6210 python ok \u5c31\u53ef\u4ee5\u4e86 \u7531\u4e8e\u662f\u81ea\u5b66\u6ca1\u6709\u4f2f\u514b\u5229\u7684\u90ae\u7bb1\u4e5f\u81ea\u7136\u6ca1\u6709enroll\u5230\u8bfe\u7a0b\u91cc\u53bb\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u5f71\u54cd\u6211\u4eec\u4f7f\u7528ok \u7b2c\u4e00\u6b21\u8f93\u5165 python3 ok \u4f1a\u8ba9\u4f60\u8f93\u5165\u90ae\u7bb1\uff0c\u53ea\u8981\u8f93\u81ea\u5df1\u90ae\u7bb1\u5c31\u53ef\u4ee5\u4e86\uff0c\u6211\u7528\u7684gmail\uff0c\u8df3\u51fa\u7f51\u9875\u70b9\u51fb\u7ee7\u7eed\u5c31\u53ef\u4ee5\uff0c\u6709\u7ed3\u679c\u4f46\u662f\u4e0d\u4f1a\u7d2f\u8ba1\u4f60\u7684\u5206\u6570\u3002 \u63d0\u4ea4\u6210\u529f","title":"Lab 00: Getting Started"},{"location":"CS61A/Labs/Lab01/","text":"[[Labs]] ![[Pasted image 20220119180734.png]] \u94fe\u63a5 \u6709\u51e0\u9053\u95ee\u7b54\u9898\u548c\u51e0\u9053\u7f16\u7a0b\u9898\uff0c\u90fd\u633a\u7b80\u5355\u7684\uff0c\u4e0d\u4f1a\u4e5f\u6709\u6587\u6863\u53ef\u4ee5\u770b\uff0c\u5efa\u8bae\u4ed4\u7ec6\u770b\u770b\uff0c\u5f53\u788e\u7247\u9605\u8bfb\u4e86\u3002 [[Boolean Operators]] [[Error Messages]]","title":"Lab01"},{"location":"CS61A/Labs/Lab02/","text":"[[Labs]] 2002-01-02 Lab 2: Higher-Order Functions, Lambda Expressions | CS 61A Fall 2021 (berkeley.edu) Q3: Lambdas and Currying \u00b6 Write a function lambda_curry2 that will curry any two argument function using lambdas. Refer to the textbook for more details about currying. [[\u67ef\u91cc\u5316]]\u4e00\u4e2a\u51fd\u6570\u3002 \u4e00\u5f00\u59cb\u662f\u8fd9\u4e48\u5199\u7684\u4f46\u662f\u6ca1\u6709\u8fc7syntax check\uff0c\u663e\u793a\u591a\u8fd4\u56de\u4e86\u4e00\u4e2a\u51fd\u6570\u9879\uff1a def lambda_curry2 ( func ): def f ( x ): def g ( y ): return func ( x , y ) return g return f Error : expected [ 'Expr' , 'Return' ] but got [ 'Expr' , 'FunctionDef' , 'Return' ] \u7f51\u4e0a\u67e5\u9605\u4e86\u522b\u4eba\u7684\u7b54\u6848\uff1a cs61a-lab02 | Hexo (giancarlo-ma.github.io) \u4f7f\u7528[[Lambda Expressions]]\u907f\u514d\u4e86return\u51fd\u6570\uff1a def lambda_curry2 ( func ): return lambda x : lambda y : func ( x , y ) \u800c\u4e14\u66f4\u52a0\u6574\u6d01\uff0c\u591a\u591a\u5b66\u4e60\u3002 Q4: Count van Count \u00b6 Consider the following implementations of count_factors and count_primes : \u5373\u662f\u5c06\u4e24\u4e2a\u51fd\u6570\u4f53\u7c7b\u4f3c\u7684\u51fd\u6570\u5408\u4e00\uff0c\u5c06\u5224\u5b9a\u6761\u4ef6\u8f6c\u53d8\u4e3a\u5408\u51fd\u6570\u7684\u53c2\u6570\u3002 def count_cond ( condition ): \"\"\"Returns a function with one parameter N that counts all the numbers from 1 to N that satisfy the two-argument predicate function Condition, where the first argument for Condition is N and the second argument is the number from 1 to N. >>> count_factors = count_cond(lambda n, i: n % i == 0) >>> count_factors(2) # 1, 2 2 >>> count_factors(4) # 1, 2, 4 3 >>> count_factors(12) # 1, 2, 3, 4, 6, 12 6 >>> is_prime = lambda n, i: count_factors(i) == 2 >>> count_primes = count_cond(is_prime) >>> count_primes(2) # 2 1 >>> count_primes(3) # 2, 3 2 >>> count_primes(4) # 2, 3 2 >>> count_primes(5) # 2, 3, 5 3 >>> count_primes(20) # 2, 3, 5, 7, 11, 13, 17, 19 8 \"\"\" def f ( n ): i = 1 count = 0 while i <= n : if condition ( n , i ): count += 1 i += 1 return count return f ![[Pasted image 20220201131945.png]]","title":"Lab02"},{"location":"CS61A/Labs/Lab02/#q3-lambdas-and-currying","text":"Write a function lambda_curry2 that will curry any two argument function using lambdas. Refer to the textbook for more details about currying. [[\u67ef\u91cc\u5316]]\u4e00\u4e2a\u51fd\u6570\u3002 \u4e00\u5f00\u59cb\u662f\u8fd9\u4e48\u5199\u7684\u4f46\u662f\u6ca1\u6709\u8fc7syntax check\uff0c\u663e\u793a\u591a\u8fd4\u56de\u4e86\u4e00\u4e2a\u51fd\u6570\u9879\uff1a def lambda_curry2 ( func ): def f ( x ): def g ( y ): return func ( x , y ) return g return f Error : expected [ 'Expr' , 'Return' ] but got [ 'Expr' , 'FunctionDef' , 'Return' ] \u7f51\u4e0a\u67e5\u9605\u4e86\u522b\u4eba\u7684\u7b54\u6848\uff1a cs61a-lab02 | Hexo (giancarlo-ma.github.io) \u4f7f\u7528[[Lambda Expressions]]\u907f\u514d\u4e86return\u51fd\u6570\uff1a def lambda_curry2 ( func ): return lambda x : lambda y : func ( x , y ) \u800c\u4e14\u66f4\u52a0\u6574\u6d01\uff0c\u591a\u591a\u5b66\u4e60\u3002","title":"Q3: Lambdas and Currying"},{"location":"CS61A/Labs/Lab02/#q4-count-van-count","text":"Consider the following implementations of count_factors and count_primes : \u5373\u662f\u5c06\u4e24\u4e2a\u51fd\u6570\u4f53\u7c7b\u4f3c\u7684\u51fd\u6570\u5408\u4e00\uff0c\u5c06\u5224\u5b9a\u6761\u4ef6\u8f6c\u53d8\u4e3a\u5408\u51fd\u6570\u7684\u53c2\u6570\u3002 def count_cond ( condition ): \"\"\"Returns a function with one parameter N that counts all the numbers from 1 to N that satisfy the two-argument predicate function Condition, where the first argument for Condition is N and the second argument is the number from 1 to N. >>> count_factors = count_cond(lambda n, i: n % i == 0) >>> count_factors(2) # 1, 2 2 >>> count_factors(4) # 1, 2, 4 3 >>> count_factors(12) # 1, 2, 3, 4, 6, 12 6 >>> is_prime = lambda n, i: count_factors(i) == 2 >>> count_primes = count_cond(is_prime) >>> count_primes(2) # 2 1 >>> count_primes(3) # 2, 3 2 >>> count_primes(4) # 2, 3 2 >>> count_primes(5) # 2, 3, 5 3 >>> count_primes(20) # 2, 3, 5, 7, 11, 13, 17, 19 8 \"\"\" def f ( n ): i = 1 count = 0 while i <= n : if condition ( n , i ): count += 1 i += 1 return count return f ![[Pasted image 20220201131945.png]]","title":"Q4: Count van Count"},{"location":"CS61A/Labs/Lab03/","text":"[[Labs]] [[2022-02-08]] OPTIONAL, skip~","title":"Lab03"},{"location":"CS61A/Labs/Lab04/","text":"Lab04 \u00b6 [[2022-02-12]] [[Labs]] Q1: WWPD: Journey to the Center of the Earth \u00b6 Q2: Summation \u00b6 def summation ( n , term ): \"\"\"Return the sum of numbers 1 through n (including n) w\u00edth term applied to each number. Implement using recursion! >>> summation(5, lambda x: x * x * x) # 1^3 + 2^3 + 3^3 + 4^3 + 5^3 225 >>> summation(9, lambda x: x + 1) # 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 54 >>> summation(5, lambda x: 2**x) # 2^1 + 2^2 + 2^3 + 2^4 + 2^5 62 >>> # Do not use while/for loops! >>> from construct_check import check >>> # ban iteration >>> check(HW_SOURCE_FILE, 'summation', ... ['While', 'For']) True \"\"\" assert n >= 1 if n == 1 : return term ( n ) else : return term ( n ) + summation ( n - 1 , term ) Q3: Pascal's Triangle \u00b6 def pascal ( row , column ): \"\"\"Returns the value of the item in Pascal's Triangle whose position is specified by row and column. >>> pascal(0, 0) 1 >>> pascal(0, 5) # Empty entry; outside of Pascal's Triangle 0 >>> pascal(3, 2) # Row 3 (1 3 3 1), Column 2 3 >>> pascal(4, 2) # Row 4 (1 4 6 4 1), Column 2 6 \"\"\" if row < column : return 0 elif column == 0 : return 1 elif row == column : return 1 else : return pascal ( row - 1 , column ) + pascal ( row - 1 , column - 1 ) Q4: Insect Combinatorics \u00b6 def paths ( m , n ): \"\"\"Return the number of paths from one corner of an M by N grid to the opposite corner. >>> paths(2, 2) 2 >>> paths(5, 7) 210 >>> paths(117, 1) 1 >>> paths(1, 157) 1 \"\"\" if m == 1 or n == 1 : return 1 else : return paths ( m - 1 , n ) + paths ( m , n - 1 ) Q5: Couple \u00b6 def couple ( s , t ): \"\"\"Return a list of two-element lists in which the i-th element is [s[i], t[i]]. >>> a = [1, 2, 3] >>> b = [4, 5, 6] >>> couple(a, b) [[1, 4], [2, 5], [3, 6]] >>> c = ['c', 6] >>> d = ['s', '1'] >>> couple(c, d) [['c', 's'], [6, '1']] \"\"\" assert len ( s ) == len ( t ) return [[ s [ i ], t [ i ]] for i in range ( len ( s ))] \u8fd9\u671f\u4f5c\u4e1a\u90fd\u6bd4\u8f83\u7b80\u5355\u53ef\u80fd\u662f\u56e0\u4e3a\u76f8\u6bd4\u4e8e\u9ad8\u9636\u51fd\u6570\u6211\u4e4b\u524d\u63a5\u89e6\u7684\u9012\u5f52\u6bd4\u8f83\u591a\u4e0a\u624b\u6bd4\u8f83\u5bb9\u6613\u3002 ![[Pasted image 20220212170418.png]]","title":"Lab04"},{"location":"CS61A/Labs/Lab04/#lab04","text":"[[2022-02-12]] [[Labs]]","title":"Lab04"},{"location":"CS61A/Labs/Lab04/#q1-wwpd-journey-to-the-center-of-the-earth","text":"","title":"Q1: WWPD: Journey to the Center of the Earth"},{"location":"CS61A/Labs/Lab04/#q2-summation","text":"def summation ( n , term ): \"\"\"Return the sum of numbers 1 through n (including n) w\u00edth term applied to each number. Implement using recursion! >>> summation(5, lambda x: x * x * x) # 1^3 + 2^3 + 3^3 + 4^3 + 5^3 225 >>> summation(9, lambda x: x + 1) # 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 54 >>> summation(5, lambda x: 2**x) # 2^1 + 2^2 + 2^3 + 2^4 + 2^5 62 >>> # Do not use while/for loops! >>> from construct_check import check >>> # ban iteration >>> check(HW_SOURCE_FILE, 'summation', ... ['While', 'For']) True \"\"\" assert n >= 1 if n == 1 : return term ( n ) else : return term ( n ) + summation ( n - 1 , term )","title":"Q2: Summation"},{"location":"CS61A/Labs/Lab04/#q3-pascals-triangle","text":"def pascal ( row , column ): \"\"\"Returns the value of the item in Pascal's Triangle whose position is specified by row and column. >>> pascal(0, 0) 1 >>> pascal(0, 5) # Empty entry; outside of Pascal's Triangle 0 >>> pascal(3, 2) # Row 3 (1 3 3 1), Column 2 3 >>> pascal(4, 2) # Row 4 (1 4 6 4 1), Column 2 6 \"\"\" if row < column : return 0 elif column == 0 : return 1 elif row == column : return 1 else : return pascal ( row - 1 , column ) + pascal ( row - 1 , column - 1 )","title":"Q3: Pascal's Triangle"},{"location":"CS61A/Labs/Lab04/#q4-insect-combinatorics","text":"def paths ( m , n ): \"\"\"Return the number of paths from one corner of an M by N grid to the opposite corner. >>> paths(2, 2) 2 >>> paths(5, 7) 210 >>> paths(117, 1) 1 >>> paths(1, 157) 1 \"\"\" if m == 1 or n == 1 : return 1 else : return paths ( m - 1 , n ) + paths ( m , n - 1 )","title":"Q4: Insect Combinatorics"},{"location":"CS61A/Labs/Lab04/#q5-couple","text":"def couple ( s , t ): \"\"\"Return a list of two-element lists in which the i-th element is [s[i], t[i]]. >>> a = [1, 2, 3] >>> b = [4, 5, 6] >>> couple(a, b) [[1, 4], [2, 5], [3, 6]] >>> c = ['c', 6] >>> d = ['s', '1'] >>> couple(c, d) [['c', 's'], [6, '1']] \"\"\" assert len ( s ) == len ( t ) return [[ s [ i ], t [ i ]] for i in range ( len ( s ))] \u8fd9\u671f\u4f5c\u4e1a\u90fd\u6bd4\u8f83\u7b80\u5355\u53ef\u80fd\u662f\u56e0\u4e3a\u76f8\u6bd4\u4e8e\u9ad8\u9636\u51fd\u6570\u6211\u4e4b\u524d\u63a5\u89e6\u7684\u9012\u5f52\u6bd4\u8f83\u591a\u4e0a\u624b\u6bd4\u8f83\u5bb9\u6613\u3002 ![[Pasted image 20220212170418.png]]","title":"Q5: Couple"},{"location":"CS61A/Labs/Lab05/","text":"Lab05 \u00b6 2022-02-26 [[Labs]] Q6: Finding Berries! \u00b6 \u60f3\u7684\u592a\u590d\u6742\u4e86\uff0c\u76f4\u63a5\u628a\u4e00\u4e2anested tree\u53d8\u6210flat tree\u7136\u540e\u7b5b\u9009\u5c31\u884c\u4e86\u3002\u3002\u3002 def berry_finder ( t ): \"\"\"Returns True if t contains a node with the value 'berry' and False otherwise. >>> scrat = tree('berry') >>> berry_finder(scrat) True >>> sproul = tree('roots', [tree('branch1', [tree('leaf'), tree('berry')]), tree('branch2')]) >>> berry_finder(sproul) True >>> numbers = tree(1, [tree(2), tree(3, [tree(4), tree(5)]), tree(6, [tree(7)])]) >>> berry_finder(numbers) False >>> t = tree(1, [tree('berry',[tree('not berry')])]) >>> berry_finder(t) True \"\"\" if len ([ x for x in flatten ( t ) if x == 'berry' ]) != 0 : return True else : return False \u4f46\u662f\u8fd9\u6837\u4fb5\u72af\u4e86\u6570\u636e\u7ed3\u6784\u9ad8\u5e95\u5c42\u4e92\u4e0d\u4fb5\u72af\u6761\u7ea6 \u53ea\u80fd\u4fee\u6539 def berry_finder ( t ): if is_leaf ( t ) == True : if label ( t ) == 'berry' : return True else : for b in branches ( t ): if label ( b ) == 'berry' : return True if is_leaf ( b ) == False : return berry_finder ( b ) return False Q7: Sprout leaves \u00b6 \u8bfb\u5b8c\u9898\u76ee\u540e\u7b5b\u9009\u51fa\u5173\u952e\uff1a\u6309\u7167\u5217\u8868\u7684\u683c\u5f0f\u627e\u5230\u6211\u4eec\u5bf9\u5e94\u7684\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u7136\u540e\u5728\u5176\u540e\u9010\u4e2a\u52a0\u5165 leaves \u4e2d\u7684\u5143\u7d20\u3002 def sprout_leaves ( t , leaves ): \"\"\"Sprout new leaves containing the data in leaves at each leaf in the original tree t and return the resulting tree. >>> t1 = tree(1, [tree(2), tree(3)]) >>> print_tree(t1) 1 2 3 >>> new1 = sprout_leaves(t1, [4, 5]) >>> print_tree(new1) 1 2 4 5 3 4 5 >>> t2 = tree(1, [tree(2, [tree(3)])]) >>> print_tree(t2) 1 2 3 >>> new2 = sprout_leaves(t2, [6, 1, 2]) >>> print_tree(new2) 1 2 3 6 1 2 \"\"\" for b in list ( t ): index = t . index ( b ) if type ( b ) == list : if len ( b ) != 1 : b = sprout_leaves ( b , leaves ) else : for i in leaves : b . append ([ i ]) t [ index ] = b return t \u4f46\u662f\u540c\u6837\u8fd9\u4e2a\u4e5f\u8fdd\u80cc\u4e86\u4e0a\u8ff0\u6761\u7ea6\uff0c\u7528list\u7684\u6027\u8d28\u4ec0\u4e48\u7684\u5b9e\u5728\u662f\u592a\u72af\u89c4\u4e86\uff01\u9042\u4fee\u6539\u5982\u4e0b\uff1a def sprout_leaves ( t , leaves ): if is_leaf ( t ) == True : for i in leaves : t = sum ( tree ( t ,[ tree ([ i ])]),[]) else : for b in branches ( t ): t = tree ( label ( t ), sum ([[ br for br in branches ( t ) if br != b ],[ sprout_leaves ( b , leaves )]],[])) return t \u8fd9\u4e2a\u80fd\u8fc7\u9898\u76ee\u7684 -q \u4f46\u662f \u8fc7\u4e0d\u4e86 check_abstraction \u3002\u4f46\u662f\u61d2\u5f97\u770b\u662f\u4ec0\u4e48\u95ee\u9898\u4e86\uff0c\u6211\u89c9\u5f97\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u7eaf\u7cb9\u662f\u5224\u5b9a\u5728\u5201\u96be\u6211\u3002","title":"Lab05"},{"location":"CS61A/Labs/Lab05/#lab05","text":"2022-02-26 [[Labs]]","title":"Lab05"},{"location":"CS61A/Labs/Lab05/#q6-finding-berries","text":"\u60f3\u7684\u592a\u590d\u6742\u4e86\uff0c\u76f4\u63a5\u628a\u4e00\u4e2anested tree\u53d8\u6210flat tree\u7136\u540e\u7b5b\u9009\u5c31\u884c\u4e86\u3002\u3002\u3002 def berry_finder ( t ): \"\"\"Returns True if t contains a node with the value 'berry' and False otherwise. >>> scrat = tree('berry') >>> berry_finder(scrat) True >>> sproul = tree('roots', [tree('branch1', [tree('leaf'), tree('berry')]), tree('branch2')]) >>> berry_finder(sproul) True >>> numbers = tree(1, [tree(2), tree(3, [tree(4), tree(5)]), tree(6, [tree(7)])]) >>> berry_finder(numbers) False >>> t = tree(1, [tree('berry',[tree('not berry')])]) >>> berry_finder(t) True \"\"\" if len ([ x for x in flatten ( t ) if x == 'berry' ]) != 0 : return True else : return False \u4f46\u662f\u8fd9\u6837\u4fb5\u72af\u4e86\u6570\u636e\u7ed3\u6784\u9ad8\u5e95\u5c42\u4e92\u4e0d\u4fb5\u72af\u6761\u7ea6 \u53ea\u80fd\u4fee\u6539 def berry_finder ( t ): if is_leaf ( t ) == True : if label ( t ) == 'berry' : return True else : for b in branches ( t ): if label ( b ) == 'berry' : return True if is_leaf ( b ) == False : return berry_finder ( b ) return False","title":"Q6: Finding Berries!"},{"location":"CS61A/Labs/Lab05/#q7-sprout-leaves","text":"\u8bfb\u5b8c\u9898\u76ee\u540e\u7b5b\u9009\u51fa\u5173\u952e\uff1a\u6309\u7167\u5217\u8868\u7684\u683c\u5f0f\u627e\u5230\u6211\u4eec\u5bf9\u5e94\u7684\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u7136\u540e\u5728\u5176\u540e\u9010\u4e2a\u52a0\u5165 leaves \u4e2d\u7684\u5143\u7d20\u3002 def sprout_leaves ( t , leaves ): \"\"\"Sprout new leaves containing the data in leaves at each leaf in the original tree t and return the resulting tree. >>> t1 = tree(1, [tree(2), tree(3)]) >>> print_tree(t1) 1 2 3 >>> new1 = sprout_leaves(t1, [4, 5]) >>> print_tree(new1) 1 2 4 5 3 4 5 >>> t2 = tree(1, [tree(2, [tree(3)])]) >>> print_tree(t2) 1 2 3 >>> new2 = sprout_leaves(t2, [6, 1, 2]) >>> print_tree(new2) 1 2 3 6 1 2 \"\"\" for b in list ( t ): index = t . index ( b ) if type ( b ) == list : if len ( b ) != 1 : b = sprout_leaves ( b , leaves ) else : for i in leaves : b . append ([ i ]) t [ index ] = b return t \u4f46\u662f\u540c\u6837\u8fd9\u4e2a\u4e5f\u8fdd\u80cc\u4e86\u4e0a\u8ff0\u6761\u7ea6\uff0c\u7528list\u7684\u6027\u8d28\u4ec0\u4e48\u7684\u5b9e\u5728\u662f\u592a\u72af\u89c4\u4e86\uff01\u9042\u4fee\u6539\u5982\u4e0b\uff1a def sprout_leaves ( t , leaves ): if is_leaf ( t ) == True : for i in leaves : t = sum ( tree ( t ,[ tree ([ i ])]),[]) else : for b in branches ( t ): t = tree ( label ( t ), sum ([[ br for br in branches ( t ) if br != b ],[ sprout_leaves ( b , leaves )]],[])) return t \u8fd9\u4e2a\u80fd\u8fc7\u9898\u76ee\u7684 -q \u4f46\u662f \u8fc7\u4e0d\u4e86 check_abstraction \u3002\u4f46\u662f\u61d2\u5f97\u770b\u662f\u4ec0\u4e48\u95ee\u9898\u4e86\uff0c\u6211\u89c9\u5f97\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u7eaf\u7cb9\u662f\u5224\u5b9a\u5728\u5201\u96be\u6211\u3002","title":"Q7: Sprout leaves"},{"location":"CS61A/Labs/Labs/","text":"Labs \u00b6 [[CS61A]] type: folder_brief_live","title":"Labs"},{"location":"CS61A/Labs/Labs/#labs","text":"[[CS61A]] type: folder_brief_live","title":"Labs"},{"location":"CS61A/Lectures/Lecture01/","text":"[[Lectures]] 2021.12.18 About the course \u00b6 An Introduction to Computer Science \u00b6 What is This Course About? A course about managing complexity Mastering abstraction \uff08\u672c\u8bfe\u7a0b\u6700\u6838\u5fc3\u7684\u76ee\u6807\uff09 Programming paradigms \"Not all about 0 's and 1 's An introduction to Python Full understanding of language fundamentals Learning through implementation -How computers interpret programming languages A challenging course that will demand a lot of you \u672c\u8bfe\u7a0b\u4f1a\u5b66\u4e60python\uff0c\u4f46\u662f\u4e0d\u662f\u4ec5\u4ec5\u8bb2\u8ff0\u6bcf\u4e2a\u529f\u80fd\uff0c\u800c\u662f\u6df1\u5165\u5230\u7ec6\u8282\u3002 Expressions \u00b6 [[Call expressions]] \u00b6 \u7ec4\u6210 is an expression that involves a function call. From CS61A Wiki. from operator import add , mul add ( mul ( 2 , 3 ), 1 ) 7 evaluate operator of add(mul(2, 3), 1) and find that it is function add evaluate operand mul(2, 3) evaluate operator mul and find that it is function \\(m u l\\) evaluate operand 2 (primitive) evaluate operand 3 (primitive) apply function mul to 2 and 3 , returns 6 evaluate operand 1 (primitive) apply function add to 6 and 1 , returns 7 \u5373\u8c03\u7528add\u7d2f\u52a0\u51fd\u6570\uff0c\u4ee5\u53camul\u7d2f\u4e58\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u53c2\u6570\u4f9d\u6b21\u505a\u52a0\u548c\u6216\u8005\u4e58\u79ef\uff0ca sinple function right? Evaluation procedure for call expressions: Evaluate the operator and then the operand subexpressions Apply the function that is the value of the operator subexpression to the arguments that are the values of the operand subexpression According to the evaluate procedure, evaluate nested expressions \u8c03\u7528\u6811\uff08\u8868\u8fbe\u6811\uff09 Functions, Objects, and Interpreters \u00b6 \u7528\u6587\u672c\u5728python\u547d\u4ee4\u884c\u4e2d\u73a9\u800d\u4e86\u4e00\u4e0b, \u6ca1\u6709\u4ec0\u4e48\u592a\u91cd\u8981\u7684\u5185\u5bb9\u3002\u4f46\u662f\u5f88\u6709\u8da3hh\u3002 \u4e4b\u540e\u8fd8\u6709Lab00\uff1a link","title":"Lecture01"},{"location":"CS61A/Lectures/Lecture01/#about-the-course","text":"","title":"About the course"},{"location":"CS61A/Lectures/Lecture01/#an-introduction-to-computer-science","text":"What is This Course About? A course about managing complexity Mastering abstraction \uff08\u672c\u8bfe\u7a0b\u6700\u6838\u5fc3\u7684\u76ee\u6807\uff09 Programming paradigms \"Not all about 0 's and 1 's An introduction to Python Full understanding of language fundamentals Learning through implementation -How computers interpret programming languages A challenging course that will demand a lot of you \u672c\u8bfe\u7a0b\u4f1a\u5b66\u4e60python\uff0c\u4f46\u662f\u4e0d\u662f\u4ec5\u4ec5\u8bb2\u8ff0\u6bcf\u4e2a\u529f\u80fd\uff0c\u800c\u662f\u6df1\u5165\u5230\u7ec6\u8282\u3002","title":"An Introduction to Computer Science"},{"location":"CS61A/Lectures/Lecture01/#expressions","text":"","title":"Expressions"},{"location":"CS61A/Lectures/Lecture01/#call-expressions","text":"\u7ec4\u6210 is an expression that involves a function call. From CS61A Wiki. from operator import add , mul add ( mul ( 2 , 3 ), 1 ) 7 evaluate operator of add(mul(2, 3), 1) and find that it is function add evaluate operand mul(2, 3) evaluate operator mul and find that it is function \\(m u l\\) evaluate operand 2 (primitive) evaluate operand 3 (primitive) apply function mul to 2 and 3 , returns 6 evaluate operand 1 (primitive) apply function add to 6 and 1 , returns 7 \u5373\u8c03\u7528add\u7d2f\u52a0\u51fd\u6570\uff0c\u4ee5\u53camul\u7d2f\u4e58\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u53c2\u6570\u4f9d\u6b21\u505a\u52a0\u548c\u6216\u8005\u4e58\u79ef\uff0ca sinple function right? Evaluation procedure for call expressions: Evaluate the operator and then the operand subexpressions Apply the function that is the value of the operator subexpression to the arguments that are the values of the operand subexpression According to the evaluate procedure, evaluate nested expressions \u8c03\u7528\u6811\uff08\u8868\u8fbe\u6811\uff09","title":"[[Call expressions]]"},{"location":"CS61A/Lectures/Lecture01/#functions-objects-and-interpreters","text":"\u7528\u6587\u672c\u5728python\u547d\u4ee4\u884c\u4e2d\u73a9\u800d\u4e86\u4e00\u4e0b, \u6ca1\u6709\u4ec0\u4e48\u592a\u91cd\u8981\u7684\u5185\u5bb9\u3002\u4f46\u662f\u5f88\u6709\u8da3hh\u3002 \u4e4b\u540e\u8fd8\u6709Lab00\uff1a link","title":"Functions, Objects, and Interpreters"},{"location":"CS61A/Lectures/Lecture02/","text":"[[Lectures]] 2021.12.19 Types of Expressions \u00b6 Operand can also be none, like: f() Discussion Question 1 \u00b6 The inside out: h-->max g-->min f-->max max-->min The answer is 3 Environment Diagrams \u00b6 \u4e0a\u56fe\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7Diagram\u4e00\u6b65\u6b65\u63a8\u51fa\u6765\u6bcf\u4e2a\u51fd\u6570\u5728\u6700\u540e\u7684\u5b9e\u9645\u610f\u4e49\uff0c\u7136\u540e\u901a\u8fc7Evaluation procedure\u4e00\u6b65\u6b65\u63a8\u51fa\u6765\u6240\u6709\u7684operator\u6240\u5185\u542b\u7684operend Defining Functions \u00b6 \u8fd9\u91cc\u5f88\u6709\u610f\u601d\u7684\u4e00\u70b9\u662f\u628a\u4e4b\u524d\u6211\u8ba4\u4e3a\u6ca1\u4ec0\u4e48\u8054\u7cfb\u7684\u8d4b\u503c\u548c\u51fd\u6570\u8054\u7cfb\u8d77\u6765\u4e86\u3002 \u8d4b\u503c\u662f\u5c06\u53d8\u91cf\u540d\u548c\u503c\u7ed1\u5b9a\uff08bind\uff09\u3002 \u51fd\u6570\u662f\u5c06\u51fd\u6570\u540d\u548c\u8868\u8fbe\u5f0f\u7ed1\u5b9a\u3002 ps. \u8868\u8fbe\u5f0f(\u6216\u8005\u5e7f\u4e49\u4e00\u70b9\u662f\u64cd\u4f5c\uff0c\u867d\u7136\u672c\u8d28\u4e0a\u5c31\u662f\u8868\u8fbe\u5f0f\u4ee5\u53ca\u8d4b\u503c\u64cd\u4f5c) \u7b97\u662f\u4e00\u4e2a\u5c0f\u4e00\u70b9\u7684big idea\u4e86\u3002 \u4e4b\u540e\u8fd8\u6709HW01: link","title":"Lecture02"},{"location":"CS61A/Lectures/Lecture02/#types-of-expressions","text":"Operand can also be none, like: f()","title":"Types of Expressions"},{"location":"CS61A/Lectures/Lecture02/#discussion-question-1","text":"The inside out: h-->max g-->min f-->max max-->min The answer is 3","title":"Discussion Question 1"},{"location":"CS61A/Lectures/Lecture02/#environment-diagrams","text":"\u4e0a\u56fe\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7Diagram\u4e00\u6b65\u6b65\u63a8\u51fa\u6765\u6bcf\u4e2a\u51fd\u6570\u5728\u6700\u540e\u7684\u5b9e\u9645\u610f\u4e49\uff0c\u7136\u540e\u901a\u8fc7Evaluation procedure\u4e00\u6b65\u6b65\u63a8\u51fa\u6765\u6240\u6709\u7684operator\u6240\u5185\u542b\u7684operend","title":"Environment Diagrams"},{"location":"CS61A/Lectures/Lecture02/#defining-functions","text":"\u8fd9\u91cc\u5f88\u6709\u610f\u601d\u7684\u4e00\u70b9\u662f\u628a\u4e4b\u524d\u6211\u8ba4\u4e3a\u6ca1\u4ec0\u4e48\u8054\u7cfb\u7684\u8d4b\u503c\u548c\u51fd\u6570\u8054\u7cfb\u8d77\u6765\u4e86\u3002 \u8d4b\u503c\u662f\u5c06\u53d8\u91cf\u540d\u548c\u503c\u7ed1\u5b9a\uff08bind\uff09\u3002 \u51fd\u6570\u662f\u5c06\u51fd\u6570\u540d\u548c\u8868\u8fbe\u5f0f\u7ed1\u5b9a\u3002 ps. \u8868\u8fbe\u5f0f(\u6216\u8005\u5e7f\u4e49\u4e00\u70b9\u662f\u64cd\u4f5c\uff0c\u867d\u7136\u672c\u8d28\u4e0a\u5c31\u662f\u8868\u8fbe\u5f0f\u4ee5\u53ca\u8d4b\u503c\u64cd\u4f5c) \u7b97\u662f\u4e00\u4e2a\u5c0f\u4e00\u70b9\u7684big idea\u4e86\u3002 \u4e4b\u540e\u8fd8\u6709HW01: link","title":"Defining Functions"},{"location":"CS61A/Lectures/Lecture03/","text":"[[Lectures]] 2021.12.21 \u8fd9\u8282\u5f00\u59cb\u770b\u6bd4\u8f83\u65b0\u7684\u7248\u672c\uff1aFall 2021 Print and None \u00b6 ^faeb3e link \u51fd\u6570\u5206\u4e3a\uff1a Pure Functions: \u53ea\u901a\u8fc7\u8ba1\u7b97\u8fd4\u56de\u4e00\u4e2a\u503c Non-Pure Functions\uff1a \u4e0d\u8fd4\u56de\u503c\u4f46\u662f\u53ef\u80fd\u4f1a\u505a\u4e00\u4e9b\u522b\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982 print() \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4e0d\u8f93\u51fa\u4efb\u4f55\u503c\uff0c\u4f46\u662f\u4f1a\u6253\u5370\u51fa\u6765\u53c2\u6570\uff0c\u6240\u4ee5\u4f1a\u53d1\u751f\u5982\u4e0b\u7684\u4e8b\u60c5\uff1a Expression tree \u5982\u4e0b\uff1a Multiple Environments \u00b6 Vedio link \u8bb2\u5b9e\u8bdd\u8fd9\u8282\u7684\u957f\u96be\u53e5\u6709\u70b9\u591a\uff0c\u903b\u8f91\u6bd4\u8f83\u590d\u6742\uff0c\u6ca1\u6709\u7279\u522b\u641e\u660e\u767d\u8bb2\u4e86\u4ec0\u4e48\uff0c\uff0c\uff0c \u7136\u540e\u53bb\u770b\u4e86\u8bfe\u672c( 1.3.1 Environments )\uff0c\u91cc\u9762\u7684\u4ecb\u7ecd\u4f1a\u6bd4\u8f83\u8be6\u7ec6\u800c\u4e14\u4e0d\u7528\u62c5\u5fc3\u957f\u96be\u53e5\u542c\u4e0d\u61c2\u54c8\u54c8\u54c8\u3002 \u8fd9\u91cc\u653e\u51e0\u4e2a\u6211\u8ba4\u4e3a\u6bd4\u8f83\u91cd\u8981\u7684\u6982\u5ff5\u548cpython tutor\u4f5c\u4e3a\u6f14\u793a\u3002 Intrinsic name & Bound name of a function The name of a function is repeated twice, once in the frame and again as part of the function itself. The name appearing in the function is called the intrinsic name. The name in a frame is a bound name. There is a difference between the two: different names may refer to the same function, but that function itself has only one intrinsic name. \u51fd\u6570\u6709\u4e24\u79cd\u540d\u5b57\uff1aIntrinsic name & Bound name\u3002 \u5728Diagram\u4e2d\u5de6\u4fa7\u7684\u662fbound name\uff0c\u53f3\u4fa7\u662fintrinsic name\uff0c\u5de6\u4fa7\u7684\u540d\u5b57\u662f\u4f60\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u6bd4\u5982\u4f60\u53eb\u4f60\u7684\u624b\u673a\u53eb\u50bb\u599e\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ea\u662f\u50bb\u599e\u8fd9\u4e2a\u540d\u79f0\u6307\u5411\u4e86\u8fd9\u4e2a\u552f\u4e00\u7684\u8bbe\u5907\u3002\u672c\u8d28\u540d\u8fd8\u662f\u90a3\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u7801\u3002 \u6f14\u793a\u4e2d\uff1a \u4e00\u65e6 max \u88abbound\u5230\u6570\u503c3\uff0c\u5b83\u5c31\u4e0d\u80fd\u518d\u4f5c\u4e3a\u51fd\u6570\u4f7f\u7528\u3002 Calling a User-Defined Function [[\u4f7f\u7528\u81ea\u5efa\u51fd\u6570]]\u4f1a: \uff081\uff09\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684\u5b50\u6846\u67b6\uff0c\u79f0\u4e3alocal frame\uff0c\u5f62\u540cglobal frame \uff082\uff09\u9996\u5148\u4f1a\u628a\u4f20\u5165\u7684\u6570\u503c\u548c\u5bf9\u5e94\u7684\u5f62\u53c2\u7ed1\u5b9a \uff083\uff09\u5176\u6b21\u4f1a\u4f7f\u7528\u8fd9\u4e9b\u5f62\u53c2\u6267\u884c\u51fd\u6570\u4f53 \u5f53\u51fd\u6570\u4f53\u6267\u884c\u65f6\uff0c\u9700\u8981\u7528\u5230\u67d0\u53d8\u91cf\uff0c\u5148\u5728\u5f53\u524d\u7684\u6846\u67b6\uff08local frame\uff09\u4e2d\u641c\u7d22\uff0c\u6ca1\u6709\u7684\u8bdd\u518d\u53bb\u6bcdframe\uff08global frame\uff09\u627e\u3002 Miscellaneous Python Features \u00b6 [[Docstring]]: def\u884c\u4e0b\u7528\u4e8e\u89e3\u91ca\u51fd\u6570\u7528\u9014\u7684\u8bed\u53e5 ![[Pasted image 20220119132522.png]] \u4e5f\u53ef\u4ee5\u8fd9\u6837\u6d4b\u8bd5\u6837\u4f8b[[Doctest]] ![[Pasted image 20220119133710.png]] Operator \u00b6 >>> import operator >>> truediv ( 2022 , 10 ) #\u771f\u9664\u6cd5 \u7b49\u4ef7\u4e8e2022/10 202.2 >>> floordiv ( 2022 , 10 ) #\u6574\u9664 \u7b49\u4ef7\u4e8e2022//10 202 >>> mod ( 2022 , 10 ) #\u53d6\u4f59\uff08\u53d6\u6a21\uff09 \u7b49\u540c\u4e8e2022 % 10 3 ### [[Placeholder]] \u5f62\u53c2\u53ef\u4ee5\u5199\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5728\u8c03\u7528\u65f6\u5982\u679c\u6ca1\u6709\u7ed9\u5176\u8d4b\u503c\u5219\u4f20\u5165\u5360\u4f4d\u7b26\u7684\u503c ![[Pasted image 20220119134248.png]] Conditional statements \u00b6 Conditional statements - YouTube [[Statements]] \u00b6 ![[Pasted image 20220119134902.png]] ![[Pasted image 20220119135255.png]] [[Conditional statements]] \u00b6 \u5176\u5b9e\u6ca1\u4ec0\u4e48\u592a\u591a\u6ca1\u89c1\u8bc6\u8fc7\u7684\u77e5\u8bc6\uff0c\uff0c\uff0c ![[Pasted image 20220119135643.png]] ![[Pasted image 20220119140550.png]] [[George boole]] \u00b6 ![[Pasted image 20220119140652.png]] \u5e03\u5c14\u6b63\u5728\u8ba4\u771f\u5ba1\u89c6\u4f60\u7684\u8868\u8fbe\u5f0f\u662f\u771f\u662f\u5047 \uff1aP False values in Python: False,0, \"\"\uff0cNone (more to come) True values in Python: Anything else (True) [[Iteration]] \u00b6 [[While]] \u6ca1\u4ec0\u4e48\u5185\u5bb9\uff0c\u7565 Example: Prime Factorization \u00b6 \u7d20\u56e0\u6570\u5206\u89e3\uff0c\u6216\u56e0\u6570\u5206\u89e3 \u6709\u65f6\u5019\u628a\u6240\u6709\u7684\u529f\u80fd\u7528\u4e00\u4e2a\u51fd\u6570\u5199\u5b8c\uff0c\u53ef\u8bfb\u6027\u4f1a\u6bd4\u8f83\u5dee\uff0c\u4e0d\u5982\u628a\u51fd\u6570\u66f4\u52a0\u539f\u5b50\u5316\uff0c\u6bcf\u4e2a\u51fd\u6570\u5404\u53f8\u5176\u804c\uff0c\u53ef\u8bfb\u6027\u8f83\u9ad8\u7684\u540c\u65f6\u8fd8\u53ef\u4ee5\u66f4\u6613\u4e8e\u7f16\u7a0b\u65f6\u6574\u7406\u601d\u7ef4\u3002 Dijkstra \u8bf4\u8fc7\uff1a \u00b6 \u6700\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u6c38\u8fdc\u80fd\u610f\u8bc6\u5230\u81ea\u5df1\u5934\u8111\u7684\u6709\u9650\u6027\uff0c\u56e0\u6b64\u4ed6\u4eec\u4f1a\u5145\u5206\u8c26\u5351\u7684\u7684\u5bf9\u5f85\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u5e76\u4e14\u907f\u514d\u90a3\u4e9b\u770b\u4f3c\u806a\u660e\u7684\u6280\u5de7 \u3002 \u901a\u5f80\u5929\u624d\u7684\u6700\u4f73\u9014\u5f84\u662f\uff1a\u8ba9\u95ee\u9898\u6bd4\u4f60\u7684\u8111\u5bb9\u91cf\u5c0f\u3002 [[\u6700\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u2026\u2026]]","title":"Lecture03"},{"location":"CS61A/Lectures/Lecture03/#print-and-none","text":"^faeb3e link \u51fd\u6570\u5206\u4e3a\uff1a Pure Functions: \u53ea\u901a\u8fc7\u8ba1\u7b97\u8fd4\u56de\u4e00\u4e2a\u503c Non-Pure Functions\uff1a \u4e0d\u8fd4\u56de\u503c\u4f46\u662f\u53ef\u80fd\u4f1a\u505a\u4e00\u4e9b\u522b\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982 print() \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u4e0d\u8f93\u51fa\u4efb\u4f55\u503c\uff0c\u4f46\u662f\u4f1a\u6253\u5370\u51fa\u6765\u53c2\u6570\uff0c\u6240\u4ee5\u4f1a\u53d1\u751f\u5982\u4e0b\u7684\u4e8b\u60c5\uff1a Expression tree \u5982\u4e0b\uff1a","title":"Print and None"},{"location":"CS61A/Lectures/Lecture03/#multiple-environments","text":"Vedio link \u8bb2\u5b9e\u8bdd\u8fd9\u8282\u7684\u957f\u96be\u53e5\u6709\u70b9\u591a\uff0c\u903b\u8f91\u6bd4\u8f83\u590d\u6742\uff0c\u6ca1\u6709\u7279\u522b\u641e\u660e\u767d\u8bb2\u4e86\u4ec0\u4e48\uff0c\uff0c\uff0c \u7136\u540e\u53bb\u770b\u4e86\u8bfe\u672c( 1.3.1 Environments )\uff0c\u91cc\u9762\u7684\u4ecb\u7ecd\u4f1a\u6bd4\u8f83\u8be6\u7ec6\u800c\u4e14\u4e0d\u7528\u62c5\u5fc3\u957f\u96be\u53e5\u542c\u4e0d\u61c2\u54c8\u54c8\u54c8\u3002 \u8fd9\u91cc\u653e\u51e0\u4e2a\u6211\u8ba4\u4e3a\u6bd4\u8f83\u91cd\u8981\u7684\u6982\u5ff5\u548cpython tutor\u4f5c\u4e3a\u6f14\u793a\u3002 Intrinsic name & Bound name of a function The name of a function is repeated twice, once in the frame and again as part of the function itself. The name appearing in the function is called the intrinsic name. The name in a frame is a bound name. There is a difference between the two: different names may refer to the same function, but that function itself has only one intrinsic name. \u51fd\u6570\u6709\u4e24\u79cd\u540d\u5b57\uff1aIntrinsic name & Bound name\u3002 \u5728Diagram\u4e2d\u5de6\u4fa7\u7684\u662fbound name\uff0c\u53f3\u4fa7\u662fintrinsic name\uff0c\u5de6\u4fa7\u7684\u540d\u5b57\u662f\u4f60\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u6bd4\u5982\u4f60\u53eb\u4f60\u7684\u624b\u673a\u53eb\u50bb\u599e\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ea\u662f\u50bb\u599e\u8fd9\u4e2a\u540d\u79f0\u6307\u5411\u4e86\u8fd9\u4e2a\u552f\u4e00\u7684\u8bbe\u5907\u3002\u672c\u8d28\u540d\u8fd8\u662f\u90a3\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u7801\u3002 \u6f14\u793a\u4e2d\uff1a \u4e00\u65e6 max \u88abbound\u5230\u6570\u503c3\uff0c\u5b83\u5c31\u4e0d\u80fd\u518d\u4f5c\u4e3a\u51fd\u6570\u4f7f\u7528\u3002 Calling a User-Defined Function [[\u4f7f\u7528\u81ea\u5efa\u51fd\u6570]]\u4f1a: \uff081\uff09\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684\u5b50\u6846\u67b6\uff0c\u79f0\u4e3alocal frame\uff0c\u5f62\u540cglobal frame \uff082\uff09\u9996\u5148\u4f1a\u628a\u4f20\u5165\u7684\u6570\u503c\u548c\u5bf9\u5e94\u7684\u5f62\u53c2\u7ed1\u5b9a \uff083\uff09\u5176\u6b21\u4f1a\u4f7f\u7528\u8fd9\u4e9b\u5f62\u53c2\u6267\u884c\u51fd\u6570\u4f53 \u5f53\u51fd\u6570\u4f53\u6267\u884c\u65f6\uff0c\u9700\u8981\u7528\u5230\u67d0\u53d8\u91cf\uff0c\u5148\u5728\u5f53\u524d\u7684\u6846\u67b6\uff08local frame\uff09\u4e2d\u641c\u7d22\uff0c\u6ca1\u6709\u7684\u8bdd\u518d\u53bb\u6bcdframe\uff08global frame\uff09\u627e\u3002","title":"Multiple Environments"},{"location":"CS61A/Lectures/Lecture03/#miscellaneous-python-features","text":"[[Docstring]]: def\u884c\u4e0b\u7528\u4e8e\u89e3\u91ca\u51fd\u6570\u7528\u9014\u7684\u8bed\u53e5 ![[Pasted image 20220119132522.png]] \u4e5f\u53ef\u4ee5\u8fd9\u6837\u6d4b\u8bd5\u6837\u4f8b[[Doctest]] ![[Pasted image 20220119133710.png]]","title":"Miscellaneous Python Features"},{"location":"CS61A/Lectures/Lecture03/#operator","text":">>> import operator >>> truediv ( 2022 , 10 ) #\u771f\u9664\u6cd5 \u7b49\u4ef7\u4e8e2022/10 202.2 >>> floordiv ( 2022 , 10 ) #\u6574\u9664 \u7b49\u4ef7\u4e8e2022//10 202 >>> mod ( 2022 , 10 ) #\u53d6\u4f59\uff08\u53d6\u6a21\uff09 \u7b49\u540c\u4e8e2022 % 10 3 ### [[Placeholder]] \u5f62\u53c2\u53ef\u4ee5\u5199\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5728\u8c03\u7528\u65f6\u5982\u679c\u6ca1\u6709\u7ed9\u5176\u8d4b\u503c\u5219\u4f20\u5165\u5360\u4f4d\u7b26\u7684\u503c ![[Pasted image 20220119134248.png]]","title":"Operator"},{"location":"CS61A/Lectures/Lecture03/#conditional-statements","text":"Conditional statements - YouTube","title":"Conditional statements"},{"location":"CS61A/Lectures/Lecture03/#statements","text":"![[Pasted image 20220119134902.png]] ![[Pasted image 20220119135255.png]]","title":"[[Statements]]"},{"location":"CS61A/Lectures/Lecture03/#conditional-statements_1","text":"\u5176\u5b9e\u6ca1\u4ec0\u4e48\u592a\u591a\u6ca1\u89c1\u8bc6\u8fc7\u7684\u77e5\u8bc6\uff0c\uff0c\uff0c ![[Pasted image 20220119135643.png]] ![[Pasted image 20220119140550.png]]","title":"[[Conditional statements]]"},{"location":"CS61A/Lectures/Lecture03/#george-boole","text":"![[Pasted image 20220119140652.png]] \u5e03\u5c14\u6b63\u5728\u8ba4\u771f\u5ba1\u89c6\u4f60\u7684\u8868\u8fbe\u5f0f\u662f\u771f\u662f\u5047 \uff1aP False values in Python: False,0, \"\"\uff0cNone (more to come) True values in Python: Anything else (True)","title":"[[George boole]]"},{"location":"CS61A/Lectures/Lecture03/#iteration","text":"[[While]] \u6ca1\u4ec0\u4e48\u5185\u5bb9\uff0c\u7565","title":"[[Iteration]]"},{"location":"CS61A/Lectures/Lecture03/#example-prime-factorization","text":"\u7d20\u56e0\u6570\u5206\u89e3\uff0c\u6216\u56e0\u6570\u5206\u89e3 \u6709\u65f6\u5019\u628a\u6240\u6709\u7684\u529f\u80fd\u7528\u4e00\u4e2a\u51fd\u6570\u5199\u5b8c\uff0c\u53ef\u8bfb\u6027\u4f1a\u6bd4\u8f83\u5dee\uff0c\u4e0d\u5982\u628a\u51fd\u6570\u66f4\u52a0\u539f\u5b50\u5316\uff0c\u6bcf\u4e2a\u51fd\u6570\u5404\u53f8\u5176\u804c\uff0c\u53ef\u8bfb\u6027\u8f83\u9ad8\u7684\u540c\u65f6\u8fd8\u53ef\u4ee5\u66f4\u6613\u4e8e\u7f16\u7a0b\u65f6\u6574\u7406\u601d\u7ef4\u3002","title":"Example: Prime Factorization"},{"location":"CS61A/Lectures/Lecture03/#dijkstra","text":"\u6700\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u6c38\u8fdc\u80fd\u610f\u8bc6\u5230\u81ea\u5df1\u5934\u8111\u7684\u6709\u9650\u6027\uff0c\u56e0\u6b64\u4ed6\u4eec\u4f1a\u5145\u5206\u8c26\u5351\u7684\u7684\u5bf9\u5f85\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u5e76\u4e14\u907f\u514d\u90a3\u4e9b\u770b\u4f3c\u806a\u660e\u7684\u6280\u5de7 \u3002 \u901a\u5f80\u5929\u624d\u7684\u6700\u4f73\u9014\u5f84\u662f\uff1a\u8ba9\u95ee\u9898\u6bd4\u4f60\u7684\u8111\u5bb9\u91cf\u5c0f\u3002 [[\u6700\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u2026\u2026]]","title":"Dijkstra  \u8bf4\u8fc7\uff1a"},{"location":"CS61A/Lectures/Lecture04/","text":"[[Lectures]] 2022.1.21 [[Iteration]] Example \u00b6 61A Fall 2016 Lecture 4 Video 2 - YouTube The [[Fibonacci]] Sequence \u00b6 ![[Pasted image 20220121192601.png]] \u56fe\u4e3a\u6590\u6ce2\u90a3\u5951\u548c\u4ed6\u7684\u5934\u5dfe\u7684\u5408\u5f71 ![[Pasted image 20220121192735.png]] \u6590\u6ce2\u90a3\u5951\u87ba\u7ebf def fib ( n ): '''Compute the nth Fibonacci number?''' pred , curr = 0 , 1 k = 1 while k < n : pred , curr = curr , pred + curr k = k + 1 return curr \u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u53ef\u4ee5\u5b9e\u73b0\u7b2c1~n\u7684\u6590\u6ce2\u90a3\u5951\u6570\u8f93\u51fa\uff0c\u4f46\u662f\u7b2c\u96f6\u4e2a\u4e5f\u5c31\u662f0\u65e0\u6cd5\u8f93\u51fa\u3002 \u636e\u6b64\u6539\u8fdb\u4ee3\u7801\uff0c\u53ef\u4ee5\u6309\u7167\u5f53\u524d\u7b97\u6cd5 \u5411\u524d\u63a8\u4e00\u8f6eloop \uff1a \u5373\u4ece\uff1a ... pred , curr = 0 , 1 k = 1 ... \u53d8\u5230\uff1a ... pred , curr = 1 , 0 k = 0 ... \u4f20\u5165n=0\uff0cwhile\u5faa\u73af\u4e0d\u4f1a\u8fdb\u5165\uff0c\u76f4\u63a5\u8f93\u51facurr\uff0c\u4e5f\u5c31\u662f0\u3002 \u7f3a\u70b9\uff1a\u8f93\u51fa>0\u7684\u6570\u4f1a\u6bd4\u6539\u8fdb\u524d\u591a\u8d70\u4e00\u6b21\u5faa\u73af\uff0c\u52a0\u5927\u65f6\u95f4\u5f00\u9500\uff08\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\uff09\u3002 Designing Functions \u00b6 61A Fall 2014 Lecture 4 Video 3 - YouTube \u51fd\u6570\u5316 --> \u4f7f\u7a0b\u5e8f\u770b\u8d77\u6765\u66f4\u52a0\u901a\u987a\uff0c \u51cf\u5c11\u7f16\u7a0b\u65f6\u7684\u5de5\u4f5c\u91cf\uff0c \u51cf\u5c11\u7a0b\u5e8f\u5458\u5934\u53d1\u7684\u6d88\u8017\u91cf\u3002 \u5b9a\u4e49\u57df(Domain)\uff1a\u8f93\u5165\u7684\u53c2\u6570\u7684\u96c6\u5408 \u503c\u57df(Range)\uff1a\u8f93\u51fa\u7684\u503c\u7684\u96c6\u5408 \u51fd\u6570\u7684\u4e00\u4e9b\u51c6\u5219\uff1a - \u6bcf\u4e2a\u51fd\u6570\u4e00\u4e2a\u5177\u4f53\u7684\u529f\u80fd\uff08\u539f\u5b50\u5316\uff09 - \u6bcf\u6b21\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u901a\u8fc7\u8c03\u7528\u6b21\u6570\u8c03\u6574\u6267\u884c\u6b21\u6570\uff08\u4e0d\u81ea\u5faa\u73af\uff09 - \u901a\u7528\u5316\u51fd\u6570\uff0c\u7535\u6e90\u63d2\u5934,no\uff08\u5236\u5f0f\u591a\u6837\uff09\uff1bUSB, yes\u3002 Higher-Order Functions \u00b6 61A Fall 2013 Lecture 4 Video 4 - YouTube assert \u00b6 ![[assert]] \u9ad8\u9636\u51fd\u6570 \uff1a\u53ef\u4ee5\u5c06\u5176\u4ed6\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u6216\u8005\u8fd4\u56de\u7ed3\u679c\u3002 Generalization \u4e00\u4e9b\u5728\u4e0d\u540c\u7684\u51fd\u6570\u4e2d\u76f8\u540c\u7684\u6b65\u9aa4\uff0c\u5c06\u5176\u505a\u6210\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u53ea\u9700\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5373\u53ef\uff0c\u65e0\u9700\u5728\u6bcf\u4e2a\u51fd\u6570\u4e2d\u91cd\u590d\u7f16\u5199\u3002 ![[Pasted image 20220122164918.png]] Lambda Expressions \u00b6 61A Fall 2014 Lecture 6 Video 2 - YouTube ![[Lambda Expressions]] ![[Pasted image 20220122173552.png]] Control Expressions \u00b6 Logical Operators \u00b6 ![[Boolean Operators#^logic-expressions]] \u57fa\u672c\u4e0a\u5c31\u662f[[Lab01]]\u91cc\u7684[[Boolean Operators]]\uff0ctnnd\u600e\u4e48\u73b0\u5728\u624d\u8bb2\u3002\u5e94\u8be5\u662fJohn\u628a\u89c6\u9891\u987a\u5e8f\u5f04\u9519\u4e86\uff0c\uff0c def has_big_sqrt ( x ): return x > 0 and sqrt ( x ) > 10 def reasonablr ( n ): return n == 0 or 1 / n != 0 \u4e0a\u4f8b\u5c55\u793a\u4e86 and \u548c or \u7684\u4e0d\u4e00\u6837\u7684\u7528\u6cd5\uff1a \u9650\u5236\u6216\u8005\u6269\u5c55\u51fd\u6570\u7684\u5b9a\u4e49\u57df \u3002 Conditional Expressions \u00b6 A conditional expression has the form: < consequent > if < predicate > else < alternative > like: abs ( 1 / x if x != 0 else 0 ) \u7b49\u4ef7\u4e8e\uff1a if < predicate > : < consequent > else : < alternative >","title":"Lecture04"},{"location":"CS61A/Lectures/Lecture04/#iteration-example","text":"61A Fall 2016 Lecture 4 Video 2 - YouTube","title":"[[Iteration]] Example"},{"location":"CS61A/Lectures/Lecture04/#the-fibonacci-sequence","text":"![[Pasted image 20220121192601.png]] \u56fe\u4e3a\u6590\u6ce2\u90a3\u5951\u548c\u4ed6\u7684\u5934\u5dfe\u7684\u5408\u5f71 ![[Pasted image 20220121192735.png]] \u6590\u6ce2\u90a3\u5951\u87ba\u7ebf def fib ( n ): '''Compute the nth Fibonacci number?''' pred , curr = 0 , 1 k = 1 while k < n : pred , curr = curr , pred + curr k = k + 1 return curr \u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u53ef\u4ee5\u5b9e\u73b0\u7b2c1~n\u7684\u6590\u6ce2\u90a3\u5951\u6570\u8f93\u51fa\uff0c\u4f46\u662f\u7b2c\u96f6\u4e2a\u4e5f\u5c31\u662f0\u65e0\u6cd5\u8f93\u51fa\u3002 \u636e\u6b64\u6539\u8fdb\u4ee3\u7801\uff0c\u53ef\u4ee5\u6309\u7167\u5f53\u524d\u7b97\u6cd5 \u5411\u524d\u63a8\u4e00\u8f6eloop \uff1a \u5373\u4ece\uff1a ... pred , curr = 0 , 1 k = 1 ... \u53d8\u5230\uff1a ... pred , curr = 1 , 0 k = 0 ... \u4f20\u5165n=0\uff0cwhile\u5faa\u73af\u4e0d\u4f1a\u8fdb\u5165\uff0c\u76f4\u63a5\u8f93\u51facurr\uff0c\u4e5f\u5c31\u662f0\u3002 \u7f3a\u70b9\uff1a\u8f93\u51fa>0\u7684\u6570\u4f1a\u6bd4\u6539\u8fdb\u524d\u591a\u8d70\u4e00\u6b21\u5faa\u73af\uff0c\u52a0\u5927\u65f6\u95f4\u5f00\u9500\uff08\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\uff09\u3002","title":"The [[Fibonacci]] Sequence"},{"location":"CS61A/Lectures/Lecture04/#designing-functions","text":"61A Fall 2014 Lecture 4 Video 3 - YouTube \u51fd\u6570\u5316 --> \u4f7f\u7a0b\u5e8f\u770b\u8d77\u6765\u66f4\u52a0\u901a\u987a\uff0c \u51cf\u5c11\u7f16\u7a0b\u65f6\u7684\u5de5\u4f5c\u91cf\uff0c \u51cf\u5c11\u7a0b\u5e8f\u5458\u5934\u53d1\u7684\u6d88\u8017\u91cf\u3002 \u5b9a\u4e49\u57df(Domain)\uff1a\u8f93\u5165\u7684\u53c2\u6570\u7684\u96c6\u5408 \u503c\u57df(Range)\uff1a\u8f93\u51fa\u7684\u503c\u7684\u96c6\u5408 \u51fd\u6570\u7684\u4e00\u4e9b\u51c6\u5219\uff1a - \u6bcf\u4e2a\u51fd\u6570\u4e00\u4e2a\u5177\u4f53\u7684\u529f\u80fd\uff08\u539f\u5b50\u5316\uff09 - \u6bcf\u6b21\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u901a\u8fc7\u8c03\u7528\u6b21\u6570\u8c03\u6574\u6267\u884c\u6b21\u6570\uff08\u4e0d\u81ea\u5faa\u73af\uff09 - \u901a\u7528\u5316\u51fd\u6570\uff0c\u7535\u6e90\u63d2\u5934,no\uff08\u5236\u5f0f\u591a\u6837\uff09\uff1bUSB, yes\u3002","title":"Designing Functions"},{"location":"CS61A/Lectures/Lecture04/#higher-order-functions","text":"61A Fall 2013 Lecture 4 Video 4 - YouTube","title":"Higher-Order Functions"},{"location":"CS61A/Lectures/Lecture04/#assert","text":"![[assert]] \u9ad8\u9636\u51fd\u6570 \uff1a\u53ef\u4ee5\u5c06\u5176\u4ed6\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u6216\u8005\u8fd4\u56de\u7ed3\u679c\u3002 Generalization \u4e00\u4e9b\u5728\u4e0d\u540c\u7684\u51fd\u6570\u4e2d\u76f8\u540c\u7684\u6b65\u9aa4\uff0c\u5c06\u5176\u505a\u6210\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u53ea\u9700\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5373\u53ef\uff0c\u65e0\u9700\u5728\u6bcf\u4e2a\u51fd\u6570\u4e2d\u91cd\u590d\u7f16\u5199\u3002 ![[Pasted image 20220122164918.png]]","title":"assert"},{"location":"CS61A/Lectures/Lecture04/#lambda-expressions","text":"61A Fall 2014 Lecture 6 Video 2 - YouTube ![[Lambda Expressions]] ![[Pasted image 20220122173552.png]]","title":"Lambda Expressions"},{"location":"CS61A/Lectures/Lecture04/#control-expressions","text":"","title":"Control Expressions"},{"location":"CS61A/Lectures/Lecture04/#logical-operators","text":"![[Boolean Operators#^logic-expressions]] \u57fa\u672c\u4e0a\u5c31\u662f[[Lab01]]\u91cc\u7684[[Boolean Operators]]\uff0ctnnd\u600e\u4e48\u73b0\u5728\u624d\u8bb2\u3002\u5e94\u8be5\u662fJohn\u628a\u89c6\u9891\u987a\u5e8f\u5f04\u9519\u4e86\uff0c\uff0c def has_big_sqrt ( x ): return x > 0 and sqrt ( x ) > 10 def reasonablr ( n ): return n == 0 or 1 / n != 0 \u4e0a\u4f8b\u5c55\u793a\u4e86 and \u548c or \u7684\u4e0d\u4e00\u6837\u7684\u7528\u6cd5\uff1a \u9650\u5236\u6216\u8005\u6269\u5c55\u51fd\u6570\u7684\u5b9a\u4e49\u57df \u3002","title":"Logical Operators"},{"location":"CS61A/Lectures/Lecture04/#conditional-expressions","text":"A conditional expression has the form: < consequent > if < predicate > else < alternative > like: abs ( 1 / x if x != 0 else 0 ) \u7b49\u4ef7\u4e8e\uff1a if < predicate > : < consequent > else : < alternative >","title":"Conditional Expressions"},{"location":"CS61A/Lectures/Lecture05/","text":"[[Lectures]] 2022.1.29 Environments \u00b6 Environments for Higher-Order Functions \u00b6 ![[Self-defined function# Call-a-self-defined-function]] Call-a-self-defined-function ![[Pasted image 20220129165137.png]] \u5728\u5916\u5c42\u8fd4\u56de\u7684 f(f(x)) \u5b9e\u9645\u4e0a\u8fd8\u662f\u4ee3\u8868\u7740\u5728global frame\u7684 square(x) \uff0c\u53ea\u662f\u7ed1\u5b9a\u7684\u540d\u5b57\u5728local frame\u3002 Higher-Order Function Example: Repeat \u00b6 \u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9ad8\u9636\u51fd\u6570\u4f5c\u4e3a\u793a\u4f8b\uff0c\u4f46\u662f\u4f5c\u4e3a\u7ecf\u5386\u8fc7hog\u8003\u9a8c\u7684\u6211\u6765\u8bf4\u53ef\u8c13\u662f\u7b80\u7b80\u5355\u5355\uff0c\u5c31\u4e0d\u591a\u5570\u55e6\u4e86\uff0c\u6bd5\u7adf\u957f\u8def\u6f2b\u6f2b\uff0c\u800c\u65f6\u95f4\u77ed\u77ed\u3002 Environments for Nested Definitions \u00b6 Nested def: ![[Pasted image 20220129171001.png]] \u4e0a\u56fe\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4f1a\u6709\u7236\u6846\u67b6\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u51fd\u6570\uff1a\u56e0\u4e3a\u8be5\u51fd\u6570\u662f\u5728\u7236\u51fd\u6570\u91cc\u5b9a\u4e49\u5e76\u4e14\u4f5c\u4e3a\u8fd4\u56de\u503c\u8f93\u51fa\u7684\u3002 \u6846\u67b6\u7ed3\u6784\u662f\u8fd9\u6837\u7684\uff1a1-->2-->3 \u8fd9\u6837\u7684\u7ed3\u6784\u4e2d\u6587\u53eb\u505a\u95ed\u5305\uff1a ![[Higher-order Functions#^closure]] \u603b\u7ed3 \uff1a 1.\u6bcf\u4e00\u4e2a\u81ea\u5efa\u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u7236\u6846\u67b6\uff08\u901a\u5e38\u662fglobal frame\uff09 2.\u7236\u6846\u67b6\u5373\u662f\u8be5\u51fd\u6570\u88ab\u5b9a\u4e49\u7684\u5730\u65b9 3.\u6bcf\u4e00\u4e2alocal frame\u90fd\u6709\u7236\u6846\u67b6\uff08\u901a\u5e38\u662fglobal frame\uff09 4.\u6846\u67b6\u7684\u7236\u6846\u67b6\u662f\u91cc\u9762\u51fd\u6570\u88ab\u8c03\u7528\u7684\u90a3\u4e2a\u7236\u6846\u67b6 ^6f9887 (\u6709\u70b9\u7ed5\u5f2f\uff0c\u4f46\u662f\u5176\u5b9e\u62bd\u8c61\u4e0a\u8fd8\u662f\u633a\u597d\u7406\u89e3\u7684\uff0c\u5dee\u4e0d\u591a\u5c31\u662f\u8bf4\u6bcf\u4e2a\u4eba\u90fd\u6709\u7236\u8f88\uff0c\u7236\u8f88\u5c31\u662f\u5b9a\u4e49\u4f60\u662f\u8c01\u8c01\u5b69\u5b50\u7684\u5730\u65b9\uff0c\u5b50\u8f88\u90fd\u6709\u7236\u8f88\uff0c\u5b50\u8f88\u91cc\u9762\u7684\u4eba\u7684\u7236\u8f88\u90fd\u662f\u8fd9\u4e2a\u5b50\u8f88\u7684\u7236\u8f88\uff09 ![[Pasted image 20220129172901.png]] \u5373\u662f\uff1a ![[Self-defined function#^Define-a-self-defined-function]] ![[Self-defined function#^Call-a-self-defined-function]] ## [[Local Names]] \u5c40\u90e8\u53d8\u91cf\u5bf9\u4e8e\u522b\u7684\u51fd\u6570\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 --John DeNero Function Composition \u00b6 \u548chog\u91cc\u9762\u7684both\u7c7b\u4f3c\uff0c\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3001\u3001 \u53cd\u6b63\u5c31\u662f\u9ad8\u9636\u51fd\u6570\u5f2f\u5f2f\u7ed5\u7ed5\uff0c\uff0c Self-Reference \u00b6 \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u81ea\u5df1\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u5957\u5a03\uff01 def print_all ( x ): print ( x ) return print_all print_all ( 1 )( 3 )( 5 ) #\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u51fd\u6570\uff1a print ( 1 ) print ( 3 ) print ( 5 ) '''\u8f93\u51fa\u4f1a\u662f: 1 3 5 ''' Function Currying \u00b6 \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u67ef\u91cc\u5316\uff08Currying\uff09\u662f\u628a\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u53d8\u6362\u6210\u63a5\u53d7\u4e00\u4e2a\u5355\u4e00\u53c2\u6570(\u6700\u521d\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570)\u7684\u51fd\u6570\uff0c\u5e76\u4e14\u8fd4\u56de\u63a5\u53d7\u4f59\u4e0b\u7684\u53c2\u6570\u4e14\u8fd4\u56de\u7ed3\u679c\u7684\u65b0\u51fd\u6570\u7684\u6280\u672f\u3002\u8fd9\u4e2a\u6280\u672f\u7531 Christopher Strachey \u4ee5\u903b\u8f91\u5b66\u5bb6 Haskell Curry \u547d\u540d\u7684\uff0c\u5c3d\u7ba1\u5b83\u662f Moses Schnfinkel \u548c Gottlob Frege \u53d1\u660e\u7684\u3002 -- \u67ef\u91cc\u5316_\u767e\u5ea6\u767e\u79d1 (baidu.com) \u5373\u662f\u5c06\u9700\u8981\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u8f6c\u6362\u6210\u9ad8\u9636\u51fd\u6570\uff0c\u7136\u540e()()\u8fd9\u6837\u8c03\u7528 \u4e5f\u5c31\u662f\u4e00\u6b21\u8f93\u4e00\u4e2a\u53c2\u6570\uff0c\u8f93\u51fa[[Higher-order Functions#^closure|\u95ed\u5305]]\u8fd9\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u3002","title":"Lecture05"},{"location":"CS61A/Lectures/Lecture05/#environments","text":"","title":"Environments"},{"location":"CS61A/Lectures/Lecture05/#environments-for-higher-order-functions","text":"![[Self-defined function# Call-a-self-defined-function]] Call-a-self-defined-function ![[Pasted image 20220129165137.png]] \u5728\u5916\u5c42\u8fd4\u56de\u7684 f(f(x)) \u5b9e\u9645\u4e0a\u8fd8\u662f\u4ee3\u8868\u7740\u5728global frame\u7684 square(x) \uff0c\u53ea\u662f\u7ed1\u5b9a\u7684\u540d\u5b57\u5728local frame\u3002","title":"Environments for Higher-Order Functions"},{"location":"CS61A/Lectures/Lecture05/#higher-order-function-example-repeat","text":"\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9ad8\u9636\u51fd\u6570\u4f5c\u4e3a\u793a\u4f8b\uff0c\u4f46\u662f\u4f5c\u4e3a\u7ecf\u5386\u8fc7hog\u8003\u9a8c\u7684\u6211\u6765\u8bf4\u53ef\u8c13\u662f\u7b80\u7b80\u5355\u5355\uff0c\u5c31\u4e0d\u591a\u5570\u55e6\u4e86\uff0c\u6bd5\u7adf\u957f\u8def\u6f2b\u6f2b\uff0c\u800c\u65f6\u95f4\u77ed\u77ed\u3002","title":"Higher-Order Function Example: Repeat"},{"location":"CS61A/Lectures/Lecture05/#environments-for-nested-definitions","text":"Nested def: ![[Pasted image 20220129171001.png]] \u4e0a\u56fe\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4f1a\u6709\u7236\u6846\u67b6\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u51fd\u6570\uff1a\u56e0\u4e3a\u8be5\u51fd\u6570\u662f\u5728\u7236\u51fd\u6570\u91cc\u5b9a\u4e49\u5e76\u4e14\u4f5c\u4e3a\u8fd4\u56de\u503c\u8f93\u51fa\u7684\u3002 \u6846\u67b6\u7ed3\u6784\u662f\u8fd9\u6837\u7684\uff1a1-->2-->3 \u8fd9\u6837\u7684\u7ed3\u6784\u4e2d\u6587\u53eb\u505a\u95ed\u5305\uff1a ![[Higher-order Functions#^closure]] \u603b\u7ed3 \uff1a 1.\u6bcf\u4e00\u4e2a\u81ea\u5efa\u51fd\u6570\u90fd\u6709\u4e00\u4e2a\u7236\u6846\u67b6\uff08\u901a\u5e38\u662fglobal frame\uff09 2.\u7236\u6846\u67b6\u5373\u662f\u8be5\u51fd\u6570\u88ab\u5b9a\u4e49\u7684\u5730\u65b9 3.\u6bcf\u4e00\u4e2alocal frame\u90fd\u6709\u7236\u6846\u67b6\uff08\u901a\u5e38\u662fglobal frame\uff09 4.\u6846\u67b6\u7684\u7236\u6846\u67b6\u662f\u91cc\u9762\u51fd\u6570\u88ab\u8c03\u7528\u7684\u90a3\u4e2a\u7236\u6846\u67b6 ^6f9887 (\u6709\u70b9\u7ed5\u5f2f\uff0c\u4f46\u662f\u5176\u5b9e\u62bd\u8c61\u4e0a\u8fd8\u662f\u633a\u597d\u7406\u89e3\u7684\uff0c\u5dee\u4e0d\u591a\u5c31\u662f\u8bf4\u6bcf\u4e2a\u4eba\u90fd\u6709\u7236\u8f88\uff0c\u7236\u8f88\u5c31\u662f\u5b9a\u4e49\u4f60\u662f\u8c01\u8c01\u5b69\u5b50\u7684\u5730\u65b9\uff0c\u5b50\u8f88\u90fd\u6709\u7236\u8f88\uff0c\u5b50\u8f88\u91cc\u9762\u7684\u4eba\u7684\u7236\u8f88\u90fd\u662f\u8fd9\u4e2a\u5b50\u8f88\u7684\u7236\u8f88\uff09 ![[Pasted image 20220129172901.png]] \u5373\u662f\uff1a ![[Self-defined function#^Define-a-self-defined-function]] ![[Self-defined function#^Call-a-self-defined-function]] ## [[Local Names]] \u5c40\u90e8\u53d8\u91cf\u5bf9\u4e8e\u522b\u7684\u51fd\u6570\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 --John DeNero","title":"Environments for Nested Definitions"},{"location":"CS61A/Lectures/Lecture05/#function-composition","text":"\u548chog\u91cc\u9762\u7684both\u7c7b\u4f3c\uff0c\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3001\u3001 \u53cd\u6b63\u5c31\u662f\u9ad8\u9636\u51fd\u6570\u5f2f\u5f2f\u7ed5\u7ed5\uff0c\uff0c","title":"Function Composition"},{"location":"CS61A/Lectures/Lecture05/#self-reference","text":"\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u81ea\u5df1\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u5957\u5a03\uff01 def print_all ( x ): print ( x ) return print_all print_all ( 1 )( 3 )( 5 ) #\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u51fd\u6570\uff1a print ( 1 ) print ( 3 ) print ( 5 ) '''\u8f93\u51fa\u4f1a\u662f: 1 3 5 '''","title":"Self-Reference"},{"location":"CS61A/Lectures/Lecture05/#function-currying","text":"\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u67ef\u91cc\u5316\uff08Currying\uff09\u662f\u628a\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u53d8\u6362\u6210\u63a5\u53d7\u4e00\u4e2a\u5355\u4e00\u53c2\u6570(\u6700\u521d\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570)\u7684\u51fd\u6570\uff0c\u5e76\u4e14\u8fd4\u56de\u63a5\u53d7\u4f59\u4e0b\u7684\u53c2\u6570\u4e14\u8fd4\u56de\u7ed3\u679c\u7684\u65b0\u51fd\u6570\u7684\u6280\u672f\u3002\u8fd9\u4e2a\u6280\u672f\u7531 Christopher Strachey \u4ee5\u903b\u8f91\u5b66\u5bb6 Haskell Curry \u547d\u540d\u7684\uff0c\u5c3d\u7ba1\u5b83\u662f Moses Schnfinkel \u548c Gottlob Frege \u53d1\u660e\u7684\u3002 -- \u67ef\u91cc\u5316_\u767e\u5ea6\u767e\u79d1 (baidu.com) \u5373\u662f\u5c06\u9700\u8981\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u8f6c\u6362\u6210\u9ad8\u9636\u51fd\u6570\uff0c\u7136\u540e()()\u8fd9\u6837\u8c03\u7528 \u4e5f\u5c31\u662f\u4e00\u6b21\u8f93\u4e00\u4e2a\u53c2\u6570\uff0c\u8f93\u51fa[[Higher-order Functions#^closure|\u95ed\u5305]]\u8fd9\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u3002","title":"Function Currying"},{"location":"CS61A/Lectures/Lecture06/","text":"[[Lectures]] Design \u00b6 2022-02-01 \u51fd\u6570\u540d \u00b6 \u547d\u540d\uff1a - \u6309\u7167\u7528\u9014\u547d\u540d - \u5199docstring - \u4e0d\u7528\u4e00\u4e2a\u5b57\u6bcd\uff0c\u800c\u662f\u5b8c\u6574\u5355\u8bcd ![[Pasted image 20220201202920.png]] Which Values Deserve a Name \u00b6 Repeated compound expressions Meaningful parts of complex expressions Tips \u00b6 \u540d\u5b57\u957f\u4e5f\u884c\uff0c\u53ea\u8981\u80fd\u6e05\u695a\u8868\u793a\u6e05\u542b\u4e49\uff0c\u6bd5\u7adf\u6709\u81ea\u52a8\u8865\u5168 \u5e38\u7528\u7684\u4e5f\u53ef\u4ee5\u77ed\u6bd4\u5982:\u6570\u5b66\u4e0a f(x) Errors and Tracebacks \u00b6 \u5c31\u662f\u4e00\u4e9b\u6700\u7b80\u5355\u7684Error\u5206\u6790\uff0c\u5199\u8fc7\u5f88\u591abug\u7684\u6211\u80af\u5b9a\u89c1\u591a\u8bc6\u5e7f \u256d(\u256f^\u2570)\u256e \u663e\u793a\u51fa\u9519\u7684\u884c\u5e76\u4e0d\u4e00\u5b9a\u662f\u771f\u7684\u5199\u9519\u7684\u884c\uff0c\u9519\u8bef\u53ef\u80fd\u5728\u5f88\u4e45\u4e4b\u524d\u53d1\u751f\u3002 Function Example: Sounds \u00b6 \u4e00\u4e2a\u66f4\u590d\u6742\u7684\u9ad8\u9636\u51fd\u6570\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u9ad8\u9636\u51fd\u6570\u3002","title":"Lecture06"},{"location":"CS61A/Lectures/Lecture06/#design","text":"2022-02-01","title":"Design"},{"location":"CS61A/Lectures/Lecture06/#_1","text":"\u547d\u540d\uff1a - \u6309\u7167\u7528\u9014\u547d\u540d - \u5199docstring - \u4e0d\u7528\u4e00\u4e2a\u5b57\u6bcd\uff0c\u800c\u662f\u5b8c\u6574\u5355\u8bcd ![[Pasted image 20220201202920.png]]","title":"\u51fd\u6570\u540d"},{"location":"CS61A/Lectures/Lecture06/#which-values-deserve-a-name","text":"Repeated compound expressions Meaningful parts of complex expressions","title":"Which Values Deserve a Name"},{"location":"CS61A/Lectures/Lecture06/#tips","text":"\u540d\u5b57\u957f\u4e5f\u884c\uff0c\u53ea\u8981\u80fd\u6e05\u695a\u8868\u793a\u6e05\u542b\u4e49\uff0c\u6bd5\u7adf\u6709\u81ea\u52a8\u8865\u5168 \u5e38\u7528\u7684\u4e5f\u53ef\u4ee5\u77ed\u6bd4\u5982:\u6570\u5b66\u4e0a f(x)","title":"Tips"},{"location":"CS61A/Lectures/Lecture06/#errors-and-tracebacks","text":"\u5c31\u662f\u4e00\u4e9b\u6700\u7b80\u5355\u7684Error\u5206\u6790\uff0c\u5199\u8fc7\u5f88\u591abug\u7684\u6211\u80af\u5b9a\u89c1\u591a\u8bc6\u5e7f \u256d(\u256f^\u2570)\u256e \u663e\u793a\u51fa\u9519\u7684\u884c\u5e76\u4e0d\u4e00\u5b9a\u662f\u771f\u7684\u5199\u9519\u7684\u884c\uff0c\u9519\u8bef\u53ef\u80fd\u5728\u5f88\u4e45\u4e4b\u524d\u53d1\u751f\u3002","title":"Errors and Tracebacks"},{"location":"CS61A/Lectures/Lecture06/#function-example-sounds","text":"\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u9ad8\u9636\u51fd\u6570\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u9ad8\u9636\u51fd\u6570\u3002","title":"Function Example: Sounds"},{"location":"CS61A/Lectures/Lecture07/","text":"[[Lectures]] Function Expamples \u00b6 [[2022-02-01]] Implementing a Function \u00b6 \u5199\u4e00\u4e2a\u53bb\u6570\u5b57\u7684\u51fd\u6570\uff0c\u4f20\u5165n\u548cdigit\uff0c\u53bb\u9664\u6389n\u4e2d\u6240\u6709\u7684digit\uff1a def remove ( n , digit ): kept , digits = 0 , 0 while n > 0 : n , last = n // 10 , n % 10 if last != digit : kept = kept / 10 + last digits += 1 return round ( kept * 10 ** ( digits - 1 )) print ( remove ( 231 , 3 )) \u4ece\u53f3\u5411\u5de6\u53d6\u6570\uff0c\u6240\u4ee5\u4ece\u53f3\u5230\u5de6\u6784\u9020 \u65b0\u6570\u8981\u5728\u65e7\u6570\u5de6\u8fb9\uff0c\u53ef\u4ee5 kept/10 \u3002 \u6216\u8005 kept = kept + last * 10 ** digits return kept // 10 Decorators \u00b6","title":"Lecture07"},{"location":"CS61A/Lectures/Lecture07/#function-expamples","text":"[[2022-02-01]]","title":"Function Expamples"},{"location":"CS61A/Lectures/Lecture07/#implementing-a-function","text":"\u5199\u4e00\u4e2a\u53bb\u6570\u5b57\u7684\u51fd\u6570\uff0c\u4f20\u5165n\u548cdigit\uff0c\u53bb\u9664\u6389n\u4e2d\u6240\u6709\u7684digit\uff1a def remove ( n , digit ): kept , digits = 0 , 0 while n > 0 : n , last = n // 10 , n % 10 if last != digit : kept = kept / 10 + last digits += 1 return round ( kept * 10 ** ( digits - 1 )) print ( remove ( 231 , 3 )) \u4ece\u53f3\u5411\u5de6\u53d6\u6570\uff0c\u6240\u4ee5\u4ece\u53f3\u5230\u5de6\u6784\u9020 \u65b0\u6570\u8981\u5728\u65e7\u6570\u5de6\u8fb9\uff0c\u53ef\u4ee5 kept/10 \u3002 \u6216\u8005 kept = kept + last * 10 ** digits return kept // 10","title":"Implementing a Function"},{"location":"CS61A/Lectures/Lecture07/#decorators","text":"","title":"Decorators"},{"location":"CS61A/Lectures/Lecture08/","text":"[[Lectures]] Recursion \u00b6 [[2022-02-08]] Recursive Functions \u00b6 ![[Recursive Functions#\u7279\u6027]] ## Recursion in Environment Diagrams \u8bb2\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u5728 Tutor \u4e0a\u9762\u6f14\u793a\u5176Diagram\u3002 ![[Pasted image 20220208185216.png]] ![[Pasted image 20220208190926.png]] ## Verify Recursive Functions \u8bc1\u660e\u9012\u5f52\u5f0f\u7684\u6b63\u786e\u6027\u4f7f\u7528\u5230\u7684\u662f\uff1a\u6570\u5b66\u5f52\u7eb3\u6cd5\u3002 1. \u8bc1\u660e\u5143\u4e8b\u4ef6\u4e0b\u6b63\u786e 2. \u5047\u8bben-1\u65f6\u6b63\u786e\uff0c\u8bc1\u660en\u65f6\u4e5f\u6b63\u786e Mutual Recursion \u00b6 The Luhn Algorithm \u00b6 ![[The Luhn Algorithm#Wiki]] [[Recursion]] and [[Iteration]] \u00b6 ![[\u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u8f6c\u6362]]","title":"Lecture08"},{"location":"CS61A/Lectures/Lecture08/#recursion","text":"[[2022-02-08]]","title":"Recursion"},{"location":"CS61A/Lectures/Lecture08/#recursive-functions","text":"![[Recursive Functions#\u7279\u6027]] ## Recursion in Environment Diagrams \u8bb2\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u5728 Tutor \u4e0a\u9762\u6f14\u793a\u5176Diagram\u3002 ![[Pasted image 20220208185216.png]] ![[Pasted image 20220208190926.png]] ## Verify Recursive Functions \u8bc1\u660e\u9012\u5f52\u5f0f\u7684\u6b63\u786e\u6027\u4f7f\u7528\u5230\u7684\u662f\uff1a\u6570\u5b66\u5f52\u7eb3\u6cd5\u3002 1. \u8bc1\u660e\u5143\u4e8b\u4ef6\u4e0b\u6b63\u786e 2. \u5047\u8bben-1\u65f6\u6b63\u786e\uff0c\u8bc1\u660en\u65f6\u4e5f\u6b63\u786e","title":"Recursive Functions"},{"location":"CS61A/Lectures/Lecture08/#mutual-recursion","text":"","title":"Mutual Recursion"},{"location":"CS61A/Lectures/Lecture08/#the-luhn-algorithm","text":"![[The Luhn Algorithm#Wiki]]","title":"The Luhn Algorithm"},{"location":"CS61A/Lectures/Lecture08/#recursion-and-iteration","text":"![[\u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u8f6c\u6362]]","title":"[[Recursion]] and [[Iteration]]"},{"location":"CS61A/Lectures/Lecture09/","text":"[[Lectures]] Tree recursion \u00b6 [[2022-02-08]] Order of Recursive Calls \u00b6 \u7528\u5982\u4e0b\u7684\u4f8b\u5b50\u8bb2\u89e3\u4e86\u9012\u5f52\u8c03\u7528\u7684\u987a\u5e8f\uff0cez \u5176Frame\u50cf\u94fe\u6761\u4e00\u6837\uff0c\u540e\u8c03\u7528\u7684\u94fe\u5728\u5148\u5957\u7528\u7684\u540e\u9762\u3002 \u56e0\u4e3a\u5728line 3\u548cline 5\u91cc print \u8c03\u7528\u4e86\u4e24\u6b21 \u53ef\u4ee5\u7b80\u5316\u4e3a\u5982\u4e0b\uff1a def cascade ( n ): print ( n ) if n >= 10 : cascade ( n // 10 ) print ( n ) \u8fd9\u6837\u66f4\u52a0\u7b80\u6d01\uff0c\u4f46\u662f\u4e0a\u9762\u7684\u7ed3\u6784\u66f4\u52a0\u5178\u578b\uff1a\u6709\u5bf9base case \u7684\u5904\u7406 Example: Inverse Cascade \u00b6 ![[Pasted image 20220209184644.png]] grow = lambda n : f_then_g ( grow , print , n // 10 ) shrink = lambda n : f_then_g ( print , shrink , n // 10 ) \u4e24\u4e2a\u7684\u533a\u522b\u662f\u5148\u8f93\u51fa\u8fd8\u662f\u5148\u9012\u5f52\u8c03\u7528\u3002 Tree [[Recursion]] \u00b6 \u6bcf\u6b21\u7684\u9012\u5f52\u8c03\u7528\u5927\u4e8e1\u4e2a\u7684\u9012\u5f52 \u5e38\u7528\u4e8e\u53ef\u4ee5\u5c06\u5927\u95ee\u9898\u4e00\u5206\u4e3a\u591a\u7684\u9012\u5f52\u8c03\u7528\u3002 \u7406\u89e3\u7b97\u5bfc\u91cc\u9762\u7684Recursion Tree\u548c\u8ba1\u7b97\u9012\u5f52\u5f0f\u3002 \u9012\u5f52\u6811\u7684\u8c03\u7528\u987a\u5e8f\u591a\u4e3a\u5148\u5e8f\u904d\u5386\u3002 ![[Pasted image 20220209190330.png]] Trace \u00b6 \u5728ucb\u6587\u4ef6\u91cc\u63d0\u4f9b\u7684\u51fd\u6570trace\uff0c\u53ef\u4ee5\u8ddf\u8e2a\u5728\u9012\u5f52\u8c03\u7528\u65f6\u7684\u51fd\u6570\u8c03\u7528\u987a\u5e8f\uff08IDE\u91cc\u6b65\u8fdb\u4e5f\u884c\uff09 \u7528\u6cd5\uff1a from ucb import trace @trace def function (): ... ... ![[Pasted image 20220209191026.png]] Repetition \u00b6 \u6709\u65f6\u5019\u4f1a\u6709\u8bb8\u591a\u91cd\u590d\u8c03\u7528\uff0c\u5728\u4e4b\u540e\u7684\u5b66\u4e60\u4e2d\u4f1a\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u8bb0\u4f4f\u4e4b\u524d\u7684\u7ed3\u679c\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\u3002 Example: Counting Partitions \u00b6 ![[Pasted image 20220209191424.png]] ![[Pasted image 20220209192104.png]] ![[Pasted image 20220209192122.png]]","title":"Lecture09"},{"location":"CS61A/Lectures/Lecture09/#tree-recursion","text":"[[2022-02-08]]","title":"Tree recursion"},{"location":"CS61A/Lectures/Lecture09/#order-of-recursive-calls","text":"\u7528\u5982\u4e0b\u7684\u4f8b\u5b50\u8bb2\u89e3\u4e86\u9012\u5f52\u8c03\u7528\u7684\u987a\u5e8f\uff0cez \u5176Frame\u50cf\u94fe\u6761\u4e00\u6837\uff0c\u540e\u8c03\u7528\u7684\u94fe\u5728\u5148\u5957\u7528\u7684\u540e\u9762\u3002 \u56e0\u4e3a\u5728line 3\u548cline 5\u91cc print \u8c03\u7528\u4e86\u4e24\u6b21 \u53ef\u4ee5\u7b80\u5316\u4e3a\u5982\u4e0b\uff1a def cascade ( n ): print ( n ) if n >= 10 : cascade ( n // 10 ) print ( n ) \u8fd9\u6837\u66f4\u52a0\u7b80\u6d01\uff0c\u4f46\u662f\u4e0a\u9762\u7684\u7ed3\u6784\u66f4\u52a0\u5178\u578b\uff1a\u6709\u5bf9base case \u7684\u5904\u7406","title":"Order of Recursive Calls"},{"location":"CS61A/Lectures/Lecture09/#example-inverse-cascade","text":"![[Pasted image 20220209184644.png]] grow = lambda n : f_then_g ( grow , print , n // 10 ) shrink = lambda n : f_then_g ( print , shrink , n // 10 ) \u4e24\u4e2a\u7684\u533a\u522b\u662f\u5148\u8f93\u51fa\u8fd8\u662f\u5148\u9012\u5f52\u8c03\u7528\u3002","title":"Example: Inverse Cascade"},{"location":"CS61A/Lectures/Lecture09/#tree-recursion_1","text":"\u6bcf\u6b21\u7684\u9012\u5f52\u8c03\u7528\u5927\u4e8e1\u4e2a\u7684\u9012\u5f52 \u5e38\u7528\u4e8e\u53ef\u4ee5\u5c06\u5927\u95ee\u9898\u4e00\u5206\u4e3a\u591a\u7684\u9012\u5f52\u8c03\u7528\u3002 \u7406\u89e3\u7b97\u5bfc\u91cc\u9762\u7684Recursion Tree\u548c\u8ba1\u7b97\u9012\u5f52\u5f0f\u3002 \u9012\u5f52\u6811\u7684\u8c03\u7528\u987a\u5e8f\u591a\u4e3a\u5148\u5e8f\u904d\u5386\u3002 ![[Pasted image 20220209190330.png]]","title":"Tree [[Recursion]]"},{"location":"CS61A/Lectures/Lecture09/#trace","text":"\u5728ucb\u6587\u4ef6\u91cc\u63d0\u4f9b\u7684\u51fd\u6570trace\uff0c\u53ef\u4ee5\u8ddf\u8e2a\u5728\u9012\u5f52\u8c03\u7528\u65f6\u7684\u51fd\u6570\u8c03\u7528\u987a\u5e8f\uff08IDE\u91cc\u6b65\u8fdb\u4e5f\u884c\uff09 \u7528\u6cd5\uff1a from ucb import trace @trace def function (): ... ... ![[Pasted image 20220209191026.png]]","title":"Trace"},{"location":"CS61A/Lectures/Lecture09/#repetition","text":"\u6709\u65f6\u5019\u4f1a\u6709\u8bb8\u591a\u91cd\u590d\u8c03\u7528\uff0c\u5728\u4e4b\u540e\u7684\u5b66\u4e60\u4e2d\u4f1a\u5b66\u4e60\u5982\u4f55\u901a\u8fc7\u8bb0\u4f4f\u4e4b\u524d\u7684\u7ed3\u679c\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\u3002","title":"Repetition"},{"location":"CS61A/Lectures/Lecture09/#example-counting-partitions","text":"![[Pasted image 20220209191424.png]] ![[Pasted image 20220209192104.png]] ![[Pasted image 20220209192122.png]]","title":"Example: Counting Partitions"},{"location":"CS61A/Lectures/Lecture10/","text":"Containers \u00b6 [[2022-02-10]] [[Lectures]] [[Python]] \u8fdb\u5165\u4e86\u4e8c\u4f4d\u6570\u7684\u8bfe\u6570 (#\uffe3\u25bd\uffe3#) Lists \u00b6 \u7b2c\u4e00\u6b21\u7cfb\u7edf\u7684\u5b66list (\u2267\u25bd\u2266)/ list[i] \u7b49\u4ef7\u4e8e getitem(list,i) \u5217\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868 :: Nested lists >>> pairs = [[ 10 , 20 ],[ 30 , 40 ]] >>> pair [ 1 ] [ 30 , 40 ] >>> pair [ 1 ][ 0 ] >>> 30 Containers \u00b6 >>> digits = [ 1 , 8 , 2 , 8 ] >>> 1 in digits True >>> '1' in digits False #since '1' != 1 >>> [ 1 , 2 ] in [ 3 ,[ 1 , 2 ], 4 ] True >>> [ 1 , 2 ] in [ 3 ,[[ 1 , 2 ]], 4 ] False \u4ee5\u4e0a\uff0cin\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u67d0\u4e2a\u6570\u636e\u662f\u5426\u5728\u5217\u8868\u4e2d\uff0c\u4f46\u662f\u4ec5\u4ec5\u53ea\u662f\u9010\u5143\u7d20\u7684\u68c0\u67e5\uff0c\u9047\u5230\u7b2c\u4e00\u4e2a\u76f8\u7b49\u5219\u8fd4\u56de True \u3002 [[For]] Statements \u00b6 ![[Pasted image 20220210153749.png]] Sequnce Unpacking \u00b6 >>> pairs = [[ 1 , 2 ],[ 2 , 2 ],[ 3 , 2 ],[ 4 , 4 ]] >>> same_count = 0 >>> for x , y in pairs : ... if x == y : ... same_count = same_count + 1 >>> same_count 2 x,y\u88ab\u5206\u522b\u4ee5pair\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8d4b\u503c\uff0c\u5373\u53d8\u7684\u662fpair\u7684\u89d2\u6807\u3002 \u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a x , y = pair [ 0 ] x , y = [ 1 , 2 ] x , y = 1 , 2 Range \u00b6 >>> range ( - 2 , 2 ) range ( - 2 , 2 ) >>> list ( range ( - 2 , 2 )) [ - 2 , - 1 , 0 , 1 ] \u5373\u662f\u4e00\u4e2a\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\uff0c\u53d6\u5305\u56f4\u5728\u5176\u4e2d\u7684\u6570\u4f5c\u4e3a\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u7528 list() \u53ef\u4ee5\u8f6c\u6362\u4e3a\u5217\u8868 len(range(-2,2))\u7b49\u4e8e2-(-2)=4 \u5373range \u7684\u5143\u7d20\u4e2a\u6570\u7b49\u4e8e\u53f3\u503c\u51cf\u5de6\u503c\\ range(n)--->range(0,n)--->[0,1,2,...,n-1] List Comprehensions \u00b6 >>> odds = [ 1 , 3 , 5 , 7 , 9 ] >>> [ x + 1 for x in odds ] [ 2 \uff0c 4 \uff0c 6 \uff0c 8 \uff0c 10 ] >>> [ x for x in odds if 25 % x == 0 ] [ 1 , 5 ] \u770b\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u6211\u5bf9\u5b57\u7b26\u4e32\u7684\u4e86\u89e3\u8f83\u5c11\uff08\u4e0d\u50cfJohn DeNero\uff09\u3002 String \u00b6 String\u4e5f\u662f\u4e00\u79cdlist\u4e0d\u8fc7\u548c\u4e00\u822c\u7684\u5e8f\u5217\u7565\u6709\u4e0d\u540c\u3002 >>> city = 'Berkeley' >>> len ( city ) 8 >>> city [ 3 ] 'k' >>> 'here' in \"Where's Waldo?\" True \u5728list\u4e2d\u53ea\u80fd\u4e00\u4e2a\u4e2a\u5339\u914d\uff0c\u4f46\u662fstring\u53ef\u4ee5\u8fde\u7740\u5339\u914d\u3002","title":"Containers"},{"location":"CS61A/Lectures/Lecture10/#containers","text":"[[2022-02-10]] [[Lectures]] [[Python]] \u8fdb\u5165\u4e86\u4e8c\u4f4d\u6570\u7684\u8bfe\u6570 (#\uffe3\u25bd\uffe3#)","title":"Containers"},{"location":"CS61A/Lectures/Lecture10/#lists","text":"\u7b2c\u4e00\u6b21\u7cfb\u7edf\u7684\u5b66list (\u2267\u25bd\u2266)/ list[i] \u7b49\u4ef7\u4e8e getitem(list,i) \u5217\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868 :: Nested lists >>> pairs = [[ 10 , 20 ],[ 30 , 40 ]] >>> pair [ 1 ] [ 30 , 40 ] >>> pair [ 1 ][ 0 ] >>> 30","title":"Lists"},{"location":"CS61A/Lectures/Lecture10/#containers_1","text":">>> digits = [ 1 , 8 , 2 , 8 ] >>> 1 in digits True >>> '1' in digits False #since '1' != 1 >>> [ 1 , 2 ] in [ 3 ,[ 1 , 2 ], 4 ] True >>> [ 1 , 2 ] in [ 3 ,[[ 1 , 2 ]], 4 ] False \u4ee5\u4e0a\uff0cin\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5\u67d0\u4e2a\u6570\u636e\u662f\u5426\u5728\u5217\u8868\u4e2d\uff0c\u4f46\u662f\u4ec5\u4ec5\u53ea\u662f\u9010\u5143\u7d20\u7684\u68c0\u67e5\uff0c\u9047\u5230\u7b2c\u4e00\u4e2a\u76f8\u7b49\u5219\u8fd4\u56de True \u3002","title":"Containers"},{"location":"CS61A/Lectures/Lecture10/#for-statements","text":"![[Pasted image 20220210153749.png]]","title":"[[For]] Statements"},{"location":"CS61A/Lectures/Lecture10/#sequnce-unpacking","text":">>> pairs = [[ 1 , 2 ],[ 2 , 2 ],[ 3 , 2 ],[ 4 , 4 ]] >>> same_count = 0 >>> for x , y in pairs : ... if x == y : ... same_count = same_count + 1 >>> same_count 2 x,y\u88ab\u5206\u522b\u4ee5pair\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8d4b\u503c\uff0c\u5373\u53d8\u7684\u662fpair\u7684\u89d2\u6807\u3002 \u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a x , y = pair [ 0 ] x , y = [ 1 , 2 ] x , y = 1 , 2","title":"Sequnce Unpacking"},{"location":"CS61A/Lectures/Lecture10/#range","text":">>> range ( - 2 , 2 ) range ( - 2 , 2 ) >>> list ( range ( - 2 , 2 )) [ - 2 , - 1 , 0 , 1 ] \u5373\u662f\u4e00\u4e2a\u5de6\u95ed\u53f3\u5f00\u7684\u533a\u95f4\uff0c\u53d6\u5305\u56f4\u5728\u5176\u4e2d\u7684\u6570\u4f5c\u4e3a\u5143\u7d20\u7684\u5e8f\u5217\uff0c\u7528 list() \u53ef\u4ee5\u8f6c\u6362\u4e3a\u5217\u8868 len(range(-2,2))\u7b49\u4e8e2-(-2)=4 \u5373range \u7684\u5143\u7d20\u4e2a\u6570\u7b49\u4e8e\u53f3\u503c\u51cf\u5de6\u503c\\ range(n)--->range(0,n)--->[0,1,2,...,n-1]","title":"Range"},{"location":"CS61A/Lectures/Lecture10/#list-comprehensions","text":">>> odds = [ 1 , 3 , 5 , 7 , 9 ] >>> [ x + 1 for x in odds ] [ 2 \uff0c 4 \uff0c 6 \uff0c 8 \uff0c 10 ] >>> [ x for x in odds if 25 % x == 0 ] [ 1 , 5 ] \u770b\u8d77\u6765\u662f\u4e00\u4e2a\u5f88\u6709\u7528\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u6211\u5bf9\u5b57\u7b26\u4e32\u7684\u4e86\u89e3\u8f83\u5c11\uff08\u4e0d\u50cfJohn DeNero\uff09\u3002","title":"List Comprehensions"},{"location":"CS61A/Lectures/Lecture10/#string","text":"String\u4e5f\u662f\u4e00\u79cdlist\u4e0d\u8fc7\u548c\u4e00\u822c\u7684\u5e8f\u5217\u7565\u6709\u4e0d\u540c\u3002 >>> city = 'Berkeley' >>> len ( city ) 8 >>> city [ 3 ] 'k' >>> 'here' in \"Where's Waldo?\" True \u5728list\u4e2d\u53ea\u80fd\u4e00\u4e2a\u4e2a\u5339\u914d\uff0c\u4f46\u662fstring\u53ef\u4ee5\u8fde\u7740\u5339\u914d\u3002","title":"String"},{"location":"CS61A/Lectures/Lecture11/","text":"Lecture11 \u00b6 [[2022-02-12]] [[Lectures]] Box-and-Pointer \u00b6 \u4ecb\u7ecd\u4e86\u4e00\u79cd\u7528\u77e9\u5f62\u8868\u793a\u4e00\u4e2a\u5217\u8868\u7684\u5143\u7d20\uff0c\u6328\u7740\u7684\u77e9\u5f62\u8fde\u8d77\u6765\u8868\u793a\u4e00\u4e2a\u5217\u8868\uff0c\u5de6\u4e0a\u89d2\u662f\u5b83\u7684\u89d2\u6807\u3002 ![[Pasted image 20220212182704.png]] [[Slicing]] \u00b6 >>> odds = [ 1 , 3 , 5 , 7 , 9 ] >>> odds [ 1 : 3 ] [ 5 , 7 ] \u5207\u7247\uff0c\u8fd9\u91cc\u7684\u4f8b\u5b50\u90fd\u86ee\u597d\u7406\u89e3\u7684\u3002 Processing Container Values \u00b6 \u8bb2\u4e86\u51e0\u4e2a\u7528\u4e8e\u5904\u7406\u5e8f\u5217\u7684\u5185\u5efa\u51fd\u6570 sum \u00b6 sum(iterable[, start]) -> value Return the sum of an [[Iterable]] of numbers (NOT strings) plus the value of parameter 'start' (which defaults to 0). when the iterable is empty, return start. \u5373\u662f\uff1a sum \u53ef\u4ee5\u63a5\u6536\u4e00\u4e9b\u53ef\u8fed\u4ee3\u7684\u6570\u636e\uff0c\u7136\u540e\u4ece start \u5f00\u59cb\u52a0\u3002 ![[Pasted image 20220212183719.png]] max \u00b6 max( iterable[ , key=func] ) -> valuemax(a, b, c, ...[, key=func] ) -> value With a single iterable argument,return its largest item. With two or more arguments,return the largest argument. \u5373\u662f max \u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u4f20\u5165\u6570\u636e\uff0c\u4e00\u4e2a\u662f key function \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fd4\u56de\u4f20\u5165\u6570\u636e\u4e2d\u6700\u5927\u7684\uff0c key=<func> \u7684\u60c5\u51b5\u4e0b\u8fd4\u56de\u5c06\u4f20\u5165\u6570\u636e\u5e26\u5165\u5230 <func> \u65f6\u6700\u5927\u7684\u7ed3\u679c\u3002 \u6216\u8005\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bb0\uff1a max \u8fd4\u56de\u67d0\u4f20\u5165\u51fd\u6570\u5728\u4f20\u5165\u6570\u636e\u91cc\u7684\u6700\u5927\u503c\uff0c\u5373\u4f20\u5165\u6570\u636e\u4f5c\u4e3a\u5b9a\u4e49\u57df\u4e0b\u7684\u503c\u57df\u7684\u6700\u5927\u503c\u3002 all \u00b6 all(iterable) -> bool Return True if bool(x) is True for all values x in the iterable.If the iterable is empty, return True. \u5373\uff1a all true -> true","title":"Lecture11"},{"location":"CS61A/Lectures/Lecture11/#lecture11","text":"[[2022-02-12]] [[Lectures]]","title":"Lecture11"},{"location":"CS61A/Lectures/Lecture11/#box-and-pointer","text":"\u4ecb\u7ecd\u4e86\u4e00\u79cd\u7528\u77e9\u5f62\u8868\u793a\u4e00\u4e2a\u5217\u8868\u7684\u5143\u7d20\uff0c\u6328\u7740\u7684\u77e9\u5f62\u8fde\u8d77\u6765\u8868\u793a\u4e00\u4e2a\u5217\u8868\uff0c\u5de6\u4e0a\u89d2\u662f\u5b83\u7684\u89d2\u6807\u3002 ![[Pasted image 20220212182704.png]]","title":"Box-and-Pointer"},{"location":"CS61A/Lectures/Lecture11/#slicing","text":">>> odds = [ 1 , 3 , 5 , 7 , 9 ] >>> odds [ 1 : 3 ] [ 5 , 7 ] \u5207\u7247\uff0c\u8fd9\u91cc\u7684\u4f8b\u5b50\u90fd\u86ee\u597d\u7406\u89e3\u7684\u3002","title":"[[Slicing]]"},{"location":"CS61A/Lectures/Lecture11/#processing-container-values","text":"\u8bb2\u4e86\u51e0\u4e2a\u7528\u4e8e\u5904\u7406\u5e8f\u5217\u7684\u5185\u5efa\u51fd\u6570","title":"Processing Container Values"},{"location":"CS61A/Lectures/Lecture11/#sum","text":"sum(iterable[, start]) -> value Return the sum of an [[Iterable]] of numbers (NOT strings) plus the value of parameter 'start' (which defaults to 0). when the iterable is empty, return start. \u5373\u662f\uff1a sum \u53ef\u4ee5\u63a5\u6536\u4e00\u4e9b\u53ef\u8fed\u4ee3\u7684\u6570\u636e\uff0c\u7136\u540e\u4ece start \u5f00\u59cb\u52a0\u3002 ![[Pasted image 20220212183719.png]]","title":"sum"},{"location":"CS61A/Lectures/Lecture11/#max","text":"max( iterable[ , key=func] ) -> valuemax(a, b, c, ...[, key=func] ) -> value With a single iterable argument,return its largest item. With two or more arguments,return the largest argument. \u5373\u662f max \u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u4f20\u5165\u6570\u636e\uff0c\u4e00\u4e2a\u662f key function \uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8fd4\u56de\u4f20\u5165\u6570\u636e\u4e2d\u6700\u5927\u7684\uff0c key=<func> \u7684\u60c5\u51b5\u4e0b\u8fd4\u56de\u5c06\u4f20\u5165\u6570\u636e\u5e26\u5165\u5230 <func> \u65f6\u6700\u5927\u7684\u7ed3\u679c\u3002 \u6216\u8005\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bb0\uff1a max \u8fd4\u56de\u67d0\u4f20\u5165\u51fd\u6570\u5728\u4f20\u5165\u6570\u636e\u91cc\u7684\u6700\u5927\u503c\uff0c\u5373\u4f20\u5165\u6570\u636e\u4f5c\u4e3a\u5b9a\u4e49\u57df\u4e0b\u7684\u503c\u57df\u7684\u6700\u5927\u503c\u3002","title":"max"},{"location":"CS61A/Lectures/Lecture11/#all","text":"all(iterable) -> bool Return True if bool(x) is True for all values x in the iterable.If the iterable is empty, return True. \u5373\uff1a all true -> true","title":"all"},{"location":"CS61A/Lectures/Lecture12/","text":"Data Abstraction \u00b6 [[2022-02-16]] [[Lectures]] ## P1: Data Abstraction \u6307\u4e00\u4e2a\u590d\u5408\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5c06\u51e0\u4e2a\u4e0d\u540c\u7684\u90e8\u5206\u7ec4\u5408\u8d77\u6765\u3002 \u6bd4\u5982\u65e5\u671f\u4e4b\u4e8e\u5e74\u6708\u65e5 ![[Pasted image 20220216121519.png]] Data abstraction: A methodology by which functions enforce an abstraction barrier between representation and use \u51fd\u6570\u5728\u8868\u793a\u548c\u4f7f\u7528\u4e4b\u95f4\u8bbe\u7f6e\u62bd\u8c61\u5c4f\u969c\u7684\u4e00\u79cd\u65b9\u6cd5 \u76ee\u524d\u5bf9\u6211\u800c\u8a00\u8fd8\u662f\u4e00\u4e2a\u6bd4\u8f83\u6666\u6da9\u7684\u6982\u5ff5\uff0c\u7528\u4e00\u4e2a\u4f8b\u5b50\u5c55\u793a\uff1a \u8868\u793a\u6709\u7406\u6570 \u00b6 \u4efb\u4f55\u6709\u7406\u6570\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u5206\u6570\uff0c\u5373\u4e24\u4e2a\u6574\u6570\u76f8\u9664\uff1a $$ \\frac{\\text{numerator}}{\\text{denominator}} $$ \u8981\u5c06\u5b83\u5b8c\u5168\u7684\u8868\u793a\u4e3a\u5c0f\u6570\uff08\u6d6e\u70b9\u6570\uff09\u5fc5\u5b9a\u4f1a\u635f\u5931\u7cbe\u5ea6\uff0c\u6bd4\u59821/3\u8f6c\u5316\u4e3a0.33333\uff0c\u53ea\u8981\u8868\u793a\u7684\u5faa\u73af\u5728\u67d0\u4e00\u4e2a\u5730\u65b9\u65ad\u6389\u4e86\uff0c\u90a3\u5c31\u4f1a\u9020\u6210\u7cbe\u5ea6\u635f\u5931\uff0c\u4ece\u800c\u4e24\u8005\u4e4b\u95f4\u4e0d\u518d\u53ef\u4ee5\u753b\u7b49\u53f7\u3002 \u6240\u4ee5\u7cbe\u786e\u7684\u8868\u793a\u6709\u7406\u6570\u53ea\u80fd\u4f7f\u7528\u5206\u6570\u3002 \u5b9a\u4e49\u51e0\u4e2a\u51fd\u6570\uff1a rational ( n , d ) \u8fd4\u56de\u6709\u7406\u6570x numer ( x ) \u8fd4\u56dex\u7684\u5206\u5b50 denom ( x ) \u8fd4\u56dex\u7684\u5206\u6bcd def mul_rational ( x , y ): return rational ( numer ( x ) * numer ( y ), denom ( x ) * denom ( y )) def add_rational ( x , y ): return rational ( nx * dy + ny * dx , dx * dy ) def equal_rational ( x , y ): return numer ( x ) * demon ( y ) == numer ( y ) * denom ( x ) \u5177\u4f53\u7684\u4f7f\u7528\u5728\u4e0b\u4e00\u8282 Representing Rational Numbers \u00b6 Pair \u00b6 \u53ef\u4ee5\u7528\u81ea\u5e26\u7684list\u6765\u8868\u793a\u4e00\u5bf9\u6570\uff1a list = [1,2] \u8bbf\u95ee\u67d0\u4e00\u4e2a\u503c\u7684\u65f6\u5019\u53ef\u4ee5\u7528\uff1a list[0] \u636e\u6b64\u5c31\u53ef\u4ee5\u5b8c\u5584\u4e4b\u524d\u6ca1\u6709\u5b8c\u6574\u5b9a\u4e49\u7684\u7528\u4e8e\u8868\u793a\u6709\u7406\u6570\u7684\u51fd\u6570\u5566\uff1a def rational ( n , d ): '''\u8fd4\u56de\u6709\u7406\u6570x''' return [ n , d ] def numer ( x ): return x [ 0 ] def denom ( x ): return x [ 1 ] \u6211\u4eec\u5e0c\u671b\u6709\u7406\u6570\u7684\u4e0a\u4e0b\u662f\u4e00\u4e2a\u6700\u7b80\u7684\u5206\u6570\uff1a \u5f15\u5165\u4e00\u4e2a\u81ea\u5e26\u51fd\u6570gcd(n,d)\uff1a\u8fd4\u56de\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570 \u73b0\u5728\u6539\u8fdb\u4e00\u4e0b\u521a\u521a\u7684rational\u51fd\u6570\uff1a from fractions import gcd def rational ( n , d ): g = gcd ( n , d ) return [ n // g , d // g ] Abstraction Barrier \u00b6 ![[Pasted image 20220216214803.png]] \u4ece\u4e0a\u5230\u4e0b\uff0c\u5176\u5b9e\u73b0(implementation)\u9010\u6e10\u4ece\u9ad8\u7ea7\u5230\u57fa\u672c\u3002 \u60f3\u8fd0\u7528\u67d0\u5c42\u7684\u529f\u80fd\u53ea\u9700\u8981\u4f7f\u7528\u8be5\u5c42\u7684\u51fd\u6570\uff0c\u4e0d\u53ef\u8de8\u754c\uff0c\u6216\u8005\u8bf4 \u4e0d\u7528\u5173\u5fc3\u66f4\u5e95\u5c42\u7684\u5b9e\u73b0 \u3002 \u6bd4\u5982\u8bf4\u505a\u505a\u67d0\u51e0\u4e2a\u6709\u7406\u6570\u4e4b\u95f4\u7684\u8fd0\u7b97\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u7684\u6709\u7406\u6570\u662f\u600e\u6837\u5b9e\u73b0\u7684\uff0c\u662f\u4e0d\u662f\u7528\u4e24\u4e2a\u6574\u6570\u6765\u8868\u793a\u5206\u6570\u5e76\u4e0d\u91cd\u8981\uff0c\u66f4\u4e0d\u9700\u8981\u77e5\u9053\u4ed6\u4eec\u662f\u4e0d\u662f\u4f9d\u8d56list\u5b9e\u73b0\u7684\u3002 \u4f7f\u7528\u67d0\u79cd\u6570\u636e\u7ed3\u6784\u7684\u65f6\u5019\u4e0d\u9700\u8981\u77e5\u9053\u5176\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u66f4\u5173\u6ce8\u662f\u5982\u4f55\u8fd0\u7528\u7684\u3002 \u7c7b\u4f3c\u4e8e [[Dijkstra]] \u8bf4\u7684\uff1a![[\u6700\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u2026\u2026# e70bb3]]![[\u6700\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u2026\u2026# 798235]] Data Representation \u00b6 Data Representations - YouTube \u5982\u679c\u4e25\u683c\u7684\u9075\u7167\u5982\u4e0a\u8bb2\u8ff0\u7684\u89c4\u5219\uff0c\u6bcf\u4e00\u5c42\u7684\u5b9e\u73b0\u4e0d\u8d8a\u754c\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a \u5982\u679c\u8981\u4fee\u6539\u67d0\u4e00\u5c42\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982\u627e\u5230\u4e86\u66f4\u4f18\u5f02\u7684\u7b97\u6cd5\uff0c\u66f4\u9002\u5408\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6b64\u65f6\u65e0\u9700\u66f4\u6539\u5176\u4ed6\u5c42\uff0c\u53ea\u9700\u8981\u4fee\u6539\u8fd9\u4e00\u5c42\u7684\u5b9e\u73b0\u5c31\u53ef\u4ee5\u3002 \u592a\u5999\u4e86\uff01 \u5177\u4f53\u4f8b\u5b50\u770b\u89c6\u9891\u3002 Dictionaries \u00b6 \u65b0\u6570\u636e\u7ed3\u6784\uff1a\u5b57\u5178[[Dictionary]] Python \u5b57\u5178 (w3school.com.cn) ![[Pasted image 20220216220226.png]] \u5c31\u50cf\u73b0\u5b9e\u4e2d\u7684\u5b57\u5178\uff0c\u6709\uff08\u7d22\u5f15\uff09\u5173\u952e\u8bcd\u6709\u6761\u76ee\u3002 \u4e00\u4e2a\u5173\u952e\u8bcd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee\u3002 \u4e0d\u8fc7Python\u91cc\u7684\u5b57\u5178\u6709\u522b\u7684\u89c4\u77e9\uff1a - key\u4e0d\u80fd\u662f\u5217\u8868\u6216\u8005\u5b57\u5178\u8fd9\u79cd\u53ef\u53d8\u7c7b\u578b - \u4e24\u4e2akey\u4e0d\u80fd\u76f8\u7b49\uff0c\u4e00\u4e2akey\u53ea\u5bf9\u5e94\u4e00\u4e2a\u503c\uff08\u4f46\u662f\u8fd9\u4e2a\u503c\u53ef\u4ee5\u662f\u5217\u8868\uff09 Dictionary Comprehensions \u00b6 {<key exp>:<value exp> for <name> in <iter exp> if <filter exp>} \u6211\u8d85\u597d\u957f\uff0c\u4e0d\u8fc7\u539f\u7406\u548c [[Lecture10#List Comprehensions|List Comprehensions]] \u5dee\u4e0d\u591a ![[Pasted image 20220216221655.png]]","title":"Data Abstraction"},{"location":"CS61A/Lectures/Lecture12/#data-abstraction","text":"[[2022-02-16]] [[Lectures]] ## P1: Data Abstraction \u6307\u4e00\u4e2a\u590d\u5408\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5c06\u51e0\u4e2a\u4e0d\u540c\u7684\u90e8\u5206\u7ec4\u5408\u8d77\u6765\u3002 \u6bd4\u5982\u65e5\u671f\u4e4b\u4e8e\u5e74\u6708\u65e5 ![[Pasted image 20220216121519.png]] Data abstraction: A methodology by which functions enforce an abstraction barrier between representation and use \u51fd\u6570\u5728\u8868\u793a\u548c\u4f7f\u7528\u4e4b\u95f4\u8bbe\u7f6e\u62bd\u8c61\u5c4f\u969c\u7684\u4e00\u79cd\u65b9\u6cd5 \u76ee\u524d\u5bf9\u6211\u800c\u8a00\u8fd8\u662f\u4e00\u4e2a\u6bd4\u8f83\u6666\u6da9\u7684\u6982\u5ff5\uff0c\u7528\u4e00\u4e2a\u4f8b\u5b50\u5c55\u793a\uff1a","title":"Data Abstraction"},{"location":"CS61A/Lectures/Lecture12/#_1","text":"\u4efb\u4f55\u6709\u7406\u6570\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u5206\u6570\uff0c\u5373\u4e24\u4e2a\u6574\u6570\u76f8\u9664\uff1a $$ \\frac{\\text{numerator}}{\\text{denominator}} $$ \u8981\u5c06\u5b83\u5b8c\u5168\u7684\u8868\u793a\u4e3a\u5c0f\u6570\uff08\u6d6e\u70b9\u6570\uff09\u5fc5\u5b9a\u4f1a\u635f\u5931\u7cbe\u5ea6\uff0c\u6bd4\u59821/3\u8f6c\u5316\u4e3a0.33333\uff0c\u53ea\u8981\u8868\u793a\u7684\u5faa\u73af\u5728\u67d0\u4e00\u4e2a\u5730\u65b9\u65ad\u6389\u4e86\uff0c\u90a3\u5c31\u4f1a\u9020\u6210\u7cbe\u5ea6\u635f\u5931\uff0c\u4ece\u800c\u4e24\u8005\u4e4b\u95f4\u4e0d\u518d\u53ef\u4ee5\u753b\u7b49\u53f7\u3002 \u6240\u4ee5\u7cbe\u786e\u7684\u8868\u793a\u6709\u7406\u6570\u53ea\u80fd\u4f7f\u7528\u5206\u6570\u3002 \u5b9a\u4e49\u51e0\u4e2a\u51fd\u6570\uff1a rational ( n , d ) \u8fd4\u56de\u6709\u7406\u6570x numer ( x ) \u8fd4\u56dex\u7684\u5206\u5b50 denom ( x ) \u8fd4\u56dex\u7684\u5206\u6bcd def mul_rational ( x , y ): return rational ( numer ( x ) * numer ( y ), denom ( x ) * denom ( y )) def add_rational ( x , y ): return rational ( nx * dy + ny * dx , dx * dy ) def equal_rational ( x , y ): return numer ( x ) * demon ( y ) == numer ( y ) * denom ( x ) \u5177\u4f53\u7684\u4f7f\u7528\u5728\u4e0b\u4e00\u8282","title":"\u8868\u793a\u6709\u7406\u6570"},{"location":"CS61A/Lectures/Lecture12/#representing-rational-numbers","text":"","title":"Representing Rational Numbers"},{"location":"CS61A/Lectures/Lecture12/#pair","text":"\u53ef\u4ee5\u7528\u81ea\u5e26\u7684list\u6765\u8868\u793a\u4e00\u5bf9\u6570\uff1a list = [1,2] \u8bbf\u95ee\u67d0\u4e00\u4e2a\u503c\u7684\u65f6\u5019\u53ef\u4ee5\u7528\uff1a list[0] \u636e\u6b64\u5c31\u53ef\u4ee5\u5b8c\u5584\u4e4b\u524d\u6ca1\u6709\u5b8c\u6574\u5b9a\u4e49\u7684\u7528\u4e8e\u8868\u793a\u6709\u7406\u6570\u7684\u51fd\u6570\u5566\uff1a def rational ( n , d ): '''\u8fd4\u56de\u6709\u7406\u6570x''' return [ n , d ] def numer ( x ): return x [ 0 ] def denom ( x ): return x [ 1 ] \u6211\u4eec\u5e0c\u671b\u6709\u7406\u6570\u7684\u4e0a\u4e0b\u662f\u4e00\u4e2a\u6700\u7b80\u7684\u5206\u6570\uff1a \u5f15\u5165\u4e00\u4e2a\u81ea\u5e26\u51fd\u6570gcd(n,d)\uff1a\u8fd4\u56de\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570 \u73b0\u5728\u6539\u8fdb\u4e00\u4e0b\u521a\u521a\u7684rational\u51fd\u6570\uff1a from fractions import gcd def rational ( n , d ): g = gcd ( n , d ) return [ n // g , d // g ]","title":"Pair"},{"location":"CS61A/Lectures/Lecture12/#abstraction-barrier","text":"![[Pasted image 20220216214803.png]] \u4ece\u4e0a\u5230\u4e0b\uff0c\u5176\u5b9e\u73b0(implementation)\u9010\u6e10\u4ece\u9ad8\u7ea7\u5230\u57fa\u672c\u3002 \u60f3\u8fd0\u7528\u67d0\u5c42\u7684\u529f\u80fd\u53ea\u9700\u8981\u4f7f\u7528\u8be5\u5c42\u7684\u51fd\u6570\uff0c\u4e0d\u53ef\u8de8\u754c\uff0c\u6216\u8005\u8bf4 \u4e0d\u7528\u5173\u5fc3\u66f4\u5e95\u5c42\u7684\u5b9e\u73b0 \u3002 \u6bd4\u5982\u8bf4\u505a\u505a\u67d0\u51e0\u4e2a\u6709\u7406\u6570\u4e4b\u95f4\u7684\u8fd0\u7b97\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u7684\u6709\u7406\u6570\u662f\u600e\u6837\u5b9e\u73b0\u7684\uff0c\u662f\u4e0d\u662f\u7528\u4e24\u4e2a\u6574\u6570\u6765\u8868\u793a\u5206\u6570\u5e76\u4e0d\u91cd\u8981\uff0c\u66f4\u4e0d\u9700\u8981\u77e5\u9053\u4ed6\u4eec\u662f\u4e0d\u662f\u4f9d\u8d56list\u5b9e\u73b0\u7684\u3002 \u4f7f\u7528\u67d0\u79cd\u6570\u636e\u7ed3\u6784\u7684\u65f6\u5019\u4e0d\u9700\u8981\u77e5\u9053\u5176\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u66f4\u5173\u6ce8\u662f\u5982\u4f55\u8fd0\u7528\u7684\u3002 \u7c7b\u4f3c\u4e8e [[Dijkstra]] \u8bf4\u7684\uff1a![[\u6700\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u2026\u2026# e70bb3]]![[\u6700\u806a\u660e\u7684\u7a0b\u5e8f\u5458\u2026\u2026# 798235]]","title":"Abstraction Barrier"},{"location":"CS61A/Lectures/Lecture12/#data-representation","text":"Data Representations - YouTube \u5982\u679c\u4e25\u683c\u7684\u9075\u7167\u5982\u4e0a\u8bb2\u8ff0\u7684\u89c4\u5219\uff0c\u6bcf\u4e00\u5c42\u7684\u5b9e\u73b0\u4e0d\u8d8a\u754c\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a \u5982\u679c\u8981\u4fee\u6539\u67d0\u4e00\u5c42\u7684\u5b9e\u73b0\uff0c\u6bd4\u5982\u627e\u5230\u4e86\u66f4\u4f18\u5f02\u7684\u7b97\u6cd5\uff0c\u66f4\u9002\u5408\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6b64\u65f6\u65e0\u9700\u66f4\u6539\u5176\u4ed6\u5c42\uff0c\u53ea\u9700\u8981\u4fee\u6539\u8fd9\u4e00\u5c42\u7684\u5b9e\u73b0\u5c31\u53ef\u4ee5\u3002 \u592a\u5999\u4e86\uff01 \u5177\u4f53\u4f8b\u5b50\u770b\u89c6\u9891\u3002","title":"Data Representation"},{"location":"CS61A/Lectures/Lecture12/#dictionaries","text":"\u65b0\u6570\u636e\u7ed3\u6784\uff1a\u5b57\u5178[[Dictionary]] Python \u5b57\u5178 (w3school.com.cn) ![[Pasted image 20220216220226.png]] \u5c31\u50cf\u73b0\u5b9e\u4e2d\u7684\u5b57\u5178\uff0c\u6709\uff08\u7d22\u5f15\uff09\u5173\u952e\u8bcd\u6709\u6761\u76ee\u3002 \u4e00\u4e2a\u5173\u952e\u8bcd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee\u3002 \u4e0d\u8fc7Python\u91cc\u7684\u5b57\u5178\u6709\u522b\u7684\u89c4\u77e9\uff1a - key\u4e0d\u80fd\u662f\u5217\u8868\u6216\u8005\u5b57\u5178\u8fd9\u79cd\u53ef\u53d8\u7c7b\u578b - \u4e24\u4e2akey\u4e0d\u80fd\u76f8\u7b49\uff0c\u4e00\u4e2akey\u53ea\u5bf9\u5e94\u4e00\u4e2a\u503c\uff08\u4f46\u662f\u8fd9\u4e2a\u503c\u53ef\u4ee5\u662f\u5217\u8868\uff09","title":"Dictionaries"},{"location":"CS61A/Lectures/Lecture12/#dictionary-comprehensions","text":"{<key exp>:<value exp> for <name> in <iter exp> if <filter exp>} \u6211\u8d85\u597d\u957f\uff0c\u4e0d\u8fc7\u539f\u7406\u548c [[Lecture10#List Comprehensions|List Comprehensions]] \u5dee\u4e0d\u591a ![[Pasted image 20220216221655.png]]","title":"Dictionary Comprehensions"},{"location":"CS61A/Lectures/Lecture13/","text":"Trees \u00b6 [[2022-02-22]] [[Lectures]] Trees \u00b6 ![[Pasted image 20220222205628.png]] \u5b9e\u73b0 \u00b6 List \u00b6 ![[Pasted image 20220222205821.png]] ![[Pasted image 20220222210054.png]] Tree Processing \u00b6 ![[Pasted image 20220222210552.png]] ![[Pasted image 20220222211206.png]] ![[Pasted image 20220222211552.png]] Example: Printing Trees \u00b6 ![[Pasted image 20220222211811.png]] \u4f7f\u7528\u7f29\u8fdb\u6765\u8868\u793a\u5c42\u6b21\uff0c\u4e00\u4e2a\u7f29\u8fdb\u8868\u793a\u662f\u7b2c\u4e8c\u5c42\uff0c \u5373 5 \u662f\u7b2c\u4e00\u5c42\uff0c\u800c 2,3 \u662f\u7b2c\u4e8c\u5c42\u3002 Example: Summing Paths \u00b6 \u6f14\u793a\u4e86\u4e00\u4e2a\u7528\u6765\u8ba1\u7b97\u67d0\u4e00\u6761\u8def\u5f84\u7684\u5408\u7684\u51fd\u6570\uff0c\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u505a\u7b14\u8bb0\u4e86\u3002 Example: Counting Paths \u00b6 \u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6765\u81ea\u5df1\u5199\u7684\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u5199\u4e86\u3002 \u672c\u8bfeover","title":"Trees"},{"location":"CS61A/Lectures/Lecture13/#trees","text":"[[2022-02-22]] [[Lectures]]","title":"Trees"},{"location":"CS61A/Lectures/Lecture13/#trees_1","text":"![[Pasted image 20220222205628.png]]","title":"Trees"},{"location":"CS61A/Lectures/Lecture13/#_1","text":"","title":"\u5b9e\u73b0"},{"location":"CS61A/Lectures/Lecture13/#list","text":"![[Pasted image 20220222205821.png]] ![[Pasted image 20220222210054.png]]","title":"List"},{"location":"CS61A/Lectures/Lecture13/#tree-processing","text":"![[Pasted image 20220222210552.png]] ![[Pasted image 20220222211206.png]] ![[Pasted image 20220222211552.png]]","title":"Tree Processing"},{"location":"CS61A/Lectures/Lecture13/#example-printing-trees","text":"![[Pasted image 20220222211811.png]] \u4f7f\u7528\u7f29\u8fdb\u6765\u8868\u793a\u5c42\u6b21\uff0c\u4e00\u4e2a\u7f29\u8fdb\u8868\u793a\u662f\u7b2c\u4e8c\u5c42\uff0c \u5373 5 \u662f\u7b2c\u4e00\u5c42\uff0c\u800c 2,3 \u662f\u7b2c\u4e8c\u5c42\u3002","title":"Example: Printing Trees"},{"location":"CS61A/Lectures/Lecture13/#example-summing-paths","text":"\u6f14\u793a\u4e86\u4e00\u4e2a\u7528\u6765\u8ba1\u7b97\u67d0\u4e00\u6761\u8def\u5f84\u7684\u5408\u7684\u51fd\u6570\uff0c\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u505a\u7b14\u8bb0\u4e86\u3002","title":"Example: Summing Paths"},{"location":"CS61A/Lectures/Lecture13/#example-counting-paths","text":"\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6765\u81ea\u5df1\u5199\u7684\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u5199\u4e86\u3002 \u672c\u8bfeover","title":"Example: Counting Paths"},{"location":"CS61A/Lectures/Lecture14/","text":"Mutability \u00b6 [[2022-02-27]] [[Lectures]] Objects \u00b6 ![[Pasted image 20220302150308.png]] Example: Strings \u00b6 \u4ecb\u7ecd\u4e86 ASCII\u548cUnicode Mutation Operations \u00b6 ![[Pasted image 20220302151634.png]] ![[Pasted image 20220302151714.png]] Functions can change the value of any object in its scope. \u5373\u6539\u53d8\u4e00\u4e2a\u5bf9\u8c61\u7684\u5185\u5bb9\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u6709\u522b\u7684\u540d\u5b57bound\u5728\u4e0a\u9762\u800c\u7559\u5b58\uff1a \u6211\u4e0d\u7ba1\u600e\u4e48\u53d8\u4ece\u5c0f\u5230\u5927\u90fd\u662f\u53eb\u8fd9\u4e2a\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u6307\u5411\u6211\u8fd9\u4e2a\u4eba\uff0c\u4e0d\u7ba1\u6211\u662f\u53d8\u6210\u4e86\u6e23\u7537\u8fd8\u662f\u65b9\u4e08\u3002 \u800c\u522b\u4eba\u53eb\u6211\u5916\u53f7\uff0c\u968f\u7740\u6211\u6539\u53d8\uff0c\u53eb\u6211\u5916\u53f7\u4e0d\u7b49\u4e8e\u53eb\u4e4b\u524d\u7684\u6211\u800c\u662f\u73b0\u5728\u7684\u6211\u3002 \u5728\u51fd\u6570\u4e2d\u5bf9\u5bf9\u8c61\u9020\u6210\u6539\u53d8\u4ea6\u662f\u5982\u6b64\u3002 Tuples \u00b6 \u5373[[\u5143\u7ec4]]\u3002\u4e0d\u53ef\u4ee5mutation\u7684\u503c[[Python]] \u5b9a\u4e49\u4e00\u4e2a\u5143\u7ec4\uff1a ![[Pasted image 20220302152352.png]] \u5143\u7ec4\u53ef\u4ee5\u88ab\u7528\u4f5c\u5b57\u5178\u7684key Mutation \u00b6 ![[Pasted image 20220302155136.png]] Identity \u00b6 <exp0> is <exp1> \u8fd4\u56de True \u5982\u679c\u4e24\u8005\u88abbound\u5230\u4e00\u4e2a\u5bf9\u8c61\u3002 \u800c == \u8fd4\u56de\u7684\u662f\u4e24\u8005\u7684\u503c\u7684\u6bd4\u8f83\uff0c\u5373\u4f7f\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002 Mutable Functions \u00b6","title":"Mutability"},{"location":"CS61A/Lectures/Lecture14/#mutability","text":"[[2022-02-27]] [[Lectures]]","title":"Mutability"},{"location":"CS61A/Lectures/Lecture14/#objects","text":"![[Pasted image 20220302150308.png]]","title":"Objects"},{"location":"CS61A/Lectures/Lecture14/#example-strings","text":"\u4ecb\u7ecd\u4e86 ASCII\u548cUnicode","title":"Example: Strings"},{"location":"CS61A/Lectures/Lecture14/#mutation-operations","text":"![[Pasted image 20220302151634.png]] ![[Pasted image 20220302151714.png]] Functions can change the value of any object in its scope. \u5373\u6539\u53d8\u4e00\u4e2a\u5bf9\u8c61\u7684\u5185\u5bb9\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u6709\u522b\u7684\u540d\u5b57bound\u5728\u4e0a\u9762\u800c\u7559\u5b58\uff1a \u6211\u4e0d\u7ba1\u600e\u4e48\u53d8\u4ece\u5c0f\u5230\u5927\u90fd\u662f\u53eb\u8fd9\u4e2a\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u6307\u5411\u6211\u8fd9\u4e2a\u4eba\uff0c\u4e0d\u7ba1\u6211\u662f\u53d8\u6210\u4e86\u6e23\u7537\u8fd8\u662f\u65b9\u4e08\u3002 \u800c\u522b\u4eba\u53eb\u6211\u5916\u53f7\uff0c\u968f\u7740\u6211\u6539\u53d8\uff0c\u53eb\u6211\u5916\u53f7\u4e0d\u7b49\u4e8e\u53eb\u4e4b\u524d\u7684\u6211\u800c\u662f\u73b0\u5728\u7684\u6211\u3002 \u5728\u51fd\u6570\u4e2d\u5bf9\u5bf9\u8c61\u9020\u6210\u6539\u53d8\u4ea6\u662f\u5982\u6b64\u3002","title":"Mutation Operations"},{"location":"CS61A/Lectures/Lecture14/#tuples","text":"\u5373[[\u5143\u7ec4]]\u3002\u4e0d\u53ef\u4ee5mutation\u7684\u503c[[Python]] \u5b9a\u4e49\u4e00\u4e2a\u5143\u7ec4\uff1a ![[Pasted image 20220302152352.png]] \u5143\u7ec4\u53ef\u4ee5\u88ab\u7528\u4f5c\u5b57\u5178\u7684key","title":"Tuples"},{"location":"CS61A/Lectures/Lecture14/#mutation","text":"![[Pasted image 20220302155136.png]]","title":"Mutation"},{"location":"CS61A/Lectures/Lecture14/#identity","text":"<exp0> is <exp1> \u8fd4\u56de True \u5982\u679c\u4e24\u8005\u88abbound\u5230\u4e00\u4e2a\u5bf9\u8c61\u3002 \u800c == \u8fd4\u56de\u7684\u662f\u4e24\u8005\u7684\u503c\u7684\u6bd4\u8f83\uff0c\u5373\u4f7f\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002","title":"Identity"},{"location":"CS61A/Lectures/Lecture14/#mutable-functions","text":"","title":"Mutable Functions"},{"location":"CS61A/Lectures/Lecture15/","text":"Syntax \u00b6 [[2022-03-03]] [[Lectures]] ## Data Abstraction for Syntax \u5b9a\u4e49\u4e86\u51e0\u4e2a\u51fd\u6570\u6765\u5b9a\u4e49\u548c\u8868\u793a\u8bed\u53e5\u7684\u5143\u7d20\uff1a ![[Pasted image 20220303103122.png]] ## Parsing .strip() \u8fd4\u56de\u4e00\u6bb5\u6ca1\u6709\u7a7a\u683c\uff08\u4ee5\u53caTab\uff09\u7684\u5b57\u7b26\u4e32\u3002 .split() \u8fd4\u56de\u4ee5\u7a7a\u683c\u9694\u5f00\u7684\u5217\u8868\uff0c\u5143\u7d20\u4e3a\u6bcf\u4e2a\u5355\u8bcd .replace(a,b) \u8fd4\u56de\u4e00\u4e2a\u5c06\u6240\u6709\u7684 a \u66ff\u6362\u6210 b \u7684\u5b57\u7b26\u4e32 .count() \u7edf\u8ba1\u5b57\u7b26\u4e32\u91cc\u67d0\u4e2a\u5b57\u7b26\u6216\u5b50\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570","title":"Syntax"},{"location":"CS61A/Lectures/Lecture15/#syntax","text":"[[2022-03-03]] [[Lectures]] ## Data Abstraction for Syntax \u5b9a\u4e49\u4e86\u51e0\u4e2a\u51fd\u6570\u6765\u5b9a\u4e49\u548c\u8868\u793a\u8bed\u53e5\u7684\u5143\u7d20\uff1a ![[Pasted image 20220303103122.png]] ## Parsing .strip() \u8fd4\u56de\u4e00\u6bb5\u6ca1\u6709\u7a7a\u683c\uff08\u4ee5\u53caTab\uff09\u7684\u5b57\u7b26\u4e32\u3002 .split() \u8fd4\u56de\u4ee5\u7a7a\u683c\u9694\u5f00\u7684\u5217\u8868\uff0c\u5143\u7d20\u4e3a\u6bcf\u4e2a\u5355\u8bcd .replace(a,b) \u8fd4\u56de\u4e00\u4e2a\u5c06\u6240\u6709\u7684 a \u66ff\u6362\u6210 b \u7684\u5b57\u7b26\u4e32 .count() \u7edf\u8ba1\u5b57\u7b26\u4e32\u91cc\u67d0\u4e2a\u5b57\u7b26\u6216\u5b50\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570","title":"Syntax"},{"location":"CS61A/Lectures/Lectures/","text":"Lectures \u00b6 [[CS61A]] type: folder_brief_live","title":"Lectures"},{"location":"CS61A/Lectures/Lectures/#lectures","text":"[[CS61A]] type: folder_brief_live","title":"Lectures"},{"location":"CS61A/Projects/Hog/","text":"[[Projects]] Project 1: The Game of Hog | CS 61A Fall 2021 (berkeley.edu) \u89e3\u538b\u51fa\u4ee5\u4e0b\u6587\u4ef6\uff1a ![[Pasted image 20220123000411.png]] \u53ea\u9700\u4fee\u6539 hog.py \u5373\u53ef\u3002 Phase 1: Simulator \u00b6 \u8fd9\u90e8\u5206\u9700\u8981\u505a\u51fa\u6e38\u620f\u9700\u8981\u7684\u6240\u6709\u7684\u903b\u8f91\u90e8\u5206\u7684\u81ea\u5b9a\u51fd\u6570\u3002 Problem 0 (0 pt) \u00b6 \u7406\u89e3 make_test_dice \u548c make_fair_dice \u4e24\u4e2a\u51fd\u6570\u505a\u51e0\u9053\u9898\u5373\u53ef\u3002 Problem 1 (2 pt) \u00b6 \u7406\u89e3\u5e76\u8865\u5168 roll_dice \u51fd\u6570\u3002\u6211\u7684\u7ed3\u679c\u5982\u4e0b\uff1a def roll_dice ( num_rolls , dice = six_sided ): sum = 0 num = 0 saw_sad = False for i in range ( 0 , num_rolls ): num = dice () if num != 1 : sum += num else : saw_sad = True return sum if saw_sad == False else 1 ``` --- ### Problem 2 (3 pt) \u7406\u89e3\u5e76\u8865\u5168 ` picky_piggy ` \u51fd\u6570 \u3002 \u6211\u7684\u7ed3\u679c\u5982\u4e0b \uff1a ``` python def picky_piggy ( score ): dividend = 1 divisor = 7 quotient = 0 remainder = 1 i = 1 if score == 0 : return 7 else : while i <= score : dividend = 10 * remainder quotient = dividend // divisor remainder = dividend % divisor i += 1 return quotient \u6ce8\u610f \uff1a\u5173\u952e\u8bcd\u4e0d\u80fd\u6709for\uff0c\u5e94\u8be5\u662f\u56e0\u4e3a\u8fd8\u6ca1\u8bb2\u5230\u3002 Problem 3 (2 pt) \u00b6 Implement the take_turn function, which returns the number of points scored for a turn by rolling the given dice num_rolls times. \u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u6309\u60c5\u51b5\u8f93\u51fa\u5bf9\u5e94\u7684\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\uff1a def take_turn ( num_rolls , opponent_score , dice = six_sided , goal = GOAL_SCORE ): return picky_piggy ( opponent_score ) if num_rolls == 0 else roll_dice ( num_rolls , dice ) Problem 4 (1 pt) \u00b6 Implement hog_pile , which takes the current player and opponent scores and returns the points that the current player will receive due to Hog Pile. If Hog Pile is not applicable, the current player could also recieve 0 additional points. \u4e5f\u975e\u5e38\u7b80\u5355\uff1a def hog_pile ( player_score , opponent_score ): if player_score == opponent_score : return player_score else : return 0 Problem 5 (4 pt) \u00b6 Implement the play function, which simulates a full game of Hog. Players take turns rolling dice until one of the players reaches the goal score. A turn is defined as one roll of the dice. \u8fd9\u4e2a\u51fd\u6570\u6bd4\u8f83\u590d\u6742\uff08?\uff09\uff0c\u7ed3\u6784\u4e0a\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u96be\u7684\u5730\u65b9\u5728\u4e8e\u5982\u4f55\u719f\u7ec3\u7406\u89e3\u8fd0\u7528\u4e4b\u524d\u5199\u597d\u7684\u90a3\u4e00\u5927\u5806\u7684\u81ea\u5b9a\u51fd\u6570\u3002 def play ( strategy0 , strategy1 , score0 = 0 , score1 = 0 , dice = six_sided , goal = GOAL_SCORE , say = silence ): \"\"\"Simulate a game and return the final scores of both players, with Player 0's score first, and Player 1's score second. A strategy is a function that takes two total scores as arguments (the current player's score, and the opponent's score), and returns a number of dice that the current player will roll this turn. strategy0: The strategy function for Player 0, who plays first. strategy1: The strategy function for Player 1, who plays second. score0: Starting score for Player 0 score1: Starting score for Player 1 dice: A function of zero arguments that simulates a dice roll. goal: The game ends and someone wins when this score is reached. say: The commentary function to call at the end of the first turn. \"\"\" who = 0 # Who is about to take a turn, 0 (first) or 1 (second) # BEGIN PROBLEM 5 while 1 : if who == 0 : score0 += take_turn ( strategy0 ( score0 , score1 ), score1 , dice , goal ) score0 += hog_pile ( score0 , score1 ) if who == 1 : score1 += take_turn ( strategy1 ( score1 , score0 ), score0 , dice , goal ) score1 += hog_pile ( score1 , score0 ) if score0 >= goal or score1 >= goal : break who = next_player ( who ) return score0 , score1 \u4e4b\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c python3 hog_gui.py \u6765\u73a9\u4e0a\u4e00\u628a\u5566~~ Phase 2: Commentary \u00b6 \u7b2c\u4e8c\u90e8\u5206\u5c31\u662fprint\u4e00\u4e9b\u81ea\u52a8\u751f\u6210\u7684== \u5f69\u8679\u5c41 ==\u8bc4\u8bed\uff0clike: \"22 point(s)! That's a record gain for Player 1!\" Commentary examples \u00b6 The function say_scores in hog.py is an example of a commentary function that simply announces both players' scores. Note that say_scores returns itself, meaning that the same commentary function will be called each turn. def say_scores ( score0 , score1 ): \"\"\"A commentary function that announces the score for each player.\"\"\" print ( \"Player 0 now has\" , score0 , \"and Player 1 now has\" , score1 ) return say_scores \u7b80\u5355\u6765\u8bb2\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u81ea\u5df1\u7684\u51fd\u6570\uff0c\u671f\u95f4\u4f1a\u8bf4\u9884\u8bbe\u597d\u7684\u8bdd\uff0c \u6bcf\u4e00\u6b21 \u90fd\u4f1a\u8c03\u7528\u81ea\u5df1\u3002 def play ( strategy0 , strategy1 , score0 = 0 , score1 = 0 , dice = six_sided , goal = GOAL_SCORE , say = silence ): while 1 : if who == 0 : score0 += take_turn ( strategy0 ( score0 , score1 ), score1 , dice , goal ) score0 += hog_pile ( score0 , score1 ) if who == 1 : score1 += take_turn ( strategy1 ( score1 , score0 ), score0 , dice , goal ) score1 += hog_pile ( score1 , score0 ) say = say ( score0 , score1 ) if score0 >= goal or score1 >= goal : break who = next_player ( who ) return score0 , score1 \u6709\u4e00\u4e2a\u70b9\uff1a\u5fc5\u987b\u8981\u5728\u5224\u5b9a\u80dc\u8d1f\u524dsay\uff0c\u4e0d\u7136\u80dc\u524d\u7684\u6700\u540e\u4e00\u6b21\u5c31\u4f1a\u7f3a\u5931say\uff08\u8fc7\u4e0d\u4e86ok\uff09\u3002 \u61d2\u5f97\u622a\u56fe\u4e86\uff0c\u6e9c Problem 7 (3 pt) \u00b6 \u7406\u89e3\u5e76\u7f16\u5199 announce_highest \uff1a\u7528\u4e8e\u8f93\u51fa\u67d0\u4e2a\u73a9\u5bb6\u83b7\u5f97\u4e86\u4ed6\u7684\u6700\u9ad8\u4e00\u6b21\u5206\u6570\u3002 def announce_highest ( who , last_score = 0 , running_high = 0 ): assert who == 0 or who == 1 , 'The who argument should indicate a player.' def say ( score0 , score1 , last_score = last_score , running_high = running_high ): if who == 0 : if ( score0 - last_score ) > running_high : print ( score0 - last_score , \"point(s)! That's a record gain for Player 0!\" ) running_high = score0 - last_score return announce_highest ( who , score0 , running_high ) if who == 1 : if ( score1 - last_score ) > running_high : print ( score1 - last_score , \"point(s)! That's a record gain for Player 1!\" ) running_high = score1 - last_score return announce_highest ( who , score1 , running_high ) return say \u6709\u4e00\u6bb5\u65f6\u95f4\u5361\u5728\u56de\u6eaf\u4e4b\u524d\u7684\u60c5\u51b5\u6539\u5199\u4e0d\u4f1a\u7559\u5b58\u4e4b\u524d\u7684\u6570\u636e\u8fd9\u91cc\u4e86\uff0csay\u51fd\u6570\u91cc\u9762\u7528\u7684\u662fnonlocal\u6765\u628a announce_highest \u7684 last_score \u548c running_high \u4f20\u5165say\u3002 \u5e94\u8be5\u662f\u56e0\u4e3anonlocal\u76f8\u5f53\u4e8e\u662f\u91cc\u5916\u51fd\u6570\u7684\u53d8\u91cf\u505a\u7684\u662f\u5f3a\u94fe\u63a5\u800c\u4e0d\u662f\u5f62\u53c2\u5f15\u7528\u8fd9\u6837\uff0c\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u73a9\u5bb6\u7684 running_high \u6539\u53d8\u4e86\uff0c\u4f1a\u4f20\u5230\u5916\u5c42\u51fd\u6570\uff0c\u53e6\u4e00\u4e2a\u73a9\u5bb6\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u7528\u7684\u5c31\u662f\u8fd9\u4e2a\u503c\uff1f \u7b49\u6211\u518d\u53bb\u7814\u7a76\u4e00\u4e0b[[Higher-order Functions|\u9ad8\u9636\u51fd\u6570]]\u7684\u5177\u4f53\u77e5\u8bc6\u3002 Phase 3: Strategies \u00b6 In the third phase, you will experiment with ways to improve upon the basic strategy of always rolling a fixed number of dice. First, you need to develop some tools to evaluate strategies. \u5199AI\u7b56\u7565\u54af~~ Problem 8 (2 pt) \u00b6 Implement the make_averaged function. \u8ba1\u7b97\u67d0\u79cd\u7b56\u7565\u7684\u5e73\u5747\u5f97\u5206\u3002 def make_averaged ( original_function , trials_count = 1000 ): \"\"\"Return a function that returns the average value of ORIGINAL_FUNCTION called TRIALS_COUNT times. >>> dice = make_test_dice(4, 2, 5, 1) >>> averaged_dice = make_averaged(roll_dice, 1000) >>> averaged_dice(1, dice) 3.0 \"\"\" # BEGIN PROBLEM 8 def f ( * args ): total = 0 for i in range ( trials_count ): total += original_function ( * args ) return total / trials_count return f # END PROBLEM 8 \u8fd9\u91cc\u7684 *args \u6307\u7684\u662f original_function \u7684\u5404\u4e2a\u53c2\u6570\uff0c\u4f9d\u8d56\u7684\u662f\u9009\u62e9\u7684roll\u51fd\u6570\uff0c\u5982\u679c\u5c31\u662f\u666e\u901a\u7684 roll_dice \uff0c\u5373\u9700\u8981\u4f20\u5165 (num_rolls, dice=six_sided) \u3002 \u5982\u679c\u9700\u8981\u8c03\u7528 make_averaged \uff0c\u4e0d\u4ec5\u9700\u8981\u5b83\u81ea\u5df1\u7684\u53c2\u6570\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u8fd4\u56de\u51fd\u6570\u7684\u9ad8\u9636\u51fd\u6570\uff0c\u8fd8\u9700\u8981\u4f20\u5165f\u7684\u53c2\u6570\u3002 whatever = make_averaged ( roll_dice , 1000 \uff09 whatever ( 2 , dice ) #\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u5f62\u5f0f\uff1a whatever = make_averaged ( roll_dice , 1000 )( 2 , dice ) \u6211\u613f\u79f0\u4e4b\u4e3a\u5957\u5a03\u51fd\u6570\uff08\u5d4c\u5957\u51fd\u6570\uff09\uff0c\u5373\u7b2c\u4e8c\u4e2a\u62ec\u53f7\u524d\u5176\u5b9e\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff1a f \uff0c\u800c\u540e\u9762\u624d\u662f\u7ed9\u4ed6\u4f20\u5165\u7684\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u62ec\u53f7\u5185\u7684\u53c2\u6570\u4f1a\u5f71\u54cdf\u8fd9\u4e2a\u51fd\u6570\u7684\u51fd\u6570\u4f53\u3002 \u6211\u89c9\u5f97\u8fd8\u662f\u6709\u70b9\u4e3a\u4e86\u7528\u9ad8\u9636\u800c\u7528\u9ad8\u9636\u4e86\uff0c\u4e4b\u524d\u7684announce\u51fd\u6570\u53ef\u4ee5\u6709\u56de\u6eaf\u7684\u529f\u80fd\uff0c\u800c\u5728\u8fd9\u91cc\u4ec5\u4ec5\u662f\u6bd4\u8f83\u8d39\u8111\u5b50\u7f62\u4e86\u3002 \u4e5f\u53ea\u6709\u5230\u4e86\u8fd9\u91cc\u624d\u7a0d\u5fae\u641e\u6e05\u695a\u4e86\u4e00\u70b9\u9ad8\u9636\u51fd\u6570\u7684\u4e8b\u60c5\u3002\u3002 \u4e0d\u8fc7\u7ee7\u7eed\u524d\u8fdb\u5427\uff0c \u53ea\u8981\u4e0d\u65ad\u524d\u8fdb\uff0c\u9053\u8def\u5c31\u4f1a\u4e0d\u65ad\u5ef6\u4f38\u3002 Problem 9 (2 pt) \u00b6 Implement the max_scoring_num_rolls function, which runs an experiment to determine the number of rolls (from 1 to 10) that gives the maximum average score for a turn. Your implementation should use make_averaged and roll_dice . \u5199 max_scoring_num_rolls \uff0c\u5373\u662f\u8c03\u7528\u4e4b\u524d\u7684\u51fd\u6570\u6765\u4f30\u8ba1\u672c\u6b21\u4e22\u591a\u5c11\u9ab0\u5b50\u53ef\u4ee5\u83b7\u5f97\u6700\u5927\u7684\u671f\u671b\u5206\u6570\u3002 def max_scoring_num_rolls ( dice = six_sided , trials_count = 1000 ): \"\"\"Return the number of dice (1 to 10) that gives the highest average turn score by calling roll_dice with the provided DICE a total of TRIALS_COUNT times. Assume that the dice always return positive outcomes. >>> dice = make_test_dice(1, 6) >>> max_scoring_num_rolls(dice) 1 \"\"\" max = 0 index = 1 for i in range ( 1 , 11 ): average = make_averaged ( roll_dice , trials_count )( i , dice ) if average > max : index , max = i , average return index \u51fd\u6570\u4f53\u672c\u8eab\u6bd4\u8f83\u7b80\u5355\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u6b63\u786e\u8c03\u7528\u9ad8\u9636\u51fd\u6570\uff0c\u5982\u540c\u4e0a\u9762\u8bb2\u8ff0\u7684\u3002 Problem 10 (1 pt) \u00b6 A strategy can try to take advantage of the Picky Piggy rule by rolling 0 when it is most beneficial to do so. Implement picky_piggy_strategy , which returns 0 whenever rolling 0 would give at least cutoff points and returns num_rolls otherwise. \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8c03\u7528 picky_piggy \u7136\u540e\u548c cutoff \u6bd4\u8f83\u5373\u53ef\u3002 def picky_piggy_strategy ( score , opponent_score , cutoff = 8 , num_rolls = 6 ): \"\"\"This strategy returns 0 dice if that gives at least CUTOFF points, and returns NUM_ROLLS otherwise. \"\"\" return 0 if picky_piggy ( opponent_score ) >= cutoff else num_rolls Problem 11 (1 pt) \u00b6 A strategy can also take advantage of the Hog Pile rules. The Hog Pile strategy always rolls 0 if doing so triggers the rule. In other cases, it rolls 0 if rolling 0 would give at least cutoff points. Otherwise, the strategy rolls num_rolls . def hog_pile_strategy ( score , opponent_score , cutoff = 8 , num_rolls = 6 ): \"\"\"This strategy returns 0 dice when this would result in Hog Pile taking effect. It also returns 0 dice if it gives at least CUTOFF points. Otherwise, it returns NUM_ROLLS. \"\"\" return 0 if picky_piggy ( opponent_score ) + score == opponent_score or picky_piggy_strategy ( score , opponent_score , cutoff , num_rolls ) == 0 else num_rolls \u4e3a\u4e86\u4e00\u884c\u5199\u4e0b\u727a\u7272\u4e86\u5f88\u591a\u54c8\u54c8\u3001\u3002 Optional: Problem 12 (0 pt) \u00b6 Implement final_strategy , which combines these ideas and any other ideas you have to achieve a high win rate against the baseline strategy. \u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7b56\u7565\uff0c\u8fd8\u6709\u4e2a\u5efa\u597d\u7684 run_experiments() \u53ef\u4ee5\u8c03\u7528\u6765\u6d4b\u8bd5\u80dc\u7387\u3002 \u4f46\u662f\u6211\u65f6\u95f4\u6709\u9650\uff08\u8fdb\u5ea6\u5dee\u4e86\u592a\u591a\uff09\u6240\u4ee5\u5c31\u7b80\u5355\u5199\u4e86\u4e00\u4e0b\uff0c\u80dc\u7387\u7565\u5fae\u6bd40.5\u9ad8\u3001\u3001 \u5b8c\u7ed3\u6492\u82b1~~ ![[Pasted image 20220129120753.png]]","title":"Hog"},{"location":"CS61A/Projects/Hog/#phase-1-simulator","text":"\u8fd9\u90e8\u5206\u9700\u8981\u505a\u51fa\u6e38\u620f\u9700\u8981\u7684\u6240\u6709\u7684\u903b\u8f91\u90e8\u5206\u7684\u81ea\u5b9a\u51fd\u6570\u3002","title":"Phase 1: Simulator"},{"location":"CS61A/Projects/Hog/#problem-0-0-pt","text":"\u7406\u89e3 make_test_dice \u548c make_fair_dice \u4e24\u4e2a\u51fd\u6570\u505a\u51e0\u9053\u9898\u5373\u53ef\u3002","title":"Problem 0 (0 pt)"},{"location":"CS61A/Projects/Hog/#problem-1-2-pt","text":"\u7406\u89e3\u5e76\u8865\u5168 roll_dice \u51fd\u6570\u3002\u6211\u7684\u7ed3\u679c\u5982\u4e0b\uff1a def roll_dice ( num_rolls , dice = six_sided ): sum = 0 num = 0 saw_sad = False for i in range ( 0 , num_rolls ): num = dice () if num != 1 : sum += num else : saw_sad = True return sum if saw_sad == False else 1 ``` --- ### Problem 2 (3 pt) \u7406\u89e3\u5e76\u8865\u5168 ` picky_piggy ` \u51fd\u6570 \u3002 \u6211\u7684\u7ed3\u679c\u5982\u4e0b \uff1a ``` python def picky_piggy ( score ): dividend = 1 divisor = 7 quotient = 0 remainder = 1 i = 1 if score == 0 : return 7 else : while i <= score : dividend = 10 * remainder quotient = dividend // divisor remainder = dividend % divisor i += 1 return quotient \u6ce8\u610f \uff1a\u5173\u952e\u8bcd\u4e0d\u80fd\u6709for\uff0c\u5e94\u8be5\u662f\u56e0\u4e3a\u8fd8\u6ca1\u8bb2\u5230\u3002","title":"Problem 1 (2 pt)"},{"location":"CS61A/Projects/Hog/#problem-3-2-pt","text":"Implement the take_turn function, which returns the number of points scored for a turn by rolling the given dice num_rolls times. \u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u6309\u60c5\u51b5\u8f93\u51fa\u5bf9\u5e94\u7684\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\uff1a def take_turn ( num_rolls , opponent_score , dice = six_sided , goal = GOAL_SCORE ): return picky_piggy ( opponent_score ) if num_rolls == 0 else roll_dice ( num_rolls , dice )","title":"Problem 3 (2 pt)"},{"location":"CS61A/Projects/Hog/#problem-4-1-pt","text":"Implement hog_pile , which takes the current player and opponent scores and returns the points that the current player will receive due to Hog Pile. If Hog Pile is not applicable, the current player could also recieve 0 additional points. \u4e5f\u975e\u5e38\u7b80\u5355\uff1a def hog_pile ( player_score , opponent_score ): if player_score == opponent_score : return player_score else : return 0","title":"Problem 4 (1 pt)"},{"location":"CS61A/Projects/Hog/#problem-5-4-pt","text":"Implement the play function, which simulates a full game of Hog. Players take turns rolling dice until one of the players reaches the goal score. A turn is defined as one roll of the dice. \u8fd9\u4e2a\u51fd\u6570\u6bd4\u8f83\u590d\u6742\uff08?\uff09\uff0c\u7ed3\u6784\u4e0a\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u96be\u7684\u5730\u65b9\u5728\u4e8e\u5982\u4f55\u719f\u7ec3\u7406\u89e3\u8fd0\u7528\u4e4b\u524d\u5199\u597d\u7684\u90a3\u4e00\u5927\u5806\u7684\u81ea\u5b9a\u51fd\u6570\u3002 def play ( strategy0 , strategy1 , score0 = 0 , score1 = 0 , dice = six_sided , goal = GOAL_SCORE , say = silence ): \"\"\"Simulate a game and return the final scores of both players, with Player 0's score first, and Player 1's score second. A strategy is a function that takes two total scores as arguments (the current player's score, and the opponent's score), and returns a number of dice that the current player will roll this turn. strategy0: The strategy function for Player 0, who plays first. strategy1: The strategy function for Player 1, who plays second. score0: Starting score for Player 0 score1: Starting score for Player 1 dice: A function of zero arguments that simulates a dice roll. goal: The game ends and someone wins when this score is reached. say: The commentary function to call at the end of the first turn. \"\"\" who = 0 # Who is about to take a turn, 0 (first) or 1 (second) # BEGIN PROBLEM 5 while 1 : if who == 0 : score0 += take_turn ( strategy0 ( score0 , score1 ), score1 , dice , goal ) score0 += hog_pile ( score0 , score1 ) if who == 1 : score1 += take_turn ( strategy1 ( score1 , score0 ), score0 , dice , goal ) score1 += hog_pile ( score1 , score0 ) if score0 >= goal or score1 >= goal : break who = next_player ( who ) return score0 , score1 \u4e4b\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c python3 hog_gui.py \u6765\u73a9\u4e0a\u4e00\u628a\u5566~~","title":"Problem 5 (4 pt)"},{"location":"CS61A/Projects/Hog/#phase-2-commentary","text":"\u7b2c\u4e8c\u90e8\u5206\u5c31\u662fprint\u4e00\u4e9b\u81ea\u52a8\u751f\u6210\u7684== \u5f69\u8679\u5c41 ==\u8bc4\u8bed\uff0clike: \"22 point(s)! That's a record gain for Player 1!\"","title":"Phase 2: Commentary"},{"location":"CS61A/Projects/Hog/#commentary-examples","text":"The function say_scores in hog.py is an example of a commentary function that simply announces both players' scores. Note that say_scores returns itself, meaning that the same commentary function will be called each turn. def say_scores ( score0 , score1 ): \"\"\"A commentary function that announces the score for each player.\"\"\" print ( \"Player 0 now has\" , score0 , \"and Player 1 now has\" , score1 ) return say_scores \u7b80\u5355\u6765\u8bb2\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u81ea\u5df1\u7684\u51fd\u6570\uff0c\u671f\u95f4\u4f1a\u8bf4\u9884\u8bbe\u597d\u7684\u8bdd\uff0c \u6bcf\u4e00\u6b21 \u90fd\u4f1a\u8c03\u7528\u81ea\u5df1\u3002 def play ( strategy0 , strategy1 , score0 = 0 , score1 = 0 , dice = six_sided , goal = GOAL_SCORE , say = silence ): while 1 : if who == 0 : score0 += take_turn ( strategy0 ( score0 , score1 ), score1 , dice , goal ) score0 += hog_pile ( score0 , score1 ) if who == 1 : score1 += take_turn ( strategy1 ( score1 , score0 ), score0 , dice , goal ) score1 += hog_pile ( score1 , score0 ) say = say ( score0 , score1 ) if score0 >= goal or score1 >= goal : break who = next_player ( who ) return score0 , score1 \u6709\u4e00\u4e2a\u70b9\uff1a\u5fc5\u987b\u8981\u5728\u5224\u5b9a\u80dc\u8d1f\u524dsay\uff0c\u4e0d\u7136\u80dc\u524d\u7684\u6700\u540e\u4e00\u6b21\u5c31\u4f1a\u7f3a\u5931say\uff08\u8fc7\u4e0d\u4e86ok\uff09\u3002 \u61d2\u5f97\u622a\u56fe\u4e86\uff0c\u6e9c","title":"Commentary examples"},{"location":"CS61A/Projects/Hog/#problem-7-3-pt","text":"\u7406\u89e3\u5e76\u7f16\u5199 announce_highest \uff1a\u7528\u4e8e\u8f93\u51fa\u67d0\u4e2a\u73a9\u5bb6\u83b7\u5f97\u4e86\u4ed6\u7684\u6700\u9ad8\u4e00\u6b21\u5206\u6570\u3002 def announce_highest ( who , last_score = 0 , running_high = 0 ): assert who == 0 or who == 1 , 'The who argument should indicate a player.' def say ( score0 , score1 , last_score = last_score , running_high = running_high ): if who == 0 : if ( score0 - last_score ) > running_high : print ( score0 - last_score , \"point(s)! That's a record gain for Player 0!\" ) running_high = score0 - last_score return announce_highest ( who , score0 , running_high ) if who == 1 : if ( score1 - last_score ) > running_high : print ( score1 - last_score , \"point(s)! That's a record gain for Player 1!\" ) running_high = score1 - last_score return announce_highest ( who , score1 , running_high ) return say \u6709\u4e00\u6bb5\u65f6\u95f4\u5361\u5728\u56de\u6eaf\u4e4b\u524d\u7684\u60c5\u51b5\u6539\u5199\u4e0d\u4f1a\u7559\u5b58\u4e4b\u524d\u7684\u6570\u636e\u8fd9\u91cc\u4e86\uff0csay\u51fd\u6570\u91cc\u9762\u7528\u7684\u662fnonlocal\u6765\u628a announce_highest \u7684 last_score \u548c running_high \u4f20\u5165say\u3002 \u5e94\u8be5\u662f\u56e0\u4e3anonlocal\u76f8\u5f53\u4e8e\u662f\u91cc\u5916\u51fd\u6570\u7684\u53d8\u91cf\u505a\u7684\u662f\u5f3a\u94fe\u63a5\u800c\u4e0d\u662f\u5f62\u53c2\u5f15\u7528\u8fd9\u6837\uff0c\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u73a9\u5bb6\u7684 running_high \u6539\u53d8\u4e86\uff0c\u4f1a\u4f20\u5230\u5916\u5c42\u51fd\u6570\uff0c\u53e6\u4e00\u4e2a\u73a9\u5bb6\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u7528\u7684\u5c31\u662f\u8fd9\u4e2a\u503c\uff1f \u7b49\u6211\u518d\u53bb\u7814\u7a76\u4e00\u4e0b[[Higher-order Functions|\u9ad8\u9636\u51fd\u6570]]\u7684\u5177\u4f53\u77e5\u8bc6\u3002","title":"Problem 7 (3 pt)"},{"location":"CS61A/Projects/Hog/#phase-3-strategies","text":"In the third phase, you will experiment with ways to improve upon the basic strategy of always rolling a fixed number of dice. First, you need to develop some tools to evaluate strategies. \u5199AI\u7b56\u7565\u54af~~","title":"Phase 3: Strategies"},{"location":"CS61A/Projects/Hog/#problem-8-2-pt","text":"Implement the make_averaged function. \u8ba1\u7b97\u67d0\u79cd\u7b56\u7565\u7684\u5e73\u5747\u5f97\u5206\u3002 def make_averaged ( original_function , trials_count = 1000 ): \"\"\"Return a function that returns the average value of ORIGINAL_FUNCTION called TRIALS_COUNT times. >>> dice = make_test_dice(4, 2, 5, 1) >>> averaged_dice = make_averaged(roll_dice, 1000) >>> averaged_dice(1, dice) 3.0 \"\"\" # BEGIN PROBLEM 8 def f ( * args ): total = 0 for i in range ( trials_count ): total += original_function ( * args ) return total / trials_count return f # END PROBLEM 8 \u8fd9\u91cc\u7684 *args \u6307\u7684\u662f original_function \u7684\u5404\u4e2a\u53c2\u6570\uff0c\u4f9d\u8d56\u7684\u662f\u9009\u62e9\u7684roll\u51fd\u6570\uff0c\u5982\u679c\u5c31\u662f\u666e\u901a\u7684 roll_dice \uff0c\u5373\u9700\u8981\u4f20\u5165 (num_rolls, dice=six_sided) \u3002 \u5982\u679c\u9700\u8981\u8c03\u7528 make_averaged \uff0c\u4e0d\u4ec5\u9700\u8981\u5b83\u81ea\u5df1\u7684\u53c2\u6570\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u8fd4\u56de\u51fd\u6570\u7684\u9ad8\u9636\u51fd\u6570\uff0c\u8fd8\u9700\u8981\u4f20\u5165f\u7684\u53c2\u6570\u3002 whatever = make_averaged ( roll_dice , 1000 \uff09 whatever ( 2 , dice ) #\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u5f62\u5f0f\uff1a whatever = make_averaged ( roll_dice , 1000 )( 2 , dice ) \u6211\u613f\u79f0\u4e4b\u4e3a\u5957\u5a03\u51fd\u6570\uff08\u5d4c\u5957\u51fd\u6570\uff09\uff0c\u5373\u7b2c\u4e8c\u4e2a\u62ec\u53f7\u524d\u5176\u5b9e\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff1a f \uff0c\u800c\u540e\u9762\u624d\u662f\u7ed9\u4ed6\u4f20\u5165\u7684\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u62ec\u53f7\u5185\u7684\u53c2\u6570\u4f1a\u5f71\u54cdf\u8fd9\u4e2a\u51fd\u6570\u7684\u51fd\u6570\u4f53\u3002 \u6211\u89c9\u5f97\u8fd8\u662f\u6709\u70b9\u4e3a\u4e86\u7528\u9ad8\u9636\u800c\u7528\u9ad8\u9636\u4e86\uff0c\u4e4b\u524d\u7684announce\u51fd\u6570\u53ef\u4ee5\u6709\u56de\u6eaf\u7684\u529f\u80fd\uff0c\u800c\u5728\u8fd9\u91cc\u4ec5\u4ec5\u662f\u6bd4\u8f83\u8d39\u8111\u5b50\u7f62\u4e86\u3002 \u4e5f\u53ea\u6709\u5230\u4e86\u8fd9\u91cc\u624d\u7a0d\u5fae\u641e\u6e05\u695a\u4e86\u4e00\u70b9\u9ad8\u9636\u51fd\u6570\u7684\u4e8b\u60c5\u3002\u3002 \u4e0d\u8fc7\u7ee7\u7eed\u524d\u8fdb\u5427\uff0c \u53ea\u8981\u4e0d\u65ad\u524d\u8fdb\uff0c\u9053\u8def\u5c31\u4f1a\u4e0d\u65ad\u5ef6\u4f38\u3002","title":"Problem 8 (2 pt)"},{"location":"CS61A/Projects/Hog/#problem-9-2-pt","text":"Implement the max_scoring_num_rolls function, which runs an experiment to determine the number of rolls (from 1 to 10) that gives the maximum average score for a turn. Your implementation should use make_averaged and roll_dice . \u5199 max_scoring_num_rolls \uff0c\u5373\u662f\u8c03\u7528\u4e4b\u524d\u7684\u51fd\u6570\u6765\u4f30\u8ba1\u672c\u6b21\u4e22\u591a\u5c11\u9ab0\u5b50\u53ef\u4ee5\u83b7\u5f97\u6700\u5927\u7684\u671f\u671b\u5206\u6570\u3002 def max_scoring_num_rolls ( dice = six_sided , trials_count = 1000 ): \"\"\"Return the number of dice (1 to 10) that gives the highest average turn score by calling roll_dice with the provided DICE a total of TRIALS_COUNT times. Assume that the dice always return positive outcomes. >>> dice = make_test_dice(1, 6) >>> max_scoring_num_rolls(dice) 1 \"\"\" max = 0 index = 1 for i in range ( 1 , 11 ): average = make_averaged ( roll_dice , trials_count )( i , dice ) if average > max : index , max = i , average return index \u51fd\u6570\u4f53\u672c\u8eab\u6bd4\u8f83\u7b80\u5355\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u6b63\u786e\u8c03\u7528\u9ad8\u9636\u51fd\u6570\uff0c\u5982\u540c\u4e0a\u9762\u8bb2\u8ff0\u7684\u3002","title":"Problem 9 (2 pt)"},{"location":"CS61A/Projects/Hog/#problem-10-1-pt","text":"A strategy can try to take advantage of the Picky Piggy rule by rolling 0 when it is most beneficial to do so. Implement picky_piggy_strategy , which returns 0 whenever rolling 0 would give at least cutoff points and returns num_rolls otherwise. \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8c03\u7528 picky_piggy \u7136\u540e\u548c cutoff \u6bd4\u8f83\u5373\u53ef\u3002 def picky_piggy_strategy ( score , opponent_score , cutoff = 8 , num_rolls = 6 ): \"\"\"This strategy returns 0 dice if that gives at least CUTOFF points, and returns NUM_ROLLS otherwise. \"\"\" return 0 if picky_piggy ( opponent_score ) >= cutoff else num_rolls","title":"Problem 10 (1 pt)"},{"location":"CS61A/Projects/Hog/#problem-11-1-pt","text":"A strategy can also take advantage of the Hog Pile rules. The Hog Pile strategy always rolls 0 if doing so triggers the rule. In other cases, it rolls 0 if rolling 0 would give at least cutoff points. Otherwise, the strategy rolls num_rolls . def hog_pile_strategy ( score , opponent_score , cutoff = 8 , num_rolls = 6 ): \"\"\"This strategy returns 0 dice when this would result in Hog Pile taking effect. It also returns 0 dice if it gives at least CUTOFF points. Otherwise, it returns NUM_ROLLS. \"\"\" return 0 if picky_piggy ( opponent_score ) + score == opponent_score or picky_piggy_strategy ( score , opponent_score , cutoff , num_rolls ) == 0 else num_rolls \u4e3a\u4e86\u4e00\u884c\u5199\u4e0b\u727a\u7272\u4e86\u5f88\u591a\u54c8\u54c8\u3001\u3002","title":"Problem 11 (1 pt)"},{"location":"CS61A/Projects/Hog/#optional-problem-12-0-pt","text":"Implement final_strategy , which combines these ideas and any other ideas you have to achieve a high win rate against the baseline strategy. \u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u7b56\u7565\uff0c\u8fd8\u6709\u4e2a\u5efa\u597d\u7684 run_experiments() \u53ef\u4ee5\u8c03\u7528\u6765\u6d4b\u8bd5\u80dc\u7387\u3002 \u4f46\u662f\u6211\u65f6\u95f4\u6709\u9650\uff08\u8fdb\u5ea6\u5dee\u4e86\u592a\u591a\uff09\u6240\u4ee5\u5c31\u7b80\u5355\u5199\u4e86\u4e00\u4e0b\uff0c\u80dc\u7387\u7565\u5fae\u6bd40.5\u9ad8\u3001\u3001 \u5b8c\u7ed3\u6492\u82b1~~ ![[Pasted image 20220129120753.png]]","title":"Optional: Problem 12 (0 pt)"},{"location":"CS61A/Projects/Projects/","text":"Projects \u00b6 [[CS61A]] type: folder_brief_live","title":"Projects"},{"location":"CS61A/Projects/Projects/#projects","text":"[[CS61A]] type: folder_brief_live","title":"Projects"},{"location":"CS61A/Wiki/Call%20expressions/","text":"[[Wiki]] \u7ec4\u6210 is an expression that involves a function call. From CS61A Wiki. from operator import add , mul add ( mul ( 2 , 3 ), 1 ) 7 evaluate operator of add(mul(2, 3), 1) and find that it is function add evaluate operand mul(2, 3) evaluate operator mul and find that it is function \\(m u l\\) evaluate operand 2 (primitive) evaluate operand 3 (primitive) apply function mul to 2 and 3 , returns 6 evaluate operand 1 (primitive) apply function add to 6 and 1 , returns 7 \u5373\u8c03\u7528add\u7d2f\u52a0\u51fd\u6570\uff0c\u4ee5\u53camul\u7d2f\u4e58\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u53c2\u6570\u4f9d\u6b21\u505a\u52a0\u548c\u6216\u8005\u4e58\u79ef\uff0ca sinple function right?","title":"Call expressions"},{"location":"CS61A/Wiki/Conditional%20statements/","text":"[[Wiki]]","title":"Conditional statements"},{"location":"CS61A/Wiki/Docstring/","text":"[[Wiki]] def\u884c\u4e0b\u7528\u4e8e\u89e3\u91ca\u51fd\u6570\u7528\u9014\u7684\u8bed\u53e5 \u5982\u4e0b\uff1a \u53ef\u4ee5\u5199\uff1a * \u51fd\u6570\u7528\u9014 * \u8f93\u51fa\u6837\u4f8b\uff08[[Doctest]]\uff09 * \u6ca1\u7f16\u5199\u5b8c\u6210\u65f6\u7528\u4e8e\u63cf\u8ff0\u7406\u60f3\u7684\u60c5\u51b5 \u603b\u4e4b==\u60f3\u5199\u4ec0\u4e48\u5199\u4ec0\u4e48==\uff0c\u670d\u52a1\u4e8e\u7f16\u7a0b\u8fc7\u7a0b\u3002","title":"Docstring"},{"location":"CS61A/Wiki/Doctest/","text":"[[Wiki]] \u6d4b\u8bd5\u6837\u4f8b ![[Pasted image 20220119133710.png]]","title":"Doctest"},{"location":"CS61A/Wiki/Iteration/","text":"[[wiki]] \u6700\u559c\u6b22\u7684\u8fed\u4ee3\uff0c\u4e4b\u540e\u53ef\u80fd\u4f1a - [ ] \u5199\u4e00\u7bc7\u5173\u4e8e\u8fed\u4ee3\u7684\u6587\u7ae0[[\u5f85\u529e\u4e8b\u9879]] ![[\u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u8f6c\u6362]]","title":"Iteration"},{"location":"CS61A/Wiki/Placeholder/","text":"[[Wiki]] \u5f62\u53c2\u53ef\u4ee5\u5199\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5728\u8c03\u7528\u65f6\u5982\u679c\u6ca1\u6709\u7ed9\u5176\u8d4b\u503c\u5219\u4f20\u5165\u5360\u4f4d\u7b26\u7684\u503c ![[Pasted image 20220119134248.png]]","title":"Placeholder"},{"location":"CS61A/Wiki/Recursion/","text":"[[Wiki]] 2022-02-08 Recursive Functions \u00b6 ![[Recursive Functions]] \u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u8f6c\u6362 \u00b6 ![[\u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u8f6c\u6362]] Tree Recursion \u00b6 CS61A,Lec09:[[Lecture09#Tree Recursion|Tree Recursion]]","title":"Recursion"},{"location":"CS61A/Wiki/Recursion/#recursive-functions","text":"![[Recursive Functions]]","title":"Recursive Functions"},{"location":"CS61A/Wiki/Recursion/#_1","text":"![[\u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u8f6c\u6362]]","title":"\u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u8f6c\u6362"},{"location":"CS61A/Wiki/Recursion/#tree-recursion","text":"CS61A,Lec09:[[Lecture09#Tree Recursion|Tree Recursion]]","title":"Tree Recursion"},{"location":"CS61A/Wiki/Recursive%20Functions/","text":"[[Wiki]] 2022-02-08 \u7279\u6027 \u00b6 def\u8bed\u53e5\u548c\u5176\u4ed6\u51fd\u6570\u76f8\u4f3c \u6709\u5bf9\u4e8e \u5143\u4e8b\u4ef6\uff08\u57fa\u672c\u60c5\u51b5 base cases\uff09 \u7684\u5224\u65ad \u5bf9\u4e8e\u5143\u4e8b\u4ef6\u5219\u65e0\u9700\u518d\u6b21\u9012\u5f52\u8c03\u7528","title":"Recursive Functions"},{"location":"CS61A/Wiki/Recursive%20Functions/#_1","text":"def\u8bed\u53e5\u548c\u5176\u4ed6\u51fd\u6570\u76f8\u4f3c \u6709\u5bf9\u4e8e \u5143\u4e8b\u4ef6\uff08\u57fa\u672c\u60c5\u51b5 base cases\uff09 \u7684\u5224\u65ad \u5bf9\u4e8e\u5143\u4e8b\u4ef6\u5219\u65e0\u9700\u518d\u6b21\u9012\u5f52\u8c03\u7528","title":"\u7279\u6027"},{"location":"CS61A/Wiki/The%20Luhn%20Algorithm/","text":"[[Wiki]] 2022-02-08 From wikipedia: http://en.wikipedia.org/wiki/Luhn_algorithm Wiki \u00b6 From the rightmost digit,which is the check digit,moving left,double the value of every second digit; if product of this doubling operation is greater than 9 (e.g.\uff0c7*2 = 14), then sum the digits of the products (e.g.\uff0c10: 1+0= 1\uff0c14: 1+ 4 = 5). Take the sum of all the digits. ![[Pasted image 20220208191654.png]] \u6b63\u786e\u7684\u6570\u5b57\u4f1a\u662f10\u7684\u500d\u6570","title":"The Luhn Algorithm"},{"location":"CS61A/Wiki/The%20Luhn%20Algorithm/#wiki","text":"From the rightmost digit,which is the check digit,moving left,double the value of every second digit; if product of this doubling operation is greater than 9 (e.g.\uff0c7*2 = 14), then sum the digits of the products (e.g.\uff0c10: 1+0= 1\uff0c14: 1+ 4 = 5). Take the sum of all the digits. ![[Pasted image 20220208191654.png]] \u6b63\u786e\u7684\u6570\u5b57\u4f1a\u662f10\u7684\u500d\u6570","title":"Wiki"},{"location":"CS61A/Wiki/Wiki/","text":"Wiki \u00b6 [[CS61A]] type: folder_brief_live","title":"Wiki"},{"location":"CS61A/Wiki/Wiki/#wiki","text":"[[CS61A]] type: folder_brief_live","title":"Wiki"},{"location":"CS61A/Wiki/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%BB%BA%E5%87%BD%E6%95%B0/","text":"[[Wiki]] \u4f7f\u7528\u81ea\u5efa\u51fd\u6570\uff0c\u4f1a :: \uff081\uff09\u521b\u5efa\u51fa\u4e00\u4e2a\u65b0\u7684\u5b50\u6846\u67b6\uff0c\u79f0\u4e3alocal frame\uff0c\u5f62\u540cglobal frame \uff082\uff09\u9996\u5148\u4f1a\u628a\u4f20\u5165\u7684\u6570\u503c\u548c\u5bf9\u5e94\u7684\u5f62\u53c2\u7ed1\u5b9a \uff083\uff09\u5176\u6b21\u4f1a\u4f7f\u7528\u8fd9\u4e9b\u5f62\u53c2\u6267\u884c\u51fd\u6570\u4f53 \u5f53\u51fd\u6570\u4f53\u6267\u884c\u65f6\uff0c\u9700\u8981\u7528\u5230\u67d0\u53d8\u91cf\uff0c\u5148\u5728\u5f53\u524d\u7684\u6846\u67b6\uff08local frame\uff09\u4e2d\u641c\u7d22\uff0c\u6ca1\u6709\u7684\u8bdd\u518d\u53bb\u6bcdframe\uff08global frame\uff09\u627e\u3002","title":"\u4f7f\u7528\u81ea\u5efa\u51fd\u6570"},{"location":"CS61A/Wiki/%E9%80%92%E5%BD%92%E5%92%8C%E9%9D%9E%E9%80%92%E5%BD%92%E7%9A%84%E8%BD%AC%E6%8D%A2/","text":"[[Wiki]] 2022-02-08 \u975e\u9012\u5f52->\u9012\u5f52\uff1a - \u8ba4\u8bc6\u5230\uff1a\u975e\u9012\u5f52\u662f\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u7684\u9012\u5f52\u3002 - \u60f3\u6cd5\uff1a\u5faa\u73af\u65f6\u7684\u72b6\u6001\u6216\u8bb8\u53ef\u4ee5\u4f5c\u4e3a\u4f20\u5165\u9012\u5f52\u7684\u53c2\u6570\uff1f","title":"\u9012\u5f52\u548c\u975e\u9012\u5f52\u7684\u8f6c\u6362"},{"location":"CS61A/Wiki/assets/Statements/","text":"[[wiki]] ![[Pasted image 20220119134902.png]] ![[Pasted image 20220119135255.png]]","title":"Statements"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/","text":"\u4e00\u79cd\u96f6\u70ed\u731d\u706d\u7684\u8367\u5149\u7c89 Yoon Hwa Kim \\(^{1}\\) , Paulraj Arunkumar \\(^{1}\\) , Bo Young Kim \\(^{1}\\) , Sanjith Unithrattil \\(^{1}\\) , Eden \\(Kim ^{1}\\) , Su-Hyun Moon \\(^{1}\\) , Jae Young Hyun \\(^{1,2}\\) , Ki Hyun Kim \\(^{2 \\dagger}\\) , Donghwa Lee \\(^{1}\\) , Jong-Sook Lee \\(^{1}\\) and Won Bin Im \\(^{1 \\star}\\) \u6458\u8981 \u00b6 \u8367\u5149\u8f6c\u6362\u767d\u5149LED (pc-WLEDs) \u662f\u6548\u7387\u8f83\u9ad8\u7684\u5149\u6e90\uff0c\u7528\u4e8e\u7167\u660e\u3001\u9ad8\u7ea7\u663e\u793a\u548c\u7535\u5b50\u8bbe\u5907\u4e2d\u3002\u5173\u4e8epc-WLEDs\u7684\u4e00\u5927\u96be\u9898\u662f\u70ed\u731d\u706d\uff0c\u5728\u5927\u529f\u7387LED\u8fd0\u4f5c\u65f6\uff0c\u4f1a\u968f\u7740\u6e29\u5ea6\u4e0a\u5347\u4ea7\u751f\u53d1\u5c04\u635f\u5931\u3002\u672c\u6587\u4e2d\u5408\u6210\u4e86\u4e00\u79cd\u84dd\u8272\u53d1\u5149 \\(Na _{3-2 x} Sc _{2}\\left( PO _{4}\\right)_{3}\\) \uff1a \\(x E u ^{2+}\\) \u8367\u5149\u7c89 \\(\\left(\\lambda_{ em }=453 nm \\right)\\) \u5728 \\(200^{\\circ} C\\) \u8be5\u8367\u5149\u7c89\u5728200\u2103\u65f6\u4e5f\u4e0d\u5b58\u5728\u70ed\u731d\u706d\u73b0\u8c61\u3002\u8fd9\u79cd\u96f6\u70ed\u731d\u706d\u73b0\u8c61\u6e90\u4e8e\u8367\u5149\u7c89\u5177\u6709\u8865\u507f\u53d1\u5c04\u635f\u5931\u7684\u80fd\u529b\uff0c\u5e76\u4e14\u6e29\u5ea6\u5347\u9ad8\u4e5f\u53ef\u4ee5\u7ef4\u6301\u53d1\u5149\u3002\u8fd9\u4e9b\u53d1\u73b0\u53ef\u4ee5\u7528\u591a\u6676\u578b\u4fe2\u9970,\u4ee5\u53ca\u5728\u6e29\u5ea6\u5347\u9ad8\u65f6\u70ed\u6fc0\u6d3b\u7f3a\u9677\u80fd\u7ea7\u7684\u7535\u5b50-\u7a7a\u7a74\u5bf9\u5230 \\(Eu ^{2+} 5 d\\) \u5e26\u53ef\u80fd\u7684\u80fd\u91cf\u4f20\u9012\u6765\u89e3\u91ca\u3002\u6211\u4eec\u7684\u6210\u679c\u5f00\u542f\u4e86\u5bf9\u9ad8\u529f\u7387LED\u7528\u96f6\u70ed\u731d\u706d\u8367\u5149\u7c89\u7684\u7814\u7a76\u3002 \u8367\u5149\u8f6c\u6362\u767d\u5149LED(pc-WLEDs) \\(^{1}\\) \u5df2\u7ecf\u56e0\u5176\u73af\u4fdd\u3001\u575a\u56fa\u4ee5\u53ca\u5bff\u547d\u957f\u7684\u7279\u6027\u8d70\u8fdb\u4e86\u5343\u5bb6\u4e07\u6237 \\(^{2}\\) \u3002\u7136\u800c\uff0c\u57fa\u4e8e\u84dd\u8272LED\u6fc0\u53d1\u7684 \\(Y _{3} Al _{5} O _{12}: Ce ^{3+}\\) \u7531\u4e8e\u7ea2\u5149\u5c11\u800c\u663e\u8272\u6027\u5dee\u3002\u5177\u6709\u4e09\u8272\u8367\u5149\u7c89\u7684\u8fd1\u7d2b\u5916LED\u56e0\u5176\u9ad8\u663e\u8272\u6027\u4ee5\u53ca\u4f18\u5f02\u7684\u989c\u8272\u5747\u5300\u6027\u800c\u500d\u53d7\u79d1\u7814\u5173\u6ce8\u3002\u7136\u800c\uff0c\u5f00\u53d1\u5177\u6709\u9ad8\u4eae\u5ea6\u548c\u70ed\u7a33\u5b9a\u6027\u7684\u8367\u5149\u7c89\u662f\u4e00\u4e2a\u5173\u952e\u6311\u6218 \\(^{4-6}\\) .\u5173\u4e8e\u540e\u8005\uff0cLED\u5de5\u4f5c\u65f6\u7684\u4ea7\u70ed \\(\\left(\\sim 200^{\\circ} C \\right)\\) \u4f1a\u5bfc\u81f4\u53d1\u5c04\u635f\u5931\uff0c\u901a\u5e38\u5f52\u56e0\u4e8e\u6fc0\u6d3b\u5242\u57fa\u6001\u6fc0\u53d1\u7535\u5b50\u7684\u975e\u8f90\u5c04\u5f1b\u8c6b\u3002\u8fd9\u79cd\u6240\u8c13\u7684\u70ed\u731d\u706d\uff08TQ\uff09\u4f1a\u4e25\u91cd\u5f71\u54cdPC-WLEDs\u7684\u6548\u7387\u5e76\u6539\u53d8\u767d\u5e73\u8861\u3002 TQ\u7528\u7ec4\u6001\u5750\u6807\u56fe\u89e3\u91ca\uff0c\u5176\u4e2d\u6fc0\u53d1\u53d1\u5149\u4e2d\u5fc3\u901a\u8fc7\u58f0\u5b50\u76f8\u4e92\u4f5c\u7528\u70ed\u6fc0\u6d3b\uff0c\u7136\u540e\u901a\u8fc7\u6fc0\u53d1\u6001\u4e0e\u57fa\u6001\u7684\u4ea4\u53c9\u70b9\u91ca\u653e \\(^{7-9}\\) \u3002\u8fd9\u79cd\u70ed\u6fc0\u6d3b\u7684\u975e\u8f90\u5c04\u8dc3\u8fc1\u51e0\u7387\u5f3a\u70c8\u4f9d\u8d56\u4e8e\u6e29\u5ea6\u3002\u56e0\u6b64\uff0cTQ\u53d6\u51b3\u4e8e\u57fa\u8d28\u7684\u7ed3\u6784\u53c2\u6570\uff0c\u5373\u521a\u6027\u952e\u5408\u7f51\u7edc\u8868\u793a\u7684\u7ed3\u6784\u521a\u5ea6\u548c\u952e\u5408\u5f3a\u5ea6\uff0c\u8fd9\u53ef\u4ee5\u6781\u5927\u5730\u51cf\u5c11\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u4ea7\u751f\u7684\u53d1\u5c04\u635f\u5931 \\(^{10}\\) \u3002\u4e00\u822c\u6765\u8bf4\uff0c\u77f3\u69b4\u77f3\u3001\u6c2e\u5316\u7269 \\(^{11,12}\\) \u548c\u78f7\u9178\u76d0 \\(^{4}\\) \u662f\u70ed\u7a33\u5b9a\u7684\u8367\u5149\u57fa\u8d28\uff0c\u7531\u4e8e\u5176\u5bc6\u96c6\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u5177\u6709\u4f18\u5f02\u7684\u7ed3\u6784\u521a\u6027\u3002\u5546\u4e1a\u4e0a\u53ef\u7528\u7684\u7684\u4f4e\u70ed\u731d\u706d\u8367\u5149\u7c89\u6709 \\(\\text{YAG:Ce }^{3+},\\text{(Sr,Ca)AlSiN} _{3}:\\text{Eu}^{2+}\\) \u548c \\(\\text{SrSi}_{2} \\text{O}_{2}\\text{N} _{2}:\\text{Eu}^{2+}\\) , \u5728 \\(200^{\\circ} C\\) \u65f6\u7684\u53d1\u5c04\u635f\u5931\u5206\u522b\u662f \\(12 \\%, 18 \\%\\) and \\(20 \\%\\) \\(^{13,14}\\) \u3002\u5df2\u7ecf\u91c7\u7528\u4e86\u5404\u79cd\u6280\u672f\u6765\u63d0\u9ad8\u70ed\u7a33\u5b9a\u6027\uff0c\u4f8b\u5982\u8367\u5149\u7c89\u7684\u56fa\u6eb6\u4f53\u3001\u5728\u8367\u5149\u7c89\u4e0a\u9676\u74f7\u6d82\u5c42\u548c\u73bb\u7483\u9676\u74f7\u8367\u5149\u7c89\uff0c\u4f46\u662f\u5b83\u4eec\u88ab\u8bc1\u660e\u5728\u6700\u5c0f\u5316TQ\u65b9\u9762\u4e0d\u592a\u6709\u6548\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5408\u6210\u4e86\u4e00\u79cd \\(\\text{Na}_{3-2 x}\\text{Sc} _{2}(\\text{PO}_{4})_{3}: x \\text{Eu} ^{2+}( \\text{NSPO : x Eu} ^{2+})\\) \u84dd\u8272\u8367\u5149\u7c89\uff0c\u53ef\u4ee5\u5728\u6700\u9ad8 \\(200^{\\circ} C\\) \u6ca1\u6709\u70ed\u731d\u706d\u73b0\u8c61\u3002\u8fc7\u5269\u7684\u70ed\u80fd\u88ab\u4e0e \\(Na ^{+}\\) \u65e0\u5e8f\u5316\u76f8\u5173\u7684\u7ed3\u6784\u8f6c\u53d8\u5229\u7528\uff0c\u5f62\u6210\u7684\u7f3a\u9677\u80fd\u7ea7\u4f5c\u4e3a\u7535\u5b50\u4fd8\u83b7\u4e2d\u5fc3\uff0c\u6709\u5229\u4e8e\u4ece\u5305\u542b\u7535\u5b50-\u7a7a\u7a74\u5bf9\u7684\u4fd8\u83b7\u5230 \\(\\text{Eu} ^{2+}\\) \u7684\u80fd\u91cf\u8f6c\u79fb\u3002\u7531\u975e\u8f90\u5c04\u8dc3\u8fc1\u5f15\u8d77\u7684\u53d1\u5c04\u635f\u8017\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u53cd\u673a\u5236\u6765\u6291\u5236\uff0c\u56e0\u6b64\u80fd\u591f\u968f\u7740\u6e29\u5ea6\u5347\u9ad8\u7ef4\u6301\u53d1\u5c04\u5f3a\u5ea6\uff0c\u8981\u8868\u793a\u8fd9\u79cd\u8367\u5149\u7c89\u7684\u96f6\u70ed\u731d\u706d\u7279\u6027\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u63cf\u8ff0\u4e3a\u4e00\u79cd\u201c\u81ea\u6108\u201d\u7684\u6750\u6599\u3002 \u7ed3\u6784\u8868\u5f81 \u00b6 \u78f7\u9178\u76d0\u57fa\uff08Na\uff09\u8d85\u79bb\u5b50\u5bfc\u4f53\uff08NASICON\uff09\u662f\u9ad8\u6e29\u79bb\u5b50\u5bfc\u4f53\u548c\u591a\u5f62\u6750\u6599\uff0c\u7531\u4e8e\u9633\u79bb\u5b50\u65e0\u5e8f\u5316\u5bfc\u81f4\u7f3a\u9677\u5f62\u6210\uff0c\u5728\u52a0\u70ed\u65f6\u53d1\u751f\u7ed3\u6784\u8f6c\u53d8\u3002\u5178\u578b\u7684\u57fa\u4e8eNASICON\u7684 \\(A_{3} M_{2}\\left( PO _{4}\\right)_{3}\\) \u65cf \\((A= Li\\) \u548c \\(Na ; M= Cr\\) , \\(Fe\\) , \u548c \\(Sc)\\) \u7ed3\u6676\u4e3a\u5355\u659c\u7ed3\u6784\uff0c\u5e76\u5728\u51b7\u5374\u65f6\u663e\u793a\u53ef\u9006\u7ed3\u6784\u8f6c\u53d8 \\(^{20,21}\\) \u3002\u78f7\u9178\u76d0\u57faNASICON\u88ab\u5f00\u53d1\u4f5c\u4e3a\u8367\u5149\u7c89\u7684\u57fa\u4f53\uff0c\u4f46\u662f\u53d7\u7d2f\u4e8e\u70ed\u731d\u706d\u73b0\u8c61 \\(^{22,23}\\) \u3002\u800cNSPO\u6613\u4e8e\u7ed3\u6784\u4fee\u9970\uff0c\u7279\u522b\u662f\u5728\u4f4e\u6e29\u4e0b \\(\\left(\\leq 165^{\\circ} C \\right)\\) \uff0c\u56e0\u6b64\u5c06\u5176\u4f5c\u4e3a\u8367\u5149\u7c89\u57fa\u8d28\u3002\u7f3a\u9677\u7684\u5f62\u6210\u662f\u968f\u7740\u6e29\u5ea6\u5347\u9ad8\u800c\u4e0d\u662f\u975e\u8f90\u5c04\u8fc7\u7a0b\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u70ed\u80fd\u7684\u5229\u7528\u3002 \u7ed3\u5408X\u5c04\u7ebf\u884d\u5c04\uff08XRD\uff09\u548c\u4e2d\u5b50\u884d\u5c04\u7684\u7ed3\u679c\u5bf9 \\(NSPO : x Eu ^{2+}\\) \u7684\u7ed3\u6784\u6539\u8fdb\u3002\u8367\u5149\u7c89\u4ee5\u5355\u659cC2/c\u7ed3\u6784\u7ed3\u6676\uff08\u88681\uff09\uff0c\u5e76\u663e\u793a\u51fa\u4e09\u79cd\u4e0d\u540c\u7684\u6676\u4f53\u94a0\u4f4d\u70b9-\u5373\u5206\u522b\u4e0e\u516d\u3001\u4e03\u548c\u516b\u79cd\u6c27\u914d\u4f4d\u7684Na1\u3001Na2\u548cNa3\uff08\u56fe1a\u3001b\uff09\uff0c\u8fd9\u4e0e\u6587\u732e \\(^{24}\\) \u4e00\u81f4\u3002\u5408\u6210\u7684NSPO\u4e3a\u5355\u76f8\uff0c\u65e0\u6742\u8d28\u8ff9\u8c61\uff08\u56fe1c\u3001d1c\u3001d\uff09\uff0c\u4e14\u94a0\u79bb\u5b50\u548c\u7a7a\u4f4d\u5177\u6709\u957f\u7a0b\u6709\u5e8f\u6027 \\(^{25}\\) \uff08\u8865\u5145\u88682\uff09\u3002\u5728\u5ba4\u6e29\u4ee5\u4e0a\uff0c\u94a0\u79bb\u5b50\u7531\u4e8e\u4e0e\u5f62\u6210\u521a\u6027\u9aa8\u67b6\u7684\u79bb\u5b50\u5f62\u6210\u5f31\u952e\u800c\u83b7\u5f97\u9ad8\u8fc1\u79fb\u7387\u548c\u79bb\u5b50\u65e0\u5e8f\u5316\u3002\u7531\u4e8e \\(Eu ^{2+}\\) \u548c\u94a0\u79bb\u5b50\u5177\u6709\u76f8\u4f3c\u7684\u9633\u79bb\u5b50\u5927\u5c0f\uff0c\u56e0\u6b64 \\(Eu ^{2+}\\) \u53ef\u4ee5\u5360\u636e\u4e09\u4e2a\u6676\u4f53\u94a0\u4f4d\u70b9\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\u57fa\u8d28\u4e2d\u7684\u94a0\u65e0\u5e8f\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u589e\u52a0\uff0c\u56e0\u6b64\u53ef\u80fd\u5f71\u54cdEu\u6fc0\u6d3b\u5242\u7684\u5149\u5b66\u6027\u8d28 \\(^{26}\\) \u3002 \u5149\u5b66\u548c\u96f6\u70ed\u731d\u706d\u6027\u80fd \u00b6 \\(\\text{NSPO:xEu }^{2+}\\) \u4e2d \\(\\text{Eu}^{2+}\\) \u7684\u6700\u4f73\u63ba\u6742\u91cf\u5728 \\(3 mol \\%(x=0.03)\\) \u5185\u90e8\u91cf\u5b50\u6548\u7387\uff08QE\uff09\u5728\u5ba4\u6e29\u4e3a\u65f6\u4e3a74%\u3002\u901a\u8fc7\u6539\u53d8\u5408\u6210\u6761\u4ef6\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fdb\u4e00\u6b65\u7684\u6539\u8fdb\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684\u53d1\u5c04\u5149\u8c31\u663e\u793a\uff0c\u5728 \\(370 nm\\) \u6fc0\u53d1\u4e0b\uff0c\u7531\u4e8e \\(\\text{Eu}^{2+}\\) \u76845d-4f\u8dc3\u8fc1\uff0c\u5728 \\(453 nm\\) \u5904\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u5bbd\u84dd\u8272\u53d1\u5c04\u5e26\uff0c\u534a\u6700\u5927\u5bbd\u5ea6\u4e3a \\(\\sim 44 nm\\) \uff08\u56fe2b\uff09\u3002\u5728\u8fd1\u7d2b\u5916\uff08\u8fd1\u7d2b\u5916\uff1b \\(280-400 nm\\) \uff09\u4e2d\u7684\u5f3a\u5438\u6536\u6709\u5229\u4e8e\u5728\u8fd1\u7d2b\u5916LED\u6fc0\u53d1\u4e0b\u8fdb\u884c\u5f00\u53d1\u3002 \\(\\text{NSPO:0.07Eu }^{2+}\\) \u5728 \\(\\lambda_{ ex }=370 nm\\) / \\(200^{\\circ} C\\) \u4e0b\uff0c\u8868\u73b0\u51fa\u70ed\u7a33\u5b9a\u53d1\u5c04\uff0c\u65e0\u53d1\u5c04\u635f\u8017\u3002\uff08\u56fe2c\uff09\u56fe2d\u663e\u793a\u4e86 \\(\\text{NSPO:0.07Eu }^{2+}\\) \u4e0e\u6e29\u5ea6 \\(25-200^{\\circ} C\\) \u533a\u95f4\u5185\u70ed\u731d\u706d\u8f83\u4f4e\u7684\u5e02\u552eLED\u8367\u5149\u7c89\u76f8\u6bd4\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027\u53d1\u5c04\u5f3a\u5ea6\u3002\u6700\u70ed\u7a33\u5b9a\u7684\u8367\u5149\u7c89\uff0c \\(\\text{CaAlSiN}_{3}:\\text{Eu}^{2+}\\) \u548c \\(\\text{YAG:Ce}^{3+}\\) \uff0c\u5b58\u57288%\u7684\u53d1\u5c04\u635f\u5931\uff1b\u63a5\u4e0b\u6765\u662f \\(\\text{K}_{2} \\text{SiF} _{6}\\text{:Mn} ^{4+}, \\text{Sr} _{3} \\text{MgSi} _{2} \\text{O} _{8}\\text{:Eu} ^{2+}\\) \u548c \\(\\text{Sr}_{2}\\text{SiO}_{4}\\text{:Eu}^{2+}\\) \u5b58\u572815%\uff0c16%\u548c25%\u7684\u53d1\u5c04\u635f\u5931\u3002\u4e0e\u4e4b\u76f8\u6bd4\uff0c \\(\\text{NSPO:0.07Eu }^{2+}\\) \u8367\u5149\u7c89\u6ca1\u6709\u968f\u7740\u6e29\u5ea6\u5347\u9ad8\u4ea7\u751f\u53d1\u5c04\u635f\u5931\u3002 \\(\\text{NSPO:xEu }^{2+}\\) \u7684\u591a\u6001\u6027\u53ca\u5176\u7f3a\u9677\u5f62\u6210 \u00b6 \\(\\text{NSPO:xEu }^{2+}\\) \u7684\u9ad8\u6e29XRD\u63ed\u793a\u4e86\u968f\u6e29\u5ea6\u5347\u9ad8\u7684\u4e09\u79cd\u6676\u578b\u7684\u5f62\u6210\uff0c\u5373\uff1a \\(\\alpha\\) \u76f8\uff08\u5355\u659c\uff09\u3001 \\(\\beta\\) \u76f8\uff08\u516d\u89d2\u5f62\uff09\u548c \\(\\gamma\\) \u76f8\uff08\u516d\u89d2\u5f62\uff09 \\(^{21}\\) \uff08\u56fe3a\uff09\u3002\u5728 \\(T_{a-\\beta}=\\sim 64^{\\circ} C\\) \u548c \\(T_{\\beta-\\gamma}=\\sim 165^{\\circ} C\\) \uff0c\u76f8\u4ece \\(\\alpha\\) \u76f8\u53d8\u5230 \\(\\beta\\) \u76f8\u7136\u540e\u5230 \\(\\gamma\\) \u76f8\uff08\u53c2\u8003\u6587\u732e24\uff0c27\uff09\u3002\u968f\u7740\u51b7\u5374\uff0c\u76f8\u53c8\u53d8\u56de \\(\\alpha\\) \u76f8\uff08\u5dee\u70ed\u5206\u6790\u7ed3\u679c\uff0c\u8865\u5145\u56fe1\uff09\u5728 \\(\\alpha\\) \u76f8\u4f4d\u4e2d\uff0c \\(\\sim 23^{\\circ}\\) \u5904\u7684Bragg\u5cf0\u663e\u793a\u591a\u4e2a\u91cd\u53e0\u53cd\u5c04\uff0c\u800c\u7531\u4e8e\u9ad8\u5ea6\u5bf9\u79f0\u6027\uff0c \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\u4f4d\u89c2\u5bdf\u5230\u660e\u663e\u7684\u53cc\u5cf0\uff08\u56fe3b\uff09\u3002\u5373\u4f7f \\(\\beta\\) \u76f8\u548c \\(\\gamma\\) \u76f8\u5f88\u76f8\u50cf\uff0c \\(\\gamma\\) \u76f8\u7684\u5f62\u6210\u662f\u7531\u4e8e \\(\\beta\\) \u76f8 \\(\\sim 30.6\\) \u548c \\(\\sim 47.4^{\\circ}\\) \u7684Bragg\u5cf0\u79fb\u52a8\u5230\u76f8\u6bd4\u4e8e \\(\\beta\\) \u76f8\u8f83\u4f4e\u7684Bragg\u89d2\u3002\u8fd9\u4e9b\u76f8\u53d8\u4e0e\u6676\u683c\u4e2d\u7684 \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u6709\u5173\uff0c\u56e0\u4e3a\u5728\u5408\u6210 \\(\\alpha\\) \u76f8\u4e2d\u5b58\u5728 \\(\\text{Na}\\) \u7a7a\u4f4d \\({ }^{28}\\) \u3002\u5bfc\u81f4 \\(\\text{Na} ^{+}\\) \u79bb\u5b50\u7684\u4f4d\u7f6e\u65e0\u5e8f\uff0c\u5bfc\u81f4\u7a7a\u4f4d\u6570\u91cf\u968f\u6e29\u5ea6\u589e\u52a0\uff0c\u5f62\u6210\u6709\u5229\u4e8e \\(\\text{Na} ^{+}\\) \u79bb\u5b50\u957f\u7a0b\u4f20\u8f93\u7684\u7f3a\u9677 \\(^{29,30}\\) \u3002 \u7814\u7a76\u4e86 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684\u6e29\u5ea6\u68af\u5ea6\u62c9\u66fc\u5149\u8c31\uff0c\u4ee5\u4e86\u89e3 \\(- PO _{4}\\) \u56db\u9762\u4f53\u5bf9\u79f0\u6027\u53d8\u5316\u5f15\u8d77\u7684\u7ed3\u6784\u8f6c\u53d8\uff08\u56fe3c\uff09\u3002\u5728 \\(900-1,200 cm ^{-1}\\) \u8303\u56f4\u5185\u7684\u62c9\u4f38\u6a21\u5f0f\u5206\u88c2\u5cf0\u662f\u4f4e\u5bf9\u79f0\u5355\u659c \\(\\alpha\\) \u76f8 \\({ }^{28}\\) \u3002\u6b64\u5916\uff0c\u5728 \\(250 cm ^{-1}\\) \\(- PO _{4}\\) \u6a21\u5f0f\u6bd4\u5728 \\(190 cm ^{-1}\\) \u7684Sc-O\u6a21\u5f0f\u7684\u66f4\u5bbd\u8868\u660e \\(\\alpha\\) \u76f8\u6bb5\u5b58\u5728\u53d6\u5411\u65e0\u5e8f\u3002\u901a\u8fc7\u5728 \\(\\sim 1,025 cm ^{-1}\\) \u5904\u5408\u5e76\u7684 \\(- PO _{4}\\) \u62c9\u4f38\u6a21\u5f0f\uff0c\u5728 \\(190 cm ^{-1}\\) \u5904\u8bc1\u660e\u4e86\u6709\u516d\u65b9 \\(\\beta\\) \u76f8\u7684\u5f62\u6210\u3002\u5728 \\(\\sim 413 cm ^{-1}\\) \u5904\u7684\u5f2f\u66f2\u6a21\u5f0f\u786e\u5b9a \\(\\gamma\\) \u76f8\u5728 \\(200^{\\circ} C\\) \u5904\u7684\u6f14\u5316\u3002\u9b54\u89d2\u65cb\u8f6c\u4ea4\u53c9\u8ba1\u5212\u56fa\u4f53\u6838\u78c1\u5171\u632f\u4eea\u663e\u793a\u7ed3\u679c\u4e5f\u786e\u5b9a\u4e86\u6e29\u5ea6\u5347\u9ad8\u65f6\u7684\u76f8\u53d8\uff08\u8865\u5145\u56fe2\uff09\u3002 \u968f\u6e29\u5ea6\u53d8\u5316\u7684\u963b\u6297\u8c31\u663e\u793a\uff0c \\(\\text{NSPO}\\) \u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7531\u4e8e\u76f8\u53d8\u3001 \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u3001\u7a7a\u4f4d\u6216\u7f3a\u9677\u548c\u7f3a\u9677\u6d53\u5ea6\uff0c\u7535\u5bfc\u7387\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u589e\u52a0\uff08\u56fe3d\uff09\u3002\u5728NSPO\u57fa\u8d28\u7684\u76f8\u53d8\u6e29\u5ea6 \\(\\left(\\sim 64^{\\circ} C\\right.\\) \u548c \\(\\left.\\sim 165^{\\circ} C \\right)\\) \u4e0b\u89c2\u5bdf\u5230\u660e\u663e\u7684\u7535\u5bfc\u7387\u53d8\u5316\uff08\u901a\u8fc7\u7535\u5bfc\u7387\u66f2\u7ebf\u7684\u5f2f\u66f2\uff09\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7531\u4e8e \\(\\text{Eu}^{2+}\\) \u79bb\u5b50\u5b58\u5728\u4e0b\u7684 \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u589e\u52a0\uff0c\u7535\u5bfc\u7387\u8868\u73b0\u51fa\u76f8\u5bf9\u5e73\u7a33\u7684\u53d8\u5316\u3002\u7136\u800c\uff0c\u5728NSPO\u57fa\u8d28\u4e2d\uff0c\u6676\u683c\u4e2d \\(\\text{Na} ^{+}\\) \u548c\u7a7a\u4f4d\u7684\u4e25\u683c\u987a\u5e8f\u5728\u5ba4\u6e29\u65f6\u4f1a\u5bfc\u81f4\u7535\u5bfc\u7387\u964d\u4f4e\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u7535\u5bfc\u7387\u968f\u6e29\u5ea6\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u987a\u5e8f\u4e3a \\(\\alpha\\) \u76f8\uff08\u4f4e\u7f3a\u9677\u6676\u4f53\uff09 \\(<\\) \u5f31\u65e0\u5e8f\u79bb\u5b50\u5bfc\u7535 \\(\\beta\\) \u76f8 \\(<\\) \u9ad8\u5ea6\u65e0\u5e8f\u8d85\u79bb\u5b50 \\(\\gamma\\) \u76f8\uff0c\u539f\u56e0\u5728\u4e8e\u6676\u683c\u4e2d\u589e\u52a0\u7684 \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u3002 \u5728\u8f83\u9ad8\u7684 \\(\\text{Eu}^{2+}\\) \u6d53\u5ea6 \\(\\text{NSPO:0.07Eu }^{2+}\\) \u4e0b\uff0c\u6837\u54c1\u7ecf\u5386 \\(\\text{Na} ^{+}\\) \u7684\u65e0\u5e8f-\u65e0\u5e8f\u8f6c\u53d8\uff0c\u5f62\u6210\u76f8\u5bf9\u8f83\u5c11\u7684\u7f3a\u9677\uff0c\u8fd9\u5bfc\u81f4\u968f\u6e29\u5ea6\u5347\u9ad8\u7684\u7a33\u5b9a\u53d1\u5c04\u5f3a\u5ea6\uff08\u56fe2d\uff09\u3002\u5728\u8f83\u4f4e\u7684 \\(\\text{Eu}^{2+}\\) \u6d53\u5ea6\u4e0b \\((\\text{NSPO:xEu}^{2+};\\text{x}=0.01\\text{\u548c}0.03\\) )\uff0c\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\text{Na} ^{+}\\) \u79bb\u5b50\u7684\u65e0\u5e8f\u8f6c\u53d8\u8f83\u5c11\uff0c\u8fd9\u4f1a\u4ea7\u751f\u76f8\u5bf9\u8f83\u591a\u7684\u7f3a\u9677\u3002\u6b64\u5916\uff0c\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u548c \\(\\text{Na}\\) \u7a7a\u4f4d\u7684\u589e\u52a0\u4f1a\u5bfc\u81f4\u5e26\u8d1f\u7535\u8377\u7684 \\(\\text{Na}\\) \u7a7a\u4f4d \\(\\left(V_{ Na }^{\\prime}\\right)^{28}\\) \u7684\u5f62\u6210\u3002\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c\u8fd9\u4e9b \\(V_{ Na }^{\\prime}\\) \u7a7a\u4f4d\u5b9a\u4f4d\u5728 \\(\\text{Eu}^{2+}\\) \u79bb\u5b50\u9644\u8fd1\uff0c\u5f62\u6210 \\(V_{ Na }^{\\prime}- Eu ^{2+}-V_{ Na }^{\\prime}\\) \u7f3a\u9677\u7c07\uff0c\u4f5c\u4e3a\u7535\u5b50\u4fd8\u83b7\u4e2d\u5fc3\u3002\u5176\u6570\u91cf\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\u800c\u589e\u52a0 \\({ }^{32,33}\\) \u3002 \u70ed\u91ca\u5149\uff08TL\uff09\u5149\u8c31\uff08\u56fe3e\uff09\u8bc1\u5b9e\u4e86\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\text{NSPO}\\) \u57fa\u8d28\u4e2d\u7f3a\u9677\u80fd\u7ea7\u7684\u5f62\u6210\u3002TL\u66f2\u7ebf\u663e\u793a\u4e86\u6e29\u5ea6\u8303\u56f4 \\(\\sim 65^{\\circ} C -165^{\\circ} C\\) \u548c \\(\\sim 165^{\\circ} C -250^{\\circ} C\\) \u4e2d\u7684\u4e24\u4e2a\u663e\u8457\u7f3a\u9677\u80fd\u7ea7\uff0c\u5206\u522b\u4e0e \\(\\beta\\) \u76f8\u548c \\(\\gamma\\) \u76f8\u5173\u8054\u3002 \\(\\beta\\) \u76f8\u663e\u793a\u51fa\u6bd4 \\(\\gamma\\) \u76f8\u66f4\u5f3a\u7684TL\u66f2\u7ebf\uff0c\u663e\u793a\u57fa\u8d28\u4e2d\u76f8\u5bf9\u8f83\u9ad8\u7684\u9677\u9631\u6d53\u5ea6\u6216\u7f3a\u9677\u6c34\u5e73\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c \\(\\alpha\\) \u76f8\uff08\u5ba4\u6e29\uff09\u4e5f\u8868\u73b0\u51fa\u76f8\u5f53\u5927\u7684\u7f3a\u9677\u6c34\u5e73\uff0c\u8fd9\u662f\u7531\u4e8e\u5b58\u5728\u7a7a\u4f4d \\(\\text{Na}\\) \u548c \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u3002\u7136\u800c\uff0c\u4e0e \\(\\beta\\) \u76f8\u548c \\(\\gamma\\) \u76f8\u76f8\u6bd4\uff0c\u5176\u9677\u9631\u6570\u91cf\u975e\u5e38\u5c11\uff0c\u56e0\u6b64\u5b83\u4eec\u5728TL\u5149\u8c31\u4e2d\u4e0d\u5177\u6709\u7279\u5f81\u3002\u4f7f\u7528\u4ee5\u4e0b\u8fd1\u4f3c\u516c\u5f0f\u8ba1\u7b97\u8fd9\u4e9b\u7f3a\u9677\u7684\u9677\u9631\u6df1\u5ea6\uff1a [ E_{ T }=T_{ M } / 500 ] \u5f0f\u4e2d\uff0c \\(E_{ T }\\) \u662f\u9677\u9631\u6df1\u5ea6\u7684\u70ed\u6fc0\u6d3b\u80fd\uff08\u5355\u4f4d\uff1aeV\uff09\uff0c\u8868\u793a\u9677\u9631\u80fd\u7ea7\u548c\u4e3b\u4f53\u5bfc\u5e26\u4e4b\u95f4\u7684\u80fd\u9699\uff0c \\(T_{M}\\) \u662fTL\u5cf0\u503c\u6700\u5927\u7684\u6e29\u5ea6\uff08\u4ee5\u5f00\u5c14\u6587\u8868\u793a\uff0cK\uff09 \\(^{34}\\) \u3002\u5728 \\(\\beta\\) \u76f8\u89c2\u5bdf\u5230\u4e24\u4e2a\u9677\u9631\uff0c\u5728 \\(104^{\\circ} C\\) \u548c \\(127^{\\circ} C\\) \u5904\u7684\u6d3b\u5316\u80fd\u5206\u522b\u4e3a \\(0.75 eV\\) \u548c \\(0.80 eV\\) \uff0c\u5b83\u4eec\u6784\u6210\u6d45\u9677\u9631\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5728 \\(\\gamma\\) \u76f8\u89c2\u5bdf\u5230\u5355\u4e2a\u9677\u9631\uff0c\u5728 \\(202{ }^{\\circ} C\\) \u5904\u5177\u6709 \\(0.98 eV\\) \u7684\u9ad8\u6d3b\u5316\u80fd\uff0c\u6784\u6210\u66f4\u6df1\u7684\u9677\u9631\u3002\u8fd9\u4e9b\u9677\u9631\u6709\u52a9\u4e8e\u4ece\u7f3a\u9677\u80fd\u7ea7\u5230 \\(\\text{Eu} ^{2+} 5\\text{d}\\) \u5e26\u7684\u80fd\u91cf\u8f6c\u79fb\uff0c\u8fd9\u53ef\u4ee5\u89e3\u91ca\u6e29\u5ea6\u5347\u9ad8 \\(>65^{\\circ} C\\) \u65f6\u7684\u81ea\u6108\u7279\u6027\uff08\u56fe2C\uff09\u3002 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u96f6\u70ed\u731d\u706d\u6027\u80fd \u00b6 \u56fe \\(4 a\\) \u5c55\u793a\u4e86\u5728 \\(370 nm\\) \u6fc0\u53d1\u4e0b\uff0c\u4f4e\u6d3b\u5316\u5242\u6d53\u5ea6 \\((x=0.01\\) \u548c \\(0.03)\\) \u4e0b \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u6e29\u5ea6\u4f9d\u8d56\u6027\u53d1\u5c04\u3002\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\alpha\\) \u76f8 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u53d1\u5c04\u4ecd\u7136\u4e0d\u53d7\u5f71\u54cd\u3002\u4e0e\u5ba4\u6e29\u65f6\u7684\u53d1\u5c04\u76f8\u6bd4\uff0c \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u663e\u793a\u51fa\u7ea6 \\(70\\) %\u7684\u589e\u52a0\uff0c\u800c \\(\\text{NSPO:xEu} ^{2+}\\) \\(\\beta\\) \u76f8\u5728\u9ad8\u4e8e \\(65^{\\circ} C\\) \u65f6\u589e\u52a0\u7ea6 \\(25\\) % \uff0c\u5e76\u5728\u7ea6 \\(164^{\\circ}C\\) \u65f6\u8fbe\u5230\u6700\u5927\u503c\u3002 \u53d1\u5c04\u5f3a\u5ea6\u7684\u589e\u52a0\u53ef\u80fd\u4e0e \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\u4e2d\u7f3a\u9677\u6c34\u5e73\u7684\u589e\u5f3a\u5f62\u6210\u6709\u5173\uff08TL\u7ed3\u679c\uff0c\u56fe3e\uff09\uff0c\u8fd9\u4e5f\u53cd\u6620\u5728\u6fc0\u53d1\u5149\u8c31\u4e2d\uff08\u8865\u5145\u56fe3\uff09\u3002\u56e0\u6b64\uff0c\u5728 \\(370 nm\\) \u6fc0\u53d1\u4e0b \\(\\beta\\) \u76f8\u7684\u8f83\u9ad8\u53d1\u5c04\u5f3a\u5ea6\u5f52\u56e0\u4e8e\u6d45\u7535\u5b50\u9677\u9631\u4e2d\u7684\u9ad8\u7f3a\u9677\u6d53\u5ea6\uff0c\u4fc3\u8fdb\u4e86\u4ece\u7535\u5b50\u9677\u9631\u5230 \\(\\text{Eu} ^{2+}\\) \u7684$ 5 d \\(\u5e26\u7684\u6709\u6548\u80fd\u91cf\u8f6c\u79fb\uff0c\u4ece\u800c\u5bfc\u81f4\u5176\u4ea7\u751f\u53d1\u5c04\u3002\u5c3d\u7ba1\\) \\gamma \\(\u76f8\u4e2d\u7684\u7f3a\u9677\u6d53\u5ea6\u8f83\u9ad8\uff0c\u4f46\u8f83\u6df1\u9677\u9631\u4e2d\u7f3a\u9677\u7684\u5b58\u5728\uff08TL\u7ed3\u679c\uff0c\u56fe3e\uff09\u53ef\u80fd\u5bfc\u81f4\u4ece\u9677\u9631\u5230\\) \\text{Eu} ^{2+} \\(\u7684\u5fae\u5f31\u80fd\u91cf\u8f6c\u79fb\uff0c\u4ece\u800c\u5bfc\u81f4\u7a33\u5b9a\u6216\u964d\u4f4e\u53d1\u5c04\u5f3a\u5ea6\u3002\u56e0\u6b64\uff0c\u5728\\) \\text{NSPO:xEu} ^{2+} \\(\u4e2d\uff0c\u8f83\u4f4e\u7684\u63ba\u6742\u5ea6\uff08\\) (x=0.01$ \u548c \\(0.03)\\) \uff09\uff0c\u6e29\u5ea6\u7684\u5347\u9ad8\u5bfc\u81f4\u9ad8\u6d53\u5ea6\u7684\u7f3a\u9677\uff0c\u8fd9\u4e9b\u7f3a\u9677\u4f5c\u4e3a\u7535\u5b50\u4fd8\u83b7\u4e2d\u5fc3\u6765\u5b58\u50a8\u80fd\u91cf\u5e76\u5c06\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\) \u7684% \\(5d\\) -\u5e26\u3002\u8fd9\u4e9b\u7f3a\u9677\u5bfc\u81f4\u53d1\u5c04\u589e\u52a0\uff0c\u62b5\u6d88\u4e86\u9ad8\u6e29\u4e0b\u7531\u4e8e\u975e\u8f90\u5c04\u8dc3\u8fc1\u800c\u4ea7\u751f\u7684\u901a\u5e38\u53d1\u5c04\u635f\u8017\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u8f83\u9ad8\u7684 \\(\\text{Eu} ^{2+}\\) \u6d53\u5ea6 \\((x=0.07)\\) \u4e0b\uff0c\u60c5\u51b5\u6b63\u597d\u76f8\u53cd\uff0c\u56e0\u4e3a\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c\u7f3a\u9677\u8bf1\u5bfc\u53d1\u5c04\u7684\u589e\u52a0\u5728\u6570\u91cf\u4e0a\u4e0e\u975e\u8f90\u5c04\u8dc3\u8fc1\u5f15\u8d77\u7684\u53d1\u5c04\u635f\u8017\u76f8\u540c\uff08\u56fe2d\uff09\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236 \\(\\text{Eu} ^{2+}\\) \u6d53\u5ea6\u6765\u63a7\u5236\u96f6TQ\u6027\u80fd\u3002\u8003\u8651\u5230\u7f3a\u9677\u7684\u4f5c\u7528\uff0c\u5ba4\u6e29\u7684\u6f2b\u53cd\u5c04\u5149\u8c31\uff08\u8865\u5145\u56fe4\uff09\u8bc1\u5b9e\u4e86\u7f3a\u9677\u5438\u6536\u5e26\u975e\u5e38\u63a5\u8fd1\u6fc0\u53d1\u6ce2\u957f \\((370 nm )\\) \u3002 \u53d1\u73b0\u5bfc\u81f4\u53d1\u5c04\u589e\u52a0\u7684\u7f3a\u9677\u6c34\u5e73\u7684\u5b58\u5728\u5728 \\(250^{\\circ} C\\) \u4ee5\u4e0b\u662f\u7a33\u5b9a\u7684\uff0c\u751a\u81f3\u5728\u6e29\u5ea6\u4ece \\(250^{\\circ} C\\) \u964d\u5230 \\(25^{\\circ} C\\) \u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u7a33\u5b9a\u7684\uff08\u8865\u5145\u56fe5\uff09\u3002\u5728 \\(>100^{\\circ} C\\) \u4e0b\u8fde\u7eed\u76d1\u6d4b\u7ea6 \\(90 min\\) ,\u663e\u793a\u4e86\u5176\u5728\u9ad8\u6e29\u4e0b\u5f62\u6210\u9677\u9631\u7684\u9ad8\u7a33\u5b9a\u6027\uff08\u8865\u5145\u56fe6\uff09\u3002\u9677\u9631\u7684\u9ad8\u7a33\u5b9a\u6027\u5f52\u56e0\u4e8e\u5728LED\u8fd0\u884c\u671f\u95f4\uff0c\u901a\u8fc7UV\u82af\u7247\u4e0d\u95f4\u65ad\u5730\u63d0\u4f9b\u5149\u5b50\uff0c\u9677\u9631\u4e2d\u4e0d\u65ad\u5145\u6ee1\u7535\u5b50\u3002 \u5982\u524d\u6240\u8ff0\uff0c \\(\\text{Eu} ^{2+}\\) \u79bb\u5b50\u53ef\u4ee5\u5360\u636e\u5355\u659c\u76f8\u7684\u516d\u914d\u4f4d\u3001\u4e03\u914d\u4f4d\u6216\u516b\u914d\u4f4d\u7684 \\(\\text{Na} ^{+}\\) \u4f4d\u6216\u8005\u516d\u89d2\u76f8\u7684\u516d\u914d\u4f4d\u548c\u516b\u914d\u4f4d\u3002\u5bc6\u5ea6\u6cdb\u51fd\u7406\u8bba\uff08DFT\uff09\u8ba1\u7b97\uff08\u56fe4 b-f\uff09\u8868\u660e\uff0c\u5728\u4e24\u79cd\u591a\u6676\u578b\u4e2d\uff0c \\(\\text{Eu} ^{2+}\\) \u5728\u80fd\u91cf\u4e0a\u6700\u6709\u5229\u7684\u4f4d\u7f6e\u662f\u516b\u914d\u4f4d \\((\\text{NaO} _{8}) \\text{Na}\\) \u4f4d\u7f6e\uff08\u8865\u5145\u88683\uff09\u3002\u6b64\u5916\uff0c\u4e24\u79cd\u591a\u6676\u578b\u4e2d\u7684 \\((\\text{NaO} _{8})\\) \u5177\u6709\u7c7b\u4f3c\u7684 \\(\\text{Eu} ^{2+}\\) \u5c40\u57df\u7535\u5b50 \\(d\\) \u5e26\u7ed3\u6784\uff08\u56fe4 d,f\uff09\u3002\u5728\u4e24\u79cd\u4e0d\u540c\u7684\u591a\u6676\u578b\u4e2d\uff0c\u5177\u6709\u76f8\u540c\u914d\u4f4d\u7684\u5143\u7d20\u5177\u6709\u76f8\u4f3c\u7684\u80fd\u5e26\u7ed3\u6784\uff0c\u8fd9\u5bf9\u4e8e\u4efb\u4f55\u73b0\u6709\u7684\u8367\u5149\u7c89\u6765\u8bf4\u90fd\u662f\u4e00\u79cd\u7f55\u89c1\u7684\u73b0\u8c61\u3002\u8fd9\u8868\u9762\u4e86\u7ed3\u6784\u8f6c\u53d8\u76f8\u5173\u7684 \\(\\text{Eu} ^{2+}\\) \u53d1\u5c04\u66f2\u7ebf\u968f\u6e29\u5ea6\u5347\u9ad8\u7684\u76f8\u4f3c\u6027\uff08\u56fe2c\uff09\u5f52\u56e0\u4e8e \\((\\text{NaO} _{8})\\) \u4f4d\u7f6e\u5b58\u5728 \\(\\text{Eu} ^{2+}\\) \uff0c\u5728\u591a\u6676\u578b\uff08\u5355\u659c \\(\\alpha\\) \u76f8\u548c\u516d\u65b9 \\(\\gamma\\) \u76f8\uff09\u4e2d\u5177\u6709\u76f8\u540c\u7684\u7535\u5b50 \\(d\\) \u80fd\u5e26\u7ed3\u6784\u3002 \u8367\u5149\u8870\u51cf\u66f2\u7ebf\u901a\u8fc7\u4f7f\u7528\u4ee5\u4e0b\u65b9\u7a0b\u5f0f \\(^{8}\\) \u7684\u5355\u6307\u6570\u51fd\u6570\u8fdb\u884c\u62df\u5408\uff1a [ I=A \\exp ^{-(t / \\tau)} ] \u5f0f\u4e2d\uff0c \\(I\\) \u662f\u8367\u5149\u5f3a\u5ea6\uff0c \\(A\\) \u662f\u5e38\u6570\uff0c \\(t\\) \u662f\u65f6\u95f4\uff0c \\(\\tau\\) \u662f\u6307\u6570\u5206\u91cf\u7684\u8870\u51cf\u65f6\u95f4\u3002\u7528 \\(355 nm\\) \u6fc0\u5149\u7167\u5c04\u6d4b\u91cf\u7684 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u8870\u51cf\u66f2\u7ebf\u5bf9\u6240\u6709\u591a\u6676\u578b\u8fdb\u884c\u4e86\u5355\u6307\u6570\u8870\u51cf\u62df\u5408\uff08\u56fe4 b-f\uff09\uff0c\u8868\u660e \\(\\text{Eu} ^{2+}\\) \u5360\u636e\u4e86\u4e00\u4e2a\u4f4d\u70b9\uff0c\u5728\u5355\u659c\uff08 \\(\\alpha\\) \u76f8\uff09\u548c\u516d\u65b9\uff08 \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\uff09\u591a\u6676\u578b\u4e2d\uff0c\u80fd\u91cf\u6709\u5229\u7684 \\((\\text{NaO} _{8})\\) \u4f4d\uff08\u56fe \\(4 b-f\\) \u3002 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u8870\u51cf\u65f6\u95f4\u4ece \\(25^{\\circ} C\\) \u7684 \\(0.39 \\mu\\) \u5230 \\(50^{\\circ} C , 100^{\\circ} C\\) \u7684 \\(0.40 \\mu s , 0.43 \\mu s\\) \u548c \\(0.45 \\mu s\\) \u5206\u522b\u8868\u660e\uff0c\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c\u4ece\u7f3a\u9677\u80fd\u7ea7\uff08\u65bd\u4e3b\uff09\u5230 \\(\\text{Eu} ^{2+}\\) \uff08\u53d7\u4e3b\uff09\u7684 \\(5D\\) \u5e26\u53d1\u751f\u7684\u80fd\u91cf\u8f6c\u79fb\u8fc7\u7a0b\u5bfc\u81f4\u4e86 \\(\\text{Eu} ^{2+}\\) \u6fc0\u6d3b\u5242\u7684\u66f4\u957f\u5bff\u547d \\({ }^{33}\\) \u3002\u7136\u800c\uff0c\u4e0e \\(\\beta\\) \u76f8\u6bd4\uff0c \\(\\gamma\\) \u53d1\u5c04\uff080.42 \\mu s\u5728 \\(200^{\\circ} C\\) \uff09\u5904\u7684\u5bff\u547d\u7f29\u77ed\uff0c\u4f46\u9ad8\u4e8e \\(\\alpha\\) \uff0c\u8868\u660e\u6df1\u9677\u9631\u4e2d\u88ab\u4fd8\u83b7\u7684\u7535\u5b50\uff08TL\u7ed3\u679c\uff0c\u56fe3e\uff09\u76f8\u5bf9\u96be\u4ee5\u8fdb\u884c\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\) \u7684 \\(5d\\) \u5e26\u3002\u56e0\u6b64\uff0c\u5728\u9ad8\u6e29\u4e0b\uff0c\u4ece\u7f3a\u9677\u80fd\u7ea7\u5230 \\(5d\\) \u5e26\u7684\u80fd\u91cf\u8f6c\u79fb\u5728 \\(\\beta\\) \u76f8\u66f4\u4e3a\u660e\u663e\uff0c\u5176\u6b21\u662f \\(\\gamma\\) \u76f8\u3002\u5728 \\(x=0.01\\) \u548c \\(0.07\\) \u65f6\uff0c\u89c2\u5bdf\u5230 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u8870\u53d8\u65f6\u95f4\u4e5f\u6709\u7c7b\u4f3c\u7684\u589e\u52a0\uff08\u8865\u5145\u56fe7\u548c\u8865\u5145\u88684\uff09\u3002\u8fd9\u4e9b\u7ed3\u679c\u5f3a\u70c8\u8868\u660e\uff0c\u4ece\u7f3a\u9677\u80fd\u7ea7\u5230 \\(\\text{Eu} ^{2+}\\) \u7684 \\(5d\\) \u5e26\u7684\u80fd\u91cf\u8f6c\u79fb\u5bfc\u81f4\u8367\u5149\u7c89\u53d1\u5c04\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u589e\u52a0\u6216\u7a33\u5b9a\u3002 \u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u589e\u52a0 \\((x=0.01,0.03)\\) \u548c\u7a33\u5b9a\u53d1\u5c04 \\((x=0.07)\\) \u7684\u673a\u5236\u53ef\u4ee5\u901a\u8fc7\u4e3b\u4f53\u6676\u683c\u4e2d\u7f3a\u9677\u80fd\u7ea7\u7684\u5b58\u5728\u6765\u89e3\u91ca\uff08\u56fe4h\uff09\u3002 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u5355\u659c \\(\\alpha\\) \u76f8\u7684\u5e26\u9699\u4f30\u8ba1\u4e3a \\(4.65 eV\\) \uff0c\u516d\u8fb9\u5f62 \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\u7684\u5e26\u9699\u51cf\u5c0f\u5230 \\(4.54 eV\\) \uff08\u8865\u5145\u56fe8\uff09\u3002\u8003\u8651\u5230 \\(\\text{NSPO:xEu} ^{2+}\\) \\(\\alpha\\) \u76f8\u5ba4\u6e29\u65f6\u7684\u53d1\u5c04\u7684\u8bdd\uff0c \\(\\text{Eu} ^{2+}\\) \u662f\u552f\u4e00\u7684\u5438\u6536\u548c\u53d1\u5c04\u4e2d\u5fc3\u3002\u5728 \\(370 nm\\) \u6fc0\u53d1\u4e0b \\((3.35 eV )\\) \uff0c\u6765\u81ea \\(\\text{Eu} ^{2+}\\) \u57fa\u6001\u7684\u7535\u5b50\u88ab\u63d0\u5347\u5230 \\(4 f^{6} 5 d^{1}\\) \u5e26\uff0c\u5728\u65af\u6258\u514b\u65af\u4f4d\u79fb\u540e\u5728\u84dd\u8272\u533a\u57df\u4ee5 \\(453 nm (2.74 eV )\\) \u53d1\u5c04\u3002 \u5728\u8f83\u9ad8\u6e29\u5ea6\u4e0b \\(\\left(175^{\\circ} C \\right)\\) \uff0c\u5728\u76f8\u540c\u6fc0\u53d1\u80fd\u91cf\u4e0b\uff0c \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u7684\u53d1\u5c04\u5f3a\u5ea6\u589e\u52a0\u4e86\u4e24\u500d\uff0c\u800c\u4e0d\u6539\u53d8\u53d1\u5c04\u4f4d\u7f6e\u3002\u5728 \\(175^{\\circ} C\\) \u5904\u7684\u4e24\u500d\u53d1\u5c04\u589e\u52a0\u6e90\u4e8e\u4e24\u4e2a\u72ec\u7acb\u7684\u5438\u6536\u4e8b\u4ef6\uff0c\u4e00\u4e2a\u76f4\u63a5\u5728 \\(\\text{Eu} ^{2+}\\) \u4e2d\u5fc3\uff0c\u53e6\u4e00\u4e2a\u901a\u8fc7\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\) \u4e2d\u5fc3\uff0c\u4ece\u7f3a\u9677\u80fd\u7ea7/\u9677\u9631\uff0c\u5176\u4e2d \\(\\text{Eu} ^{2+}\\) \u662f\u552f\u4e00\u7684\u53d1\u5c04\u4e2d\u5fc3\u3002\u5728\u7d2b\u5916\u6fc0\u53d1\u4e0b\uff0c\u7535\u5b50\u586b\u5145\u9677\u9631\u5e76\u5728\u4ef7\u5e26\uff08VB\uff09\u540c\u65f6\u4ea7\u751f\u7a7a\u7a74\uff0c\u4ece\u800c\u5728\u9677\u9631\u4f4d\u7f6e\u53d1\u751f\u5438\u6536\u4e8b\u4ef6\u3002\u8fd9\u4e9b\u4ece\u4ef7\u5e26\u6355\u83b7\u7684\u7535\u5b50\u548c\u7a7a\u7a74\u968f\u540e\u5f62\u6210\u7535\u5b50-\u7a7a\u7a74\u5bf9\uff0c\u5e76\u5c06\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\uff0c\u8be5\u5e26\u5728\u9ad8\u6e29\u4e0b\u9664\u4e86\u76f4\u63a5\u5438\u6536 \\(\\text{Eu} ^{2+}\\) \u5916\uff0c\u8fd8\u6784\u6210 \\(\\text{Eu} ^{2+}\\) \u7684\u989d\u5916\u6fc0\u53d1\u80fd\u3002\u56e0\u6b64\uff0c \\(\\text{NSPO:xEu} ^{2+}\\) \u5728\u8f83\u9ad8\u6e29\u5ea6\u4e0b\u7684\u589e\u5f3a\u53d1\u5c04\u6e90\u4e8e \\(\\text{Eu} ^{2+}\\) \u4e2d\u5fc3\uff0c\u5e76\u901a\u8fc7\u4ece\u7535\u7a7f\u5b54\u5bf9\uff08\u7f3a\u9677\uff09\u5230 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u6709\u6548\u80fd\u91cf\u8f6c\u79fb\u4ea7\u751f\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f7c\u6b64\u975e\u5e38\u63a5\u8fd1\u3002\u6b64\u5916\uff0c \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u7684\u4e24\u6b21\u53d1\u5c04\u4e5f\u53ef\u5f52\u56e0\u4e8e\u5728\u7d2b\u5916\u5149\u6fc0\u53d1\u4e0b\u9ad8\u6e29\u4e0b\u5f62\u6210 \\(\\text{Na} ^{+}\\) \u79bb\u5b50\u7684\u9677\u9631\u7684\u9ad8\u542b\u91cf\u6709\u5229\u4e8e\u7535\u5b50-\u7a7a\u7a74\u5bf9\u7684\u5927\u91cf\u5f62\u6210\u3002 \u6b64\u5916\uff0c\u5728\u8f83\u9ad8\u6e29\u5ea6\u4e0b\uff0cNSPO\u57fa\u8d28\u4e2d\u7f3a\u9677\u80fd\u7ea7\u7684\u4f4d\u7f6e\u51b3\u5b9a\u4e86\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u6548\u7387\u3002\u5728 \\(\\beta\\) \u76f8\u4e2d\u5177\u6709\u8f83\u4f4e\u6d3b\u5316\u80fd \\(0.75 eV\\) \u548c \\(0.80 eV\\) \uff08\u6d45\u9677\u9631\uff09\u7684\u7f3a\u9677\u80fd\u7ea7\u8868\u660e\uff0c\u5728 \\(370nm\\) \u6fc0\u53d1\u4e0b\uff0c\u4ece\u9677\u9631\u5230 \\(Eu^{2+}5 d \\(\u5e26\u7684\u6709\u6548\u80fd\u91cf\u8f6c\u79fb\u5bfc\u81f4RT\u4ee5\u4e0a\u7684\u6700\u9ad8\u53d1\u5c04\u5f3a\u5ea6\uff08\u4f9d\u8d56\u4e8e\u6e29\u5ea6\u7684PL\u5149\u8c31\uff0c\u56fe4a\uff09\u3002\u7136\u800c\uff0c\u5728\\) 350\\) \u548c \\(420 nm\\) \u4e4b\u95f4\u7684\u4e0d\u540c\u6fc0\u53d1\u6ce2\u957f\u4e0b\u7684\u53d1\u5c04\u5149\u8c31\uff08\u8865\u5145\u56fe9\uff09\u5728 \\(\\gamma\\) \u76f8\u663e\u793a\u51fa\u6700\u5927\u53d1\u5c04\uff0c\u7279\u522b\u662f\u5728\u9ad8\u6fc0\u53d1\u80fd\u91cf \\(\\left(\\lambda_{ ex }=350\\right.\\) \u548c \\(360 nm\\) \u4e0b\uff09\u3002\u8fd9\u8868\u660e\u9ad8\u80fd\u6fc0\u53d1\u53ef\u4ee5\u91ca\u653e\u51fa\u5728 \\(\\gamma\\) \u76f8\u4e2d\u7684\u6df1\u9677\u9631\u7535\u5b50\uff0c\u4ece\u800c\u589e\u5f3a\u7f3a\u9677\u8bf1\u5bfc\u53d1\u5c04\u3002\u6b64\u5916\uff0c\u8d1f\u8d23\u96f6\u70ed\u731d\u706d\u6027\u8d28\u7684\u9677\u9631\u4e0d\u5b58\u5728\u4e8e\u79bb\u6563\u80fd\u7ea7\u4e2d\uff0c\u800c\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5bbd\u5e26\uff0c\u80fd\u91cf\u8303\u56f4\u4e3a \\(3.1-3.5 eV \\left(\\lambda_{ ex }=350-400 nm \\right)\\) \u3002\u8fd9\u4e9b\u7ed3\u679c\u5b8c\u5168\u5ffd\u7565\u4e86\u6211\u4eec\u53d1\u73b0\u7684\u5176\u4ed6\u53ef\u80fd\u89e3\u91ca\uff0c\u5373\u9ad8\u6e29\u9636\u6bb5 \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\u7684 \\(QE\\) \u66f4\u9ad8\u3002 \u767d\u5149LED\u7684\u5236\u5907\u4e0e\u6027\u80fd \u00b6 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u5b9e\u9645\u53ef\u884c\u6027\u901a\u8fc7\u4f7f\u7528\u8fd1\u7d2b\u5916LED\u82af\u7247 \\(\\left(\\lambda_{\\max }=365 nm \\right)\\) \u7684LED\u5236\u9020\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u7ed3\u679c\u5982\u56fe5\u6240\u793a\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5927\u529f\u7387LED\u7167\u660e\u91c7\u7528\u8303\u56f4\u4e3a \\(200-\\) \\(1,000 mA\\) \u7684\u9ad8\u901a\u91cf\u5de5\u4f5c\u7535\u6d41\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u548c\u5546\u7528 \\(Sr _{3} MgSi _{2} O _{8}: Eu ^{2+}\\left( SMS : Eu ^{2+}\\right)\\) \u8367\u5149\u7c89\u7684EL\u5f3a\u5ea6\u968f\u7740\u53c2\u8003UV LED\u82af\u7247\u7535\u6d41\u7684\u589e\u52a0\u800c\u589e\u52a0\uff08\u56fe5a\uff09\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684EL\u5f3a\u5ea6\u9ad8\u4e8e \\(600 mA\\) \uff0c\u800c\u5546\u4e1a \\(\\text{SMS:Eu}{ }^{2+}\\) \u548cUV LED\u82af\u7247\u7684EL\u5f3a\u5ea6\u5206\u522b\u7531\u4e8eLED\u7684\u9ad8 \\(TQ\\) \u548c\u6548\u7387\u4e0b\u964d\u800c\u964d\u4f4e\u5230 \\(800 mA\\) \u4ee5\u4e0a\uff08\u56fe5a\uff09\u3002\u5728WLED\u88c5\u7f6e\u4e2d\uff0c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \uff08\u7528\u4f5c\u84dd\u8272\u7ec4\u5206\uff09\u7684EL\u5728 \\(200-1000 mA\\) \u8303\u56f4\u5185\u589e\u52a0\uff0c\u5e76\u4e14\u4e0e \\(\\text{SMS:Eu}{ }^{2+}\\) \u76f8\u6bd4\u66f4\u9ad8\uff0c\u56e0\u4e3a\u540e\u8005\u7531\u4e8eTQ\u6027\u80fd\u5dee\u800c\u5728 \\(600 mA\\) \u4ee5\u4e0a\u6025\u5267\u964d\u4f4e\uff08\u56fe5b\uff0cc\uff09\u3002 \u5728\u5b9e\u9645\u7684WLED\u5c01\u88c5\u4e2d\uff0c\u70ed\u7a33\u5b9a\u8367\u5149\u7c89\u5c06\u5728\u5927\u529f\u7387LED\u64cd\u4f5c\u671f\u95f4\u7ef4\u6301\u989c\u8272\u5750\u6807 \\(^{4}\\) \u3002\u57fa\u4e8e \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684WLED\u7684\u989c\u8272\u5750\u6807\u5373\u4f7f\u5728 \\(1,000 mA\\) \u7684\u9ad8\u901a\u91cf\u7535\u6d41\u4e0b\u4ecd\u4fdd\u6301\u4e0d\u53d8\uff08\u56fe5d\uff09\u3002\u57fa\u4e8e \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684WLED\u7684\u663e\u8272\u6307\u6570\uff08CRI\uff09\u503c\u5728\u901a\u91cf\u7535\u6d41\u4e3a \\(1,000 mA\\) \u65f6\u9ad8\u8fbe88\uff0c\u5149\u901a\u91cf\u4e3a \\(\\sim 23 lm\\) \uff08\u8865\u5145\u88685\uff09\u3002\u5728 \\(1,000 mA\\) \u7535\u6d41\u4e0b\u7a33\u5b9a\u7684\u8272\u5750\u6807\u548c\u9ad8CRI\u503c\uff0888\uff09\u8bc1\u5b9e\u4e86 \\(\\text{NSPO:Eu} ^{2+}\\) \u8367\u5149\u7c89\u5728\u9ad8\u901a\u91cf\u7535\u6d41\u4e0b\u7684\u4f18\u5f02\u5149\u5b66\u548c\u96f6TQ\u6027\u80fd\u3002 \u6b64\u5916\uff0c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u84dd\u8272\u53d1\u5c04\u88ab\u5176\u4ed6\u8367\u5149\u7c89\u6210\u5206\u663e\u8457\u5438\u6536\uff0c\u5373\u9ec4\u8272\u53d1\u5c04 \\(La _{3} Si _{6} N _{11}: Ce ^{3+}\\) ( \\(LSN : Ce ^{3+}\\) ) \u548c\u7ea2\u8272\u53d1\u5c04 \\(( Sr , Ca ) AlSiN _{3}: Eu ^{2+}\\left( SCASN : Eu ^{2+}\\right)\\) \u8367\u5149\u7c89\u5236\u9020\uff08\u8865\u5145\u56fe10\uff09\uff0c\u63d0\u4f9b\u4e86 \\(\\text{NSPO:Eu} ^{2+}\\) \u7684\u84dd\u8272\u7ec4\u5206\u7684\u4f18\u52bf\uff0c\u53ef\u5728\u8f83\u9ad8\u6e29\u5ea6\u4e0b\u8fc7\u5ea6\u8865\u507f\u5176\u4ed6\u8367\u5149\u7c89\u6548\u7387\u7684\u4e0b\u964d\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027QE\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\u800c\u589e\u52a0\u4ece\u5ba4\u6e29\u65f6\u7684 \\(\\left(64 \\%\\right.\\) \u589e\u52a0\u5230 \\(\\left.175^{\\circ} C \\right)\\) \u7684 \\(78 \\%\\) \uff0c\u8868\u73b0\u51fa\u96f6\u70ed\u731d\u706d\u7279\u6027\uff0c\u4e0e\u5546\u4e1a \\(LSN : Ce ^{3+}\\) \u548c \\(\\text{SCASN:Eu} ^{2+}\\) \u8367\u5149\u7c89\u4e0d\u540c\uff0c\u5b83\u4eec\u5728 \\(175^{\\circ} C\\) \u5904\u7684QE \\((\\sim 54-59 \\%)\\) \u8f83\u4f4e\uff08\u8865\u5145\u88686\uff09\u3002 \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u5438\u6536\u5206\u6570\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u4fdd\u6301\u4e0d\u53d8\uff0c\u8fd9\u8868\u660e\u589e\u5f3a\u7684QE\u4e0d\u662f\u7531\u9ad8\u6e29\u76f8\u5438\u6536\u5206\u6570\u7684\u589e\u52a0\u5f15\u8d77\u7684\uff08\u8865\u5145\u88687\uff09\u3002\u6240\u5236\u5907\u7684 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u57faWLED\uff08\u56fe5e\uff09\u5728 \\(1,000 mA\\) \u7684\u5916\u52a0\u7535\u6d41\u4e0b\u663e\u793a\u51fa\u660e\u4eae\u7684\u767d\u8272\u53d1\u5c04\uff08\u56fe5f\uff09\u3002\u8fd9\u4e9b\u7ed3\u679c\u8868\u660e\uff0c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u662f\u4e00\u79cd\u70ed\u7a33\u5b9a\u4e14\u7a33\u5b9a\u7684\u8367\u5149\u7c89\uff0c\u5177\u6709\u96f6\u70ed\u731d\u706d\u7279\u6027\uff0c\u53ef\u4ee5\u5728\u5927\u529f\u7387WLED\u7167\u660e\u4e2d\u7528\u4f5c\u84dd\u8272\u53d1\u5149\u8367\u5149\u7c89\u3002 \u603b\u4e4b\uff0c\u6211\u4eec\u901a\u8fc7\u5229\u7528\u9ad8\u6e29\u4e0b\u7f3a\u9677\u8bf1\u5bfc\u7684\u591a\u6001\u6027\uff0c\u6210\u529f\u5730\u5f00\u53d1\u4e86\u4e00\u79cd\u4e0d\u53d7\u70ed\u731d\u706d\u5f71\u54cd\u7684 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u3002\u8fd9\u79cd\u884c\u4e3a\u5f52\u56e0\u4e8e\u7531\u4e8e\u57fa\u8d28\u7684\u591a\u6001\u6027\u548c\u4ece\u7535\u5b50-\u7a7a\u7a74\u5bf9\u7ec4\u6210\u7684\u9677\u9631\u5230 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u80fd\u91cf\u8f6c\u79fb\u5bfc\u81f4\u8f90\u5c04\u590d\u5408\u800c\u5bfc\u81f4\u7684\u53d1\u5c04\u635f\u5931\u7684\u8865\u507f\u3002\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236NSPO\u57fa\u8d28\u4e2d\u7684 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u6d53\u5ea6\u6765\u63a7\u5236\u96f6\u70ed\u731d\u706d\u6027\u80fd\u3002\u5229\u7528\u79bb\u5b50\u5bfc\u7535\u591a\u6676\u6750\u6599\u7684\u6982\u5ff5\u6709\u671b\u4e3a\u5f00\u53d1\u4e0e\u7167\u660e\u6280\u672f\u76f8\u5173\u7684\u96f6\u70ed\u731d\u706d\u8367\u5149\u7c89\u6253\u5f00\u5927\u95e8\u3002 \u9644\u5f55 \u00b6 \u56fe1|\u65b0\u578b\u84dd\u8272 \\(\\text{Na}_{3-2 x}\\text{Sc} _{2}(\\text{PO}_{4})_{3}: x \\text{Eu} ^{2+}( \\text{NSPO : x Eu} ^{2+})\\) \u8367\u5149\u7c89\u7684\u7ed3\u6784\u8868\u5f81 a, \u4e09\u79cd\u4e0d\u540c\u6676\u4f53\u5b66Na\u4f4d\u70b9\u7684\u56fe\u89e3\uff0c\u5373\uff1aNa1, Na2, \u548c Na3\uff0c\u5206\u522b\u5728 \\(\\text{NSPO:xEu }^{2+}\\) \u4e2d\u6709\u516d\u4e2a\u3001\u4e03\u4e2a\u548c\u516b\u4e2a\u4f4d\u70b9\u3002 b, \\(\\text{NSPO:xEu }^{2+}\\) \u7684\u6676\u4f53\u7ed3\u6784\uff0c\u6df1\u84dd\u8272\u3001\u6a59\u8272\u3001\u7ea2\u8272\u548c\u6d45\u84dd\u84dd\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u3001\u78f7\u5f62\u6210\u7684 \\(\\text{PO}_{4}\\) \u56db\u9762\u4f53\u5355\u5143\u3001\u94aa\u5f62\u6210\u7684 \\(\\text{ScO} _{6}\\) \u516b\u9762\u4f53\u5355\u5143\u548c\u94a0\u79bb\u5b50\u3002\u7531\u4e09\u4e2a \\(\\text{PO}_{4}\\) \u56db\u9762\u4f53\u9694\u5f00\uff0c\u5e76\u7531\u4e00\u4e2a\u5171\u4eab\u6c27\u6c14\u7684\u4e00\u89d2\u8fde\u63a5\u3002\u8fd9\u4e9b \\(2(\\text{ScO} _{6})-3(\\text{PO}_{4})\\) \u5355\u5143\u5c01\u88c5\u5728\u4e00\u4e2a\u51c6\u7acb\u65b9\u521a\u6027\u6846\u67b6\u4e2d\uff0c\u51b3\u5b9a\u4e86\u94a0\u79bb\u5b50\u5c40\u90e8\u5316\u7684\u76f8\u4ea4\u901a\u9053\u7684\u4e09\u7ef4\u6676\u683c\u3002 c\uff0cd, \u6839\u636e\u6d4b\u91cf\u6570\u636e\u548c\u57fa\u4e8eRietveld\u7cbe\u4fee\u7684\u8ba1\u7b97\u5256\u9762\uff0c\u5206\u522b\u5bf9 \\(\\text{NSPO:xEu }^{2+}\\) \u8fdb\u884cX\u5c04\u7ebf\u7c89\u672b\u884d\u5c04\u548c\u4e2d\u5b50\u7c89\u672b\u884d\u5c04\u3002 <<<<<<< HEAD \u56fe \\(2 \\mid\\) \\(\\text{NSPO : x Eu} ^{2+}\\) \u7684\u5149\u5b66\u548c\u96f6\u70ed\u731d\u706d\u6027\u80fd a\uff0c \\(\\text{NSPO : x Eu} ^{2+}\\) \u7684\u6fc0\u53d1\u548c\u53d1\u5c04\u5149\u8c31\u3002 b\uff0c \\(\\text{NSPO : x Eu} ^{2+}\\) \u5728 370 nm \u6fc0\u53d1\u4e0b\u7684\u5f52\u4e00\u5316\u53d1\u5c04\u5f3a\u5ea6\u4e0e \\(\\text{Eu}^{2+}\\) \u6d53\u5ea6\u7684\u51fd\u6570\u5173\u7cfb\u3002 c, \\(\\text{NSPO : 0.07 Eu}^{2+}\\) \u8367\u5149\u7c89\u5728 \\(370nm \\(\u6fc0\u53d1\u4e0b\u7684\u6e29\u5ea6\u68af\u5ea6\u53d1\u5c04\u5149\u8c31\uff0c\u6e29\u5ea6\u8303\u56f4\\) 25-200^{\\circ}C \\(\uff0c\u6e29\u5ea6\u95f4\u9694\\) 50^{\\circ}C (\u3002 d, \\(\\text{NSPO : 0.07 Eu}^{2+}\\) \u5728\\) 370 nm\\) \u6fc0\u53d1\u4e0b\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027\u5f52\u4e00\u5316\u53d1\u5c04\u5149\u8c31\uff0c\u4e0e\u52a0\u70ed\u5230 \\(200^{\\circ} C\\) \u65f6\u7684\u5e02\u552eLED\u8367\u5149\u7c89\u76f8\u6bd4\u3002 \u56fe3 | \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u591a\u6001\u6027\u53ca\u5176\u7f3a\u9677\u5f62\u6210 \u3002 a , b , \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u4ece25\u2103\u52a0\u70ed\u5230250\u2103\u5e76\u968f\u540e\u51b7\u5374\u5230 \\(25{ }^{\\circ} C\\) \u65f6\u7684NSPO\u7684\u6e29\u5ea6\u68af\u5ea6XRD\u56fe\uff08a\uff09\u548c\u9009\u5b9a\u7684XRD\u56fe\uff08b\uff09\u3002 c, \u4ece25\u2103\u52a0\u70ed\u81f3200\u2103\u5e76\u968f\u540e\u51b7\u5374\u81f325\u2103\u65f6 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u6e29\u5ea6\u76f8\u5173\u62c9\u66fc\u5149\u8c31\u3002\u56fe\u4e2d\u663e\u793a\u4e86 \\(Sc - O\\) \u548c \\(PO _{4}\\) \u56db\u9762\u4f53\u7684\u7ed3\u5408\uff0c\u5176\u4e2d\u7ea2\u8272\u3001\u6a59\u8272\u548c\u84dd\u8272\u7403\u4f53\u5206\u522b\u4ee3\u8868\u94aa\u3001\u78f7\u548c\u6c27\u3002 d, NSPO\u57fa\u8d28\u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684\u6e29\u5ea6\u76f8\u5173\u963b\u6297\u8c31\uff1a\u4ece25\u2103\u52a0\u70ed\u5230230\u2103\uff0c\u7136\u540e\u51b7\u5374\u523025\u2103\u3002 e, NSPO\u57fa\u8d28\u5728 \\(25-300^{\\circ} C\\) \u6e29\u5ea6\u8303\u56f4\u5185\u7684\u70ed\u91ca\u5149\u66f2\u7ebf\u3002 \u56fe4 | \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u96f6\u70ed\u731d\u706d\u8fc7\u7a0b\u3002 a, \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u5728370 nm\u6fc0\u53d1\u4e0b\uff0c\u572825\u81f3 \\(200^{\\circ} C\\) \u52a0\u70ed\u5e76\u968f\u540e\u5728\u7a7a\u6c14\u4e2d\u51b7\u5374\u81f3 \\(25^{\\circ} C\\) \u65f6\u7684\u6e29\u5ea6\u76f8\u5173\u5f52\u4e00\u5316\u53d1\u5c04\u5149\u8c31\uff08\u53d1\u5c04\u9762\u79ef\u548c\u9ad8\u5ea6\uff09\u3002 b-f\uff0c \u5177\u6709\u516d-\uff08b\uff09\u3001\u4e03-\uff08c\uff09\u548c\u516b\u914d\u4f4d\uff08d\uff09Na\u4f4d\u7684\u5355\u659c\u76f8 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u5bc6\u5ea6\u6cdb\u51fd\u7406\u8bba\u8ba1\u7b97\uff0c\u5176\u4e2d\u84dd\u8272\u548c\u6d77\u519b\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u79bb\u5b50\u548c\u94a0\u79bb\u5b50\uff0c\u4ee5\u53ca\u5177\u6709\u516d-\uff08e\uff09\u548c\u516b\u914d\u4f4d\uff08f\uff09Na\u4f4d\u7684\u516d\u89d2 \\(\\gamma\\) \u76f8\uff0c\u5176\u4e2d\u84dd\u8272\u548c\u7eff\u8272\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u79bb\u5b50\u548c\u94a0\u79bb\u5b50\u3002 g\uff0c NSPO\u7684\u8870\u53d8\u65f6\u95f4\u6d4b\u91cf\uff1a\u5728 355 nm \u6fc0\u53d1\u548c 453 nm \u53d1\u5c04\u6e29\u5ea6\u8303\u56f4\u5185\u76d1\u6d4b0 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \\(25-200^{\\circ} C\\) \u3002\u56fe\u4e2d\u63cf\u7ed8\u4e86\u8870\u51cf\u66f2\u7ebf\u7684\u660e\u663e\u5dee\u5f02\u3002 h, \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u96f6\u70ed\u731d\u706d\u8fc7\u7a0b\u673a\u7406\u7684\u793a\u610f\u56fe\u3002\u53d1\u5c04\u8fc7\u7a0b\u7684\u7ebf\u5bbd\u63cf\u8ff0\u4e86\u589e\u5f3a\u53d1\u5c04\u5f3a\u5ea6\u7684\u7a0b\u5ea6\u3002 \u00b6 \u56fe \\(2 \\mid\\) \\(\\text{NSPO : x Eu} ^{2+}\\) \u7684\u5149\u5b66\u548c\u96f6\u70ed\u731d\u706d\u6027\u80fd a\uff0c \\(\\text{NSPO : x Eu} ^{2+}\\) \u7684\u6fc0\u53d1\u548c\u53d1\u5c04\u5149\u8c31\u3002 b\uff0c \\(\\text{NSPO : x Eu} ^{2+}\\) \u5728 370 nm \u6fc0\u53d1\u4e0b\u7684\u5f52\u4e00\u5316\u53d1\u5c04\u5f3a\u5ea6\u4e0e \\(\\text{Eu}^{2+}\\) \u6d53\u5ea6\u7684\u51fd\u6570\u5173\u7cfb\u3002 c, \\(\\text{NSPO : 0.07 Eu}^{2+}\\) \u8367\u5149\u7c89\u5728 \\(370nm \\(\u6fc0\u53d1\u4e0b\u7684\u6e29\u5ea6\u68af\u5ea6\u53d1\u5c04\u5149\u8c31\uff0c\u6e29\u5ea6\u8303\u56f4\\) 25-200^{\\circ}C \\(\uff0c\u6e29\u5ea6\u95f4\u9694\\) 50^{\\circ}C (\u3002 d, \\(\\text{NSPO : 0.07 Eu}^{2+}\\) \u5728\\) 370 nm\\) \u6fc0\u53d1\u4e0b\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027\u5f52\u4e00\u5316\u53d1\u5c04\u5149\u8c31\uff0c\u4e0e\u52a0\u70ed\u5230 \\(200^{\\circ} C\\) \u65f6\u7684\u5e02\u552eLED\u8367\u5149\u7c89\u76f8\u6bd4\u3002 \u56fe3 | \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u591a\u6001\u6027\u53ca\u5176\u7f3a\u9677\u5f62\u6210 \u3002 a , b , \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u4ece25\u2103\u52a0\u70ed\u5230250\u2103\u5e76\u968f\u540e\u51b7\u5374\u5230 \\(25{ }^{\\circ} C\\) \u65f6\u7684NSPO\u7684\u6e29\u5ea6\u68af\u5ea6XRD\u56fe\uff08a\uff09\u548c\u9009\u5b9a\u7684XRD\u56fe\uff08b\uff09\u3002 c, \u4ece25\u2103\u52a0\u70ed\u81f3200\u2103\u5e76\u968f\u540e\u51b7\u5374\u81f325\u2103\u65f6 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u6e29\u5ea6\u76f8\u5173\u62c9\u66fc\u5149\u8c31\u3002\u56fe\u4e2d\u663e\u793a\u4e86 \\(Sc - O\\) \u548c \\(PO _{4}\\) \u56db\u9762\u4f53\u7684\u7ed3\u5408\uff0c\u5176\u4e2d\u7ea2\u8272\u3001\u6a59\u8272\u548c\u84dd\u8272\u7403\u4f53\u5206\u522b\u4ee3\u8868\u94aa\u3001\u78f7\u548c\u6c27\u3002 d, NSPO\u57fa\u8d28\u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684\u6e29\u5ea6\u76f8\u5173\u963b\u6297\u8c31\uff1a\u4ece25\u2103\u52a0\u70ed\u5230230\u2103\uff0c\u7136\u540e\u51b7\u5374\u523025\u2103\u3002 e, NSPO\u57fa\u8d28\u5728 \\(25-300^{\\circ} C\\) \u6e29\u5ea6\u8303\u56f4\u5185\u7684\u70ed\u91ca\u5149\u66f2\u7ebf\u3002 \u56fe4 | \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u96f6\u70ed\u731d\u706d\u8fc7\u7a0b\u3002 a, \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u5728370 nm\u6fc0\u53d1\u4e0b\uff0c\u572825\u81f3 \\(200^{\\circ} C\\) \u52a0\u70ed\u5e76\u968f\u540e\u5728\u7a7a\u6c14\u4e2d\u51b7\u5374\u81f3 \\(25^{\\circ} C\\) \u65f6\u7684\u6e29\u5ea6\u76f8\u5173\u5f52\u4e00\u5316\u53d1\u5c04\u5149\u8c31\uff08\u53d1\u5c04\u9762\u79ef\u548c\u9ad8\u5ea6\uff09\u3002 b-f\uff0c \u5177\u6709\u516d-\uff08b\uff09\u3001\u4e03-\uff08c\uff09\u548c\u516b\u914d\u4f4d\uff08d\uff09Na\u4f4d\u7684\u5355\u659c\u76f8 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u5bc6\u5ea6\u6cdb\u51fd\u7406\u8bba\u8ba1\u7b97\uff0c\u5176\u4e2d\u84dd\u8272\u548c\u6d77\u519b\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u79bb\u5b50\u548c\u94a0\u79bb\u5b50\uff0c\u4ee5\u53ca\u5177\u6709\u516d-\uff08e\uff09\u548c\u516b\u914d\u4f4d\uff08f\uff09Na\u4f4d\u7684\u516d\u89d2 \\(\\gamma\\) \u76f8\uff0c\u5176\u4e2d\u84dd\u8272\u548c\u7eff\u8272\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u79bb\u5b50\u548c\u94a0\u79bb\u5b50\u3002 g\uff0c NSPO\u7684\u8870\u53d8\u65f6\u95f4\u6d4b\u91cf\uff1a\u5728 355 nm \u6fc0\u53d1\u548c 453 nm \u53d1\u5c04\u6e29\u5ea6\u8303\u56f4\u5185\u76d1\u6d4b0 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \\(25-200^{\\circ} C\\) \u3002\u56fe\u4e2d\u63cf\u7ed8\u4e86\u8870\u51cf\u66f2\u7ebf\u7684\u660e\u663e\u5dee\u5f02\u3002 h, \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u96f6\u70ed\u731d\u706d\u8fc7\u7a0b\u673a\u7406\u7684\u793a\u610f\u56fe\u3002\u53d1\u5c04\u8fc7\u7a0b\u7684\u7ebf\u5bbd\u63cf\u8ff0\u4e86\u589e\u5f3a\u53d1\u5c04\u5f3a\u5ea6\u7684\u7a0b\u5ea6\u3002 main \u56fe5 | \u5236\u4f5c\u7684pc-LED\u5728\u9ad8\u901a\u91cf\u5de5\u4f5c\u7535\u6d41\u4e0b\u7684\u6027\u80fd\u3002 a\uff0c \u5355\u4e2a\u84dd\u8272\u8367\u5149\u7c89\u7684\u7535\u81f4\u53d1\u5149\uff08EL\uff09\u5149\u8c31\uff0c\u5373 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u3001\u5546\u7528 \\(Sr _{3} MgSi _{2} O _{8}: Eu ^{2+}\\left( SMS : Eu ^{2+}\\right)\\) \uff0c\u5728100\u6beb\u5b89\u7684\u9ad8\u901a\u91cf\u5de5\u4f5c\u7535\u6d41\u4e0b\u6fc0\u53d1365 nm\uff0c\u5176\u4e2d\u5728 100 mA \u5904\u7684EL\u5f3a\u5ea6\u88ab\u6807\u51c6\u5316\u3002\u6240\u6709\u7684EL\u5149\u8c31\u90fd\u662f\u4f7f\u7528 365 nm LED \u82af\u7247\u4f5c\u4e3a\u6fc0\u53d1\u6e90\u6d4b\u91cf\u7684\u3002 b\uff0c \u4f7f\u7528 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u4f5c\u4e3a\u84dd\u8272\u7ec4\u5206\u7684WLED\u7684EL\uff0c\u4e0e\u5546\u4e1a \\(\\text{SMS:Eu}^{2+}\\) \u8367\u5149\u7c89\u4e0e\u9ec4\u8272\u53d1\u5c04 \\(\\text{LSN:Ce}^{3+}\\) \u548c\u7ea2\u8272\u53d1\u5c04 \\(\\text{SCASN:Eu}^{2+}\\) \u8367\u5149\u7c89\u7ec4\u5408\u76f8\u6bd4\u3002 c\uff0c \u4f7f\u7528 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u4f5c\u4e3a\u84dd\u8272\u7ec4\u5206\u7684WLED\u7684EL\u5149\u8c31\u3002 d\uff0c \u5236\u9020\u7684 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u539f\u578bWLED\u4e0e\u57fa\u4e8e\u5546\u7528\u84dd\u8272 \\(\\text{SMS:Eu}^{2+}\\) \u8367\u5149\u7c89\u7684WLED\u7684\u8272\u5ea6\u5750\u6807\u8fdb\u884c\u6bd4\u8f83\u3002 e\uff0cf\uff0c \\(\\text{NSPO:0.03Eu} ^{2+}\\) WLED \u539f\u578b\uff0c\u6ca1\u65bd\u52a0\uff08e\uff09\u548c\u65bd\u52a0\uff08f\uff09\u9ad8\u901a\u91cf\u5de5\u4f5c\u7535\u6d41\u7684\u56fe\u50cf\u3002 \u53c2\u8003\u6587\u732e \u00b6 Reineke, S. Complementary LED technologies. Nat. Mater. 14, 459-462 (2015). Pust, P, Schmidt, P. J. \\& Schnick, W. A revolution in lighting. Nat. Mater. 14, 454-458 (2015). Xia, Z. \\& Liu, R.-S. Tunable blue-green color emission and energy transfer of \\(Ca _{2} Al _{3} O _{6} F : Ce ^{3+}, Tb ^{3+}\\) phosphors for near-UV white LEDs. J. Phys. Chem. \\(C\\) 116, 15604-15609 (2012). Lin, C. C. \\& Liu, R.-S. Advances in phosphors for light-emitting diodes. J. Phys. Chem. Lett. 2, 1268-1277 (2011). Daicho, H. et al. A novel phosphor for glareless white light-emitting diodes. Nat. Commun. 3, 1132 (2012). Zhu, H. et al. Highly efficient non-rare-earth red emitting phosphor for warm white light-emitting diodes. Nat. Commun. 5, 4312 (2014). Mu\u00f1oz, G. H., de la Cruz, C. L., Mu\u00f1oz, A. F. \\& Rubio, J. O. High-temperature luminescence properties of \\(Eu ^{2+}\\) -activated alkali halide phosphor materials. J. Mater. Sci. Lett. 7, 1310-1312 (1988). Blasse, G. \\& Grabmaier, B. Luminescent Materials (Springer, 1994). Dorenbos, P. Thermal quenching of \\(Eu ^{2+} 5 d-4 f\\) luminescence in inorganic compounds. J. Phys. Condens. Matter 17, 8103-8111 (2005). Blasse, G. Thermal quenching of characteristic fluorescence. J. Chem. Phys. 51, 3529-3530 (1969). Takeda, T., Hirosaki, N., Funahshi, S. \\& Xie, R.-J. Narrow-band green-emitting phosphor \\(Ba _{2} LiSi _{7} AlN _{12}: Eu ^{2+}\\) with high thermal stability discovered by a single particle diagnosis approach. Chem. Mater. 27, 5892-5898 (2015). Xie, R.-J. \\& Hirosaki, N. Silicon-based oxynitride and nitride phosphors for white LEDs-a review. Sci. Tech. Adv. Mater. 8, 588-600 (2007). Chen, L., Lin, C.-C., Yeh, C.-W. \\& Liu, R.-S. Light converting inorganic phosphors for white light-emitting diodes. Materials 3, 2172-2195 (2010). Bachmann, V. et al. Color point tuning for \\(( Sr , Ca , Ba ) Si _{2} O _{2} N _{2}\\) :Eu \\(^{2+}\\) for white light LEDs. Chem. Mater. 21, 316-325 (2009). Im, W. B. et al. Efficient and color-tunable oxyfluoride solid solution phosphors for solid-state white lighting. Adv. Mater. 23, 2300-2305 (2011). \\(Im , W . B\\) . et al. \\(Sr _{2.975-x} Ba _{x} Ce _{0.025} AlO _{4} F\\) : a highly efficient green-emitting oxyfluoride phosphor for solid state white lighting. Chem. Mater. 22, 2842-2849 (2010). Zhuang, J. et al. The improvement of moisture resistance and thermal stability of \\(Ca _{3} SiO _{4} Cl _{2}: Eu ^{2+}\\) phosphor coated with \\(SiO _{2}\\) . Appl. Surf. Sci. 257, \\(4350-4353(2011)\\) Lee, H. S. \\& Yoo, J. W. Yellow phosphors coated with \\(TiO _{2}\\) for the enhancement of photoluminescence and thermal stability. Appl. Surf. Sci. 257, 8355-8359 (2011). Nakanishi, T. \\& Tanabe, S. Preparation and luminescent properties of \\(Eu ^{2+}\\) -activated glass ceramic phosphor precipitated with \\(\\beta- Ca _{2} SiO _{4}\\) and \\(Ca _{3} Si _{2} O _{7}\\) . Phys. Status Solidi A 206, 919-922 (2009). Bykov, A. B. et al. Superionic conductors \\(Li _{3} M _{2}\\left( PO _{4}\\right)_{3}( M = Fe , Sc , Cr )\\) : Synthesis, structure and electrophysical properties. Solid State Ion. \\(3 8\\) , \\(31-52(1990)\\) . de la Roch\u00e8re, M. et al. NASICON type materials- \\(Na _{3} M _{2}\\left( PO _{4}\\right)_{3}( M = Sc , Cr\\) , \\(Fe ): Na ^{+}- Na ^{+}\\) correlations and phase transitions. Solid State Ion. 9-10, 825-828 (1983). Masui, T., Koyabu, K., Tamura, S. \\& Imanaka, N. Synthesis of a new NASICON-type blue luminescent material. J. Alloys Compd. 418, 73-76 (2006). Saradhi, M., Pralong, V., Varadaraju, U. \\& Raveau, B. Facile chemical insertion of lithium in \\(Eu _{0.33} Zr _{2}\\left( PO _{4}\\right)_{3}\\) -an elegant approach for tuning the photoluminescence properties. Chem. Mater. 21, 1793-1795 (2009). Delbecq, C. J., Marshall, S. A. \\& Susman, S. Evidence for a structural phase change in the fast-ion conductor \\(Na _{3} Sc _{2} P _{3} O _{12}\\) . Solid State Ion. 1 , 145-149 (1980). Mundy, J., Shenoy, G. \\& Vashishta, P. Fast ion transport in solids: electrodes, and electrolytes Proc. Int. Conf. Fast Ion Transport in Solids, Electrodes, and Electrolytes (Elsevier North Holland, 1979). Wickleder, M. S. Inorganic lanthanide compounds with complex anions. Chem.Rev. 102, 2011-2088 (2002). Sorokin, \\(N\\) . I. \\(Na ^{+}\\) -ion conductivity of double phosphate \\(Na _{3} Sc _{2}\\left( PO _{4}\\right)_{3}\\) in the region of the \\(\\beta-\\gamma\\) transition. Phys. Solid State 56, 678-681 \\((2014)\\) . Collin, G., Comes, \\(R\\) ., Boilot, J. \\& Colomban, P. Disorder of tetrahedra in Nasicon-type structure-I.: \\(Na _{3} Sc _{2}\\left( PO _{4}\\right)_{3}\\) : structures and ion-ion correlations.J. Phys. Chem. Solids 47, 843-854 \\((1986)\\) . Winand, J. M., Rulmont, A. \\& Tarte, P. Ionic conductivity of the \\(Na _{1+x} M _{x} IIIZr _{2-x}\\left( PO _{4}\\right)_{3}\\) systems \\(( M = Al , Ga , Cr , Fe , Sc , In , Y , Yb )\\) . J. Mater.Sci. 25, 4008-4013 (1990). Keen, D. A. Disordering phenomena in superionic conductors. J. Phys.Condens. Matter \\(14, R 819- R 857\\) (2002). Mazza, D. Modeling ionic conductivity in nasicon structures. J. Solid StateChem. 156, 154-160 (2001). Pan, Z., Lu, Y.-Y. \\& Liu, F. Sunlight-activated long-persistent luminescence in the near-infrared from \\(Cr ^{3+}\\) -doped zinc gallogermanates. Nat. Mater. 11, 58-63 (2012). Garlick, G. \\& Gibson, A. The electron trap mechanism of luminescence in sulphide and silicate phosphors. Proc. Phys. Soc. 60, 574-590 (1948). Van den Eeckhout, K., Smet, P. F. \\& Poelman, D. Persistent luminescence in \\(Eu ^{2+}\\) -doped compounds: a review. Materials 3, 2536-2566 (2010).","title":"\u7ffb\u8bd1"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#_1","text":"\u8367\u5149\u8f6c\u6362\u767d\u5149LED (pc-WLEDs) \u662f\u6548\u7387\u8f83\u9ad8\u7684\u5149\u6e90\uff0c\u7528\u4e8e\u7167\u660e\u3001\u9ad8\u7ea7\u663e\u793a\u548c\u7535\u5b50\u8bbe\u5907\u4e2d\u3002\u5173\u4e8epc-WLEDs\u7684\u4e00\u5927\u96be\u9898\u662f\u70ed\u731d\u706d\uff0c\u5728\u5927\u529f\u7387LED\u8fd0\u4f5c\u65f6\uff0c\u4f1a\u968f\u7740\u6e29\u5ea6\u4e0a\u5347\u4ea7\u751f\u53d1\u5c04\u635f\u5931\u3002\u672c\u6587\u4e2d\u5408\u6210\u4e86\u4e00\u79cd\u84dd\u8272\u53d1\u5149 \\(Na _{3-2 x} Sc _{2}\\left( PO _{4}\\right)_{3}\\) \uff1a \\(x E u ^{2+}\\) \u8367\u5149\u7c89 \\(\\left(\\lambda_{ em }=453 nm \\right)\\) \u5728 \\(200^{\\circ} C\\) \u8be5\u8367\u5149\u7c89\u5728200\u2103\u65f6\u4e5f\u4e0d\u5b58\u5728\u70ed\u731d\u706d\u73b0\u8c61\u3002\u8fd9\u79cd\u96f6\u70ed\u731d\u706d\u73b0\u8c61\u6e90\u4e8e\u8367\u5149\u7c89\u5177\u6709\u8865\u507f\u53d1\u5c04\u635f\u5931\u7684\u80fd\u529b\uff0c\u5e76\u4e14\u6e29\u5ea6\u5347\u9ad8\u4e5f\u53ef\u4ee5\u7ef4\u6301\u53d1\u5149\u3002\u8fd9\u4e9b\u53d1\u73b0\u53ef\u4ee5\u7528\u591a\u6676\u578b\u4fe2\u9970,\u4ee5\u53ca\u5728\u6e29\u5ea6\u5347\u9ad8\u65f6\u70ed\u6fc0\u6d3b\u7f3a\u9677\u80fd\u7ea7\u7684\u7535\u5b50-\u7a7a\u7a74\u5bf9\u5230 \\(Eu ^{2+} 5 d\\) \u5e26\u53ef\u80fd\u7684\u80fd\u91cf\u4f20\u9012\u6765\u89e3\u91ca\u3002\u6211\u4eec\u7684\u6210\u679c\u5f00\u542f\u4e86\u5bf9\u9ad8\u529f\u7387LED\u7528\u96f6\u70ed\u731d\u706d\u8367\u5149\u7c89\u7684\u7814\u7a76\u3002 \u8367\u5149\u8f6c\u6362\u767d\u5149LED(pc-WLEDs) \\(^{1}\\) \u5df2\u7ecf\u56e0\u5176\u73af\u4fdd\u3001\u575a\u56fa\u4ee5\u53ca\u5bff\u547d\u957f\u7684\u7279\u6027\u8d70\u8fdb\u4e86\u5343\u5bb6\u4e07\u6237 \\(^{2}\\) \u3002\u7136\u800c\uff0c\u57fa\u4e8e\u84dd\u8272LED\u6fc0\u53d1\u7684 \\(Y _{3} Al _{5} O _{12}: Ce ^{3+}\\) \u7531\u4e8e\u7ea2\u5149\u5c11\u800c\u663e\u8272\u6027\u5dee\u3002\u5177\u6709\u4e09\u8272\u8367\u5149\u7c89\u7684\u8fd1\u7d2b\u5916LED\u56e0\u5176\u9ad8\u663e\u8272\u6027\u4ee5\u53ca\u4f18\u5f02\u7684\u989c\u8272\u5747\u5300\u6027\u800c\u500d\u53d7\u79d1\u7814\u5173\u6ce8\u3002\u7136\u800c\uff0c\u5f00\u53d1\u5177\u6709\u9ad8\u4eae\u5ea6\u548c\u70ed\u7a33\u5b9a\u6027\u7684\u8367\u5149\u7c89\u662f\u4e00\u4e2a\u5173\u952e\u6311\u6218 \\(^{4-6}\\) .\u5173\u4e8e\u540e\u8005\uff0cLED\u5de5\u4f5c\u65f6\u7684\u4ea7\u70ed \\(\\left(\\sim 200^{\\circ} C \\right)\\) \u4f1a\u5bfc\u81f4\u53d1\u5c04\u635f\u5931\uff0c\u901a\u5e38\u5f52\u56e0\u4e8e\u6fc0\u6d3b\u5242\u57fa\u6001\u6fc0\u53d1\u7535\u5b50\u7684\u975e\u8f90\u5c04\u5f1b\u8c6b\u3002\u8fd9\u79cd\u6240\u8c13\u7684\u70ed\u731d\u706d\uff08TQ\uff09\u4f1a\u4e25\u91cd\u5f71\u54cdPC-WLEDs\u7684\u6548\u7387\u5e76\u6539\u53d8\u767d\u5e73\u8861\u3002 TQ\u7528\u7ec4\u6001\u5750\u6807\u56fe\u89e3\u91ca\uff0c\u5176\u4e2d\u6fc0\u53d1\u53d1\u5149\u4e2d\u5fc3\u901a\u8fc7\u58f0\u5b50\u76f8\u4e92\u4f5c\u7528\u70ed\u6fc0\u6d3b\uff0c\u7136\u540e\u901a\u8fc7\u6fc0\u53d1\u6001\u4e0e\u57fa\u6001\u7684\u4ea4\u53c9\u70b9\u91ca\u653e \\(^{7-9}\\) \u3002\u8fd9\u79cd\u70ed\u6fc0\u6d3b\u7684\u975e\u8f90\u5c04\u8dc3\u8fc1\u51e0\u7387\u5f3a\u70c8\u4f9d\u8d56\u4e8e\u6e29\u5ea6\u3002\u56e0\u6b64\uff0cTQ\u53d6\u51b3\u4e8e\u57fa\u8d28\u7684\u7ed3\u6784\u53c2\u6570\uff0c\u5373\u521a\u6027\u952e\u5408\u7f51\u7edc\u8868\u793a\u7684\u7ed3\u6784\u521a\u5ea6\u548c\u952e\u5408\u5f3a\u5ea6\uff0c\u8fd9\u53ef\u4ee5\u6781\u5927\u5730\u51cf\u5c11\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u4ea7\u751f\u7684\u53d1\u5c04\u635f\u5931 \\(^{10}\\) \u3002\u4e00\u822c\u6765\u8bf4\uff0c\u77f3\u69b4\u77f3\u3001\u6c2e\u5316\u7269 \\(^{11,12}\\) \u548c\u78f7\u9178\u76d0 \\(^{4}\\) \u662f\u70ed\u7a33\u5b9a\u7684\u8367\u5149\u57fa\u8d28\uff0c\u7531\u4e8e\u5176\u5bc6\u96c6\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u5177\u6709\u4f18\u5f02\u7684\u7ed3\u6784\u521a\u6027\u3002\u5546\u4e1a\u4e0a\u53ef\u7528\u7684\u7684\u4f4e\u70ed\u731d\u706d\u8367\u5149\u7c89\u6709 \\(\\text{YAG:Ce }^{3+},\\text{(Sr,Ca)AlSiN} _{3}:\\text{Eu}^{2+}\\) \u548c \\(\\text{SrSi}_{2} \\text{O}_{2}\\text{N} _{2}:\\text{Eu}^{2+}\\) , \u5728 \\(200^{\\circ} C\\) \u65f6\u7684\u53d1\u5c04\u635f\u5931\u5206\u522b\u662f \\(12 \\%, 18 \\%\\) and \\(20 \\%\\) \\(^{13,14}\\) \u3002\u5df2\u7ecf\u91c7\u7528\u4e86\u5404\u79cd\u6280\u672f\u6765\u63d0\u9ad8\u70ed\u7a33\u5b9a\u6027\uff0c\u4f8b\u5982\u8367\u5149\u7c89\u7684\u56fa\u6eb6\u4f53\u3001\u5728\u8367\u5149\u7c89\u4e0a\u9676\u74f7\u6d82\u5c42\u548c\u73bb\u7483\u9676\u74f7\u8367\u5149\u7c89\uff0c\u4f46\u662f\u5b83\u4eec\u88ab\u8bc1\u660e\u5728\u6700\u5c0f\u5316TQ\u65b9\u9762\u4e0d\u592a\u6709\u6548\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5408\u6210\u4e86\u4e00\u79cd \\(\\text{Na}_{3-2 x}\\text{Sc} _{2}(\\text{PO}_{4})_{3}: x \\text{Eu} ^{2+}( \\text{NSPO : x Eu} ^{2+})\\) \u84dd\u8272\u8367\u5149\u7c89\uff0c\u53ef\u4ee5\u5728\u6700\u9ad8 \\(200^{\\circ} C\\) \u6ca1\u6709\u70ed\u731d\u706d\u73b0\u8c61\u3002\u8fc7\u5269\u7684\u70ed\u80fd\u88ab\u4e0e \\(Na ^{+}\\) \u65e0\u5e8f\u5316\u76f8\u5173\u7684\u7ed3\u6784\u8f6c\u53d8\u5229\u7528\uff0c\u5f62\u6210\u7684\u7f3a\u9677\u80fd\u7ea7\u4f5c\u4e3a\u7535\u5b50\u4fd8\u83b7\u4e2d\u5fc3\uff0c\u6709\u5229\u4e8e\u4ece\u5305\u542b\u7535\u5b50-\u7a7a\u7a74\u5bf9\u7684\u4fd8\u83b7\u5230 \\(\\text{Eu} ^{2+}\\) \u7684\u80fd\u91cf\u8f6c\u79fb\u3002\u7531\u975e\u8f90\u5c04\u8dc3\u8fc1\u5f15\u8d77\u7684\u53d1\u5c04\u635f\u8017\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u53cd\u673a\u5236\u6765\u6291\u5236\uff0c\u56e0\u6b64\u80fd\u591f\u968f\u7740\u6e29\u5ea6\u5347\u9ad8\u7ef4\u6301\u53d1\u5c04\u5f3a\u5ea6\uff0c\u8981\u8868\u793a\u8fd9\u79cd\u8367\u5149\u7c89\u7684\u96f6\u70ed\u731d\u706d\u7279\u6027\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u63cf\u8ff0\u4e3a\u4e00\u79cd\u201c\u81ea\u6108\u201d\u7684\u6750\u6599\u3002","title":"\u6458\u8981"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#_2","text":"\u78f7\u9178\u76d0\u57fa\uff08Na\uff09\u8d85\u79bb\u5b50\u5bfc\u4f53\uff08NASICON\uff09\u662f\u9ad8\u6e29\u79bb\u5b50\u5bfc\u4f53\u548c\u591a\u5f62\u6750\u6599\uff0c\u7531\u4e8e\u9633\u79bb\u5b50\u65e0\u5e8f\u5316\u5bfc\u81f4\u7f3a\u9677\u5f62\u6210\uff0c\u5728\u52a0\u70ed\u65f6\u53d1\u751f\u7ed3\u6784\u8f6c\u53d8\u3002\u5178\u578b\u7684\u57fa\u4e8eNASICON\u7684 \\(A_{3} M_{2}\\left( PO _{4}\\right)_{3}\\) \u65cf \\((A= Li\\) \u548c \\(Na ; M= Cr\\) , \\(Fe\\) , \u548c \\(Sc)\\) \u7ed3\u6676\u4e3a\u5355\u659c\u7ed3\u6784\uff0c\u5e76\u5728\u51b7\u5374\u65f6\u663e\u793a\u53ef\u9006\u7ed3\u6784\u8f6c\u53d8 \\(^{20,21}\\) \u3002\u78f7\u9178\u76d0\u57faNASICON\u88ab\u5f00\u53d1\u4f5c\u4e3a\u8367\u5149\u7c89\u7684\u57fa\u4f53\uff0c\u4f46\u662f\u53d7\u7d2f\u4e8e\u70ed\u731d\u706d\u73b0\u8c61 \\(^{22,23}\\) \u3002\u800cNSPO\u6613\u4e8e\u7ed3\u6784\u4fee\u9970\uff0c\u7279\u522b\u662f\u5728\u4f4e\u6e29\u4e0b \\(\\left(\\leq 165^{\\circ} C \\right)\\) \uff0c\u56e0\u6b64\u5c06\u5176\u4f5c\u4e3a\u8367\u5149\u7c89\u57fa\u8d28\u3002\u7f3a\u9677\u7684\u5f62\u6210\u662f\u968f\u7740\u6e29\u5ea6\u5347\u9ad8\u800c\u4e0d\u662f\u975e\u8f90\u5c04\u8fc7\u7a0b\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u70ed\u80fd\u7684\u5229\u7528\u3002 \u7ed3\u5408X\u5c04\u7ebf\u884d\u5c04\uff08XRD\uff09\u548c\u4e2d\u5b50\u884d\u5c04\u7684\u7ed3\u679c\u5bf9 \\(NSPO : x Eu ^{2+}\\) \u7684\u7ed3\u6784\u6539\u8fdb\u3002\u8367\u5149\u7c89\u4ee5\u5355\u659cC2/c\u7ed3\u6784\u7ed3\u6676\uff08\u88681\uff09\uff0c\u5e76\u663e\u793a\u51fa\u4e09\u79cd\u4e0d\u540c\u7684\u6676\u4f53\u94a0\u4f4d\u70b9-\u5373\u5206\u522b\u4e0e\u516d\u3001\u4e03\u548c\u516b\u79cd\u6c27\u914d\u4f4d\u7684Na1\u3001Na2\u548cNa3\uff08\u56fe1a\u3001b\uff09\uff0c\u8fd9\u4e0e\u6587\u732e \\(^{24}\\) \u4e00\u81f4\u3002\u5408\u6210\u7684NSPO\u4e3a\u5355\u76f8\uff0c\u65e0\u6742\u8d28\u8ff9\u8c61\uff08\u56fe1c\u3001d1c\u3001d\uff09\uff0c\u4e14\u94a0\u79bb\u5b50\u548c\u7a7a\u4f4d\u5177\u6709\u957f\u7a0b\u6709\u5e8f\u6027 \\(^{25}\\) \uff08\u8865\u5145\u88682\uff09\u3002\u5728\u5ba4\u6e29\u4ee5\u4e0a\uff0c\u94a0\u79bb\u5b50\u7531\u4e8e\u4e0e\u5f62\u6210\u521a\u6027\u9aa8\u67b6\u7684\u79bb\u5b50\u5f62\u6210\u5f31\u952e\u800c\u83b7\u5f97\u9ad8\u8fc1\u79fb\u7387\u548c\u79bb\u5b50\u65e0\u5e8f\u5316\u3002\u7531\u4e8e \\(Eu ^{2+}\\) \u548c\u94a0\u79bb\u5b50\u5177\u6709\u76f8\u4f3c\u7684\u9633\u79bb\u5b50\u5927\u5c0f\uff0c\u56e0\u6b64 \\(Eu ^{2+}\\) \u53ef\u4ee5\u5360\u636e\u4e09\u4e2a\u6676\u4f53\u94a0\u4f4d\u70b9\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\u57fa\u8d28\u4e2d\u7684\u94a0\u65e0\u5e8f\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u589e\u52a0\uff0c\u56e0\u6b64\u53ef\u80fd\u5f71\u54cdEu\u6fc0\u6d3b\u5242\u7684\u5149\u5b66\u6027\u8d28 \\(^{26}\\) \u3002","title":"\u7ed3\u6784\u8868\u5f81"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#_3","text":"\\(\\text{NSPO:xEu }^{2+}\\) \u4e2d \\(\\text{Eu}^{2+}\\) \u7684\u6700\u4f73\u63ba\u6742\u91cf\u5728 \\(3 mol \\%(x=0.03)\\) \u5185\u90e8\u91cf\u5b50\u6548\u7387\uff08QE\uff09\u5728\u5ba4\u6e29\u4e3a\u65f6\u4e3a74%\u3002\u901a\u8fc7\u6539\u53d8\u5408\u6210\u6761\u4ef6\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fdb\u4e00\u6b65\u7684\u6539\u8fdb\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684\u53d1\u5c04\u5149\u8c31\u663e\u793a\uff0c\u5728 \\(370 nm\\) \u6fc0\u53d1\u4e0b\uff0c\u7531\u4e8e \\(\\text{Eu}^{2+}\\) \u76845d-4f\u8dc3\u8fc1\uff0c\u5728 \\(453 nm\\) \u5904\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u5bbd\u84dd\u8272\u53d1\u5c04\u5e26\uff0c\u534a\u6700\u5927\u5bbd\u5ea6\u4e3a \\(\\sim 44 nm\\) \uff08\u56fe2b\uff09\u3002\u5728\u8fd1\u7d2b\u5916\uff08\u8fd1\u7d2b\u5916\uff1b \\(280-400 nm\\) \uff09\u4e2d\u7684\u5f3a\u5438\u6536\u6709\u5229\u4e8e\u5728\u8fd1\u7d2b\u5916LED\u6fc0\u53d1\u4e0b\u8fdb\u884c\u5f00\u53d1\u3002 \\(\\text{NSPO:0.07Eu }^{2+}\\) \u5728 \\(\\lambda_{ ex }=370 nm\\) / \\(200^{\\circ} C\\) \u4e0b\uff0c\u8868\u73b0\u51fa\u70ed\u7a33\u5b9a\u53d1\u5c04\uff0c\u65e0\u53d1\u5c04\u635f\u8017\u3002\uff08\u56fe2c\uff09\u56fe2d\u663e\u793a\u4e86 \\(\\text{NSPO:0.07Eu }^{2+}\\) \u4e0e\u6e29\u5ea6 \\(25-200^{\\circ} C\\) \u533a\u95f4\u5185\u70ed\u731d\u706d\u8f83\u4f4e\u7684\u5e02\u552eLED\u8367\u5149\u7c89\u76f8\u6bd4\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027\u53d1\u5c04\u5f3a\u5ea6\u3002\u6700\u70ed\u7a33\u5b9a\u7684\u8367\u5149\u7c89\uff0c \\(\\text{CaAlSiN}_{3}:\\text{Eu}^{2+}\\) \u548c \\(\\text{YAG:Ce}^{3+}\\) \uff0c\u5b58\u57288%\u7684\u53d1\u5c04\u635f\u5931\uff1b\u63a5\u4e0b\u6765\u662f \\(\\text{K}_{2} \\text{SiF} _{6}\\text{:Mn} ^{4+}, \\text{Sr} _{3} \\text{MgSi} _{2} \\text{O} _{8}\\text{:Eu} ^{2+}\\) \u548c \\(\\text{Sr}_{2}\\text{SiO}_{4}\\text{:Eu}^{2+}\\) \u5b58\u572815%\uff0c16%\u548c25%\u7684\u53d1\u5c04\u635f\u5931\u3002\u4e0e\u4e4b\u76f8\u6bd4\uff0c \\(\\text{NSPO:0.07Eu }^{2+}\\) \u8367\u5149\u7c89\u6ca1\u6709\u968f\u7740\u6e29\u5ea6\u5347\u9ad8\u4ea7\u751f\u53d1\u5c04\u635f\u5931\u3002","title":"\u5149\u5b66\u548c\u96f6\u70ed\u731d\u706d\u6027\u80fd"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#textnspoxeu-2","text":"\\(\\text{NSPO:xEu }^{2+}\\) \u7684\u9ad8\u6e29XRD\u63ed\u793a\u4e86\u968f\u6e29\u5ea6\u5347\u9ad8\u7684\u4e09\u79cd\u6676\u578b\u7684\u5f62\u6210\uff0c\u5373\uff1a \\(\\alpha\\) \u76f8\uff08\u5355\u659c\uff09\u3001 \\(\\beta\\) \u76f8\uff08\u516d\u89d2\u5f62\uff09\u548c \\(\\gamma\\) \u76f8\uff08\u516d\u89d2\u5f62\uff09 \\(^{21}\\) \uff08\u56fe3a\uff09\u3002\u5728 \\(T_{a-\\beta}=\\sim 64^{\\circ} C\\) \u548c \\(T_{\\beta-\\gamma}=\\sim 165^{\\circ} C\\) \uff0c\u76f8\u4ece \\(\\alpha\\) \u76f8\u53d8\u5230 \\(\\beta\\) \u76f8\u7136\u540e\u5230 \\(\\gamma\\) \u76f8\uff08\u53c2\u8003\u6587\u732e24\uff0c27\uff09\u3002\u968f\u7740\u51b7\u5374\uff0c\u76f8\u53c8\u53d8\u56de \\(\\alpha\\) \u76f8\uff08\u5dee\u70ed\u5206\u6790\u7ed3\u679c\uff0c\u8865\u5145\u56fe1\uff09\u5728 \\(\\alpha\\) \u76f8\u4f4d\u4e2d\uff0c \\(\\sim 23^{\\circ}\\) \u5904\u7684Bragg\u5cf0\u663e\u793a\u591a\u4e2a\u91cd\u53e0\u53cd\u5c04\uff0c\u800c\u7531\u4e8e\u9ad8\u5ea6\u5bf9\u79f0\u6027\uff0c \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\u4f4d\u89c2\u5bdf\u5230\u660e\u663e\u7684\u53cc\u5cf0\uff08\u56fe3b\uff09\u3002\u5373\u4f7f \\(\\beta\\) \u76f8\u548c \\(\\gamma\\) \u76f8\u5f88\u76f8\u50cf\uff0c \\(\\gamma\\) \u76f8\u7684\u5f62\u6210\u662f\u7531\u4e8e \\(\\beta\\) \u76f8 \\(\\sim 30.6\\) \u548c \\(\\sim 47.4^{\\circ}\\) \u7684Bragg\u5cf0\u79fb\u52a8\u5230\u76f8\u6bd4\u4e8e \\(\\beta\\) \u76f8\u8f83\u4f4e\u7684Bragg\u89d2\u3002\u8fd9\u4e9b\u76f8\u53d8\u4e0e\u6676\u683c\u4e2d\u7684 \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u6709\u5173\uff0c\u56e0\u4e3a\u5728\u5408\u6210 \\(\\alpha\\) \u76f8\u4e2d\u5b58\u5728 \\(\\text{Na}\\) \u7a7a\u4f4d \\({ }^{28}\\) \u3002\u5bfc\u81f4 \\(\\text{Na} ^{+}\\) \u79bb\u5b50\u7684\u4f4d\u7f6e\u65e0\u5e8f\uff0c\u5bfc\u81f4\u7a7a\u4f4d\u6570\u91cf\u968f\u6e29\u5ea6\u589e\u52a0\uff0c\u5f62\u6210\u6709\u5229\u4e8e \\(\\text{Na} ^{+}\\) \u79bb\u5b50\u957f\u7a0b\u4f20\u8f93\u7684\u7f3a\u9677 \\(^{29,30}\\) \u3002 \u7814\u7a76\u4e86 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684\u6e29\u5ea6\u68af\u5ea6\u62c9\u66fc\u5149\u8c31\uff0c\u4ee5\u4e86\u89e3 \\(- PO _{4}\\) \u56db\u9762\u4f53\u5bf9\u79f0\u6027\u53d8\u5316\u5f15\u8d77\u7684\u7ed3\u6784\u8f6c\u53d8\uff08\u56fe3c\uff09\u3002\u5728 \\(900-1,200 cm ^{-1}\\) \u8303\u56f4\u5185\u7684\u62c9\u4f38\u6a21\u5f0f\u5206\u88c2\u5cf0\u662f\u4f4e\u5bf9\u79f0\u5355\u659c \\(\\alpha\\) \u76f8 \\({ }^{28}\\) \u3002\u6b64\u5916\uff0c\u5728 \\(250 cm ^{-1}\\) \\(- PO _{4}\\) \u6a21\u5f0f\u6bd4\u5728 \\(190 cm ^{-1}\\) \u7684Sc-O\u6a21\u5f0f\u7684\u66f4\u5bbd\u8868\u660e \\(\\alpha\\) \u76f8\u6bb5\u5b58\u5728\u53d6\u5411\u65e0\u5e8f\u3002\u901a\u8fc7\u5728 \\(\\sim 1,025 cm ^{-1}\\) \u5904\u5408\u5e76\u7684 \\(- PO _{4}\\) \u62c9\u4f38\u6a21\u5f0f\uff0c\u5728 \\(190 cm ^{-1}\\) \u5904\u8bc1\u660e\u4e86\u6709\u516d\u65b9 \\(\\beta\\) \u76f8\u7684\u5f62\u6210\u3002\u5728 \\(\\sim 413 cm ^{-1}\\) \u5904\u7684\u5f2f\u66f2\u6a21\u5f0f\u786e\u5b9a \\(\\gamma\\) \u76f8\u5728 \\(200^{\\circ} C\\) \u5904\u7684\u6f14\u5316\u3002\u9b54\u89d2\u65cb\u8f6c\u4ea4\u53c9\u8ba1\u5212\u56fa\u4f53\u6838\u78c1\u5171\u632f\u4eea\u663e\u793a\u7ed3\u679c\u4e5f\u786e\u5b9a\u4e86\u6e29\u5ea6\u5347\u9ad8\u65f6\u7684\u76f8\u53d8\uff08\u8865\u5145\u56fe2\uff09\u3002 \u968f\u6e29\u5ea6\u53d8\u5316\u7684\u963b\u6297\u8c31\u663e\u793a\uff0c \\(\\text{NSPO}\\) \u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7531\u4e8e\u76f8\u53d8\u3001 \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u3001\u7a7a\u4f4d\u6216\u7f3a\u9677\u548c\u7f3a\u9677\u6d53\u5ea6\uff0c\u7535\u5bfc\u7387\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u589e\u52a0\uff08\u56fe3d\uff09\u3002\u5728NSPO\u57fa\u8d28\u7684\u76f8\u53d8\u6e29\u5ea6 \\(\\left(\\sim 64^{\\circ} C\\right.\\) \u548c \\(\\left.\\sim 165^{\\circ} C \\right)\\) \u4e0b\u89c2\u5bdf\u5230\u660e\u663e\u7684\u7535\u5bfc\u7387\u53d8\u5316\uff08\u901a\u8fc7\u7535\u5bfc\u7387\u66f2\u7ebf\u7684\u5f2f\u66f2\uff09\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7531\u4e8e \\(\\text{Eu}^{2+}\\) \u79bb\u5b50\u5b58\u5728\u4e0b\u7684 \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u589e\u52a0\uff0c\u7535\u5bfc\u7387\u8868\u73b0\u51fa\u76f8\u5bf9\u5e73\u7a33\u7684\u53d8\u5316\u3002\u7136\u800c\uff0c\u5728NSPO\u57fa\u8d28\u4e2d\uff0c\u6676\u683c\u4e2d \\(\\text{Na} ^{+}\\) \u548c\u7a7a\u4f4d\u7684\u4e25\u683c\u987a\u5e8f\u5728\u5ba4\u6e29\u65f6\u4f1a\u5bfc\u81f4\u7535\u5bfc\u7387\u964d\u4f4e\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u7535\u5bfc\u7387\u968f\u6e29\u5ea6\u7684\u589e\u52a0\u800c\u589e\u52a0\uff0c\u987a\u5e8f\u4e3a \\(\\alpha\\) \u76f8\uff08\u4f4e\u7f3a\u9677\u6676\u4f53\uff09 \\(<\\) \u5f31\u65e0\u5e8f\u79bb\u5b50\u5bfc\u7535 \\(\\beta\\) \u76f8 \\(<\\) \u9ad8\u5ea6\u65e0\u5e8f\u8d85\u79bb\u5b50 \\(\\gamma\\) \u76f8\uff0c\u539f\u56e0\u5728\u4e8e\u6676\u683c\u4e2d\u589e\u52a0\u7684 \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u3002 \u5728\u8f83\u9ad8\u7684 \\(\\text{Eu}^{2+}\\) \u6d53\u5ea6 \\(\\text{NSPO:0.07Eu }^{2+}\\) \u4e0b\uff0c\u6837\u54c1\u7ecf\u5386 \\(\\text{Na} ^{+}\\) \u7684\u65e0\u5e8f-\u65e0\u5e8f\u8f6c\u53d8\uff0c\u5f62\u6210\u76f8\u5bf9\u8f83\u5c11\u7684\u7f3a\u9677\uff0c\u8fd9\u5bfc\u81f4\u968f\u6e29\u5ea6\u5347\u9ad8\u7684\u7a33\u5b9a\u53d1\u5c04\u5f3a\u5ea6\uff08\u56fe2d\uff09\u3002\u5728\u8f83\u4f4e\u7684 \\(\\text{Eu}^{2+}\\) \u6d53\u5ea6\u4e0b \\((\\text{NSPO:xEu}^{2+};\\text{x}=0.01\\text{\u548c}0.03\\) )\uff0c\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\text{Na} ^{+}\\) \u79bb\u5b50\u7684\u65e0\u5e8f\u8f6c\u53d8\u8f83\u5c11\uff0c\u8fd9\u4f1a\u4ea7\u751f\u76f8\u5bf9\u8f83\u591a\u7684\u7f3a\u9677\u3002\u6b64\u5916\uff0c\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u548c \\(\\text{Na}\\) \u7a7a\u4f4d\u7684\u589e\u52a0\u4f1a\u5bfc\u81f4\u5e26\u8d1f\u7535\u8377\u7684 \\(\\text{Na}\\) \u7a7a\u4f4d \\(\\left(V_{ Na }^{\\prime}\\right)^{28}\\) \u7684\u5f62\u6210\u3002\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c\u8fd9\u4e9b \\(V_{ Na }^{\\prime}\\) \u7a7a\u4f4d\u5b9a\u4f4d\u5728 \\(\\text{Eu}^{2+}\\) \u79bb\u5b50\u9644\u8fd1\uff0c\u5f62\u6210 \\(V_{ Na }^{\\prime}- Eu ^{2+}-V_{ Na }^{\\prime}\\) \u7f3a\u9677\u7c07\uff0c\u4f5c\u4e3a\u7535\u5b50\u4fd8\u83b7\u4e2d\u5fc3\u3002\u5176\u6570\u91cf\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\u800c\u589e\u52a0 \\({ }^{32,33}\\) \u3002 \u70ed\u91ca\u5149\uff08TL\uff09\u5149\u8c31\uff08\u56fe3e\uff09\u8bc1\u5b9e\u4e86\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\text{NSPO}\\) \u57fa\u8d28\u4e2d\u7f3a\u9677\u80fd\u7ea7\u7684\u5f62\u6210\u3002TL\u66f2\u7ebf\u663e\u793a\u4e86\u6e29\u5ea6\u8303\u56f4 \\(\\sim 65^{\\circ} C -165^{\\circ} C\\) \u548c \\(\\sim 165^{\\circ} C -250^{\\circ} C\\) \u4e2d\u7684\u4e24\u4e2a\u663e\u8457\u7f3a\u9677\u80fd\u7ea7\uff0c\u5206\u522b\u4e0e \\(\\beta\\) \u76f8\u548c \\(\\gamma\\) \u76f8\u5173\u8054\u3002 \\(\\beta\\) \u76f8\u663e\u793a\u51fa\u6bd4 \\(\\gamma\\) \u76f8\u66f4\u5f3a\u7684TL\u66f2\u7ebf\uff0c\u663e\u793a\u57fa\u8d28\u4e2d\u76f8\u5bf9\u8f83\u9ad8\u7684\u9677\u9631\u6d53\u5ea6\u6216\u7f3a\u9677\u6c34\u5e73\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c \\(\\alpha\\) \u76f8\uff08\u5ba4\u6e29\uff09\u4e5f\u8868\u73b0\u51fa\u76f8\u5f53\u5927\u7684\u7f3a\u9677\u6c34\u5e73\uff0c\u8fd9\u662f\u7531\u4e8e\u5b58\u5728\u7a7a\u4f4d \\(\\text{Na}\\) \u548c \\(\\text{Na} ^{+}\\) \u65e0\u5e8f\u3002\u7136\u800c\uff0c\u4e0e \\(\\beta\\) \u76f8\u548c \\(\\gamma\\) \u76f8\u76f8\u6bd4\uff0c\u5176\u9677\u9631\u6570\u91cf\u975e\u5e38\u5c11\uff0c\u56e0\u6b64\u5b83\u4eec\u5728TL\u5149\u8c31\u4e2d\u4e0d\u5177\u6709\u7279\u5f81\u3002\u4f7f\u7528\u4ee5\u4e0b\u8fd1\u4f3c\u516c\u5f0f\u8ba1\u7b97\u8fd9\u4e9b\u7f3a\u9677\u7684\u9677\u9631\u6df1\u5ea6\uff1a [ E_{ T }=T_{ M } / 500 ] \u5f0f\u4e2d\uff0c \\(E_{ T }\\) \u662f\u9677\u9631\u6df1\u5ea6\u7684\u70ed\u6fc0\u6d3b\u80fd\uff08\u5355\u4f4d\uff1aeV\uff09\uff0c\u8868\u793a\u9677\u9631\u80fd\u7ea7\u548c\u4e3b\u4f53\u5bfc\u5e26\u4e4b\u95f4\u7684\u80fd\u9699\uff0c \\(T_{M}\\) \u662fTL\u5cf0\u503c\u6700\u5927\u7684\u6e29\u5ea6\uff08\u4ee5\u5f00\u5c14\u6587\u8868\u793a\uff0cK\uff09 \\(^{34}\\) \u3002\u5728 \\(\\beta\\) \u76f8\u89c2\u5bdf\u5230\u4e24\u4e2a\u9677\u9631\uff0c\u5728 \\(104^{\\circ} C\\) \u548c \\(127^{\\circ} C\\) \u5904\u7684\u6d3b\u5316\u80fd\u5206\u522b\u4e3a \\(0.75 eV\\) \u548c \\(0.80 eV\\) \uff0c\u5b83\u4eec\u6784\u6210\u6d45\u9677\u9631\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5728 \\(\\gamma\\) \u76f8\u89c2\u5bdf\u5230\u5355\u4e2a\u9677\u9631\uff0c\u5728 \\(202{ }^{\\circ} C\\) \u5904\u5177\u6709 \\(0.98 eV\\) \u7684\u9ad8\u6d3b\u5316\u80fd\uff0c\u6784\u6210\u66f4\u6df1\u7684\u9677\u9631\u3002\u8fd9\u4e9b\u9677\u9631\u6709\u52a9\u4e8e\u4ece\u7f3a\u9677\u80fd\u7ea7\u5230 \\(\\text{Eu} ^{2+} 5\\text{d}\\) \u5e26\u7684\u80fd\u91cf\u8f6c\u79fb\uff0c\u8fd9\u53ef\u4ee5\u89e3\u91ca\u6e29\u5ea6\u5347\u9ad8 \\(>65^{\\circ} C\\) \u65f6\u7684\u81ea\u6108\u7279\u6027\uff08\u56fe2C\uff09\u3002","title":"\\(\\text{NSPO:xEu }^{2+}\\)\u7684\u591a\u6001\u6027\u53ca\u5176\u7f3a\u9677\u5f62\u6210"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#textnspoxeu-2_1","text":"\u56fe \\(4 a\\) \u5c55\u793a\u4e86\u5728 \\(370 nm\\) \u6fc0\u53d1\u4e0b\uff0c\u4f4e\u6d3b\u5316\u5242\u6d53\u5ea6 \\((x=0.01\\) \u548c \\(0.03)\\) \u4e0b \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u6e29\u5ea6\u4f9d\u8d56\u6027\u53d1\u5c04\u3002\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\alpha\\) \u76f8 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u53d1\u5c04\u4ecd\u7136\u4e0d\u53d7\u5f71\u54cd\u3002\u4e0e\u5ba4\u6e29\u65f6\u7684\u53d1\u5c04\u76f8\u6bd4\uff0c \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u663e\u793a\u51fa\u7ea6 \\(70\\) %\u7684\u589e\u52a0\uff0c\u800c \\(\\text{NSPO:xEu} ^{2+}\\) \\(\\beta\\) \u76f8\u5728\u9ad8\u4e8e \\(65^{\\circ} C\\) \u65f6\u589e\u52a0\u7ea6 \\(25\\) % \uff0c\u5e76\u5728\u7ea6 \\(164^{\\circ}C\\) \u65f6\u8fbe\u5230\u6700\u5927\u503c\u3002 \u53d1\u5c04\u5f3a\u5ea6\u7684\u589e\u52a0\u53ef\u80fd\u4e0e \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\u4e2d\u7f3a\u9677\u6c34\u5e73\u7684\u589e\u5f3a\u5f62\u6210\u6709\u5173\uff08TL\u7ed3\u679c\uff0c\u56fe3e\uff09\uff0c\u8fd9\u4e5f\u53cd\u6620\u5728\u6fc0\u53d1\u5149\u8c31\u4e2d\uff08\u8865\u5145\u56fe3\uff09\u3002\u56e0\u6b64\uff0c\u5728 \\(370 nm\\) \u6fc0\u53d1\u4e0b \\(\\beta\\) \u76f8\u7684\u8f83\u9ad8\u53d1\u5c04\u5f3a\u5ea6\u5f52\u56e0\u4e8e\u6d45\u7535\u5b50\u9677\u9631\u4e2d\u7684\u9ad8\u7f3a\u9677\u6d53\u5ea6\uff0c\u4fc3\u8fdb\u4e86\u4ece\u7535\u5b50\u9677\u9631\u5230 \\(\\text{Eu} ^{2+}\\) \u7684$ 5 d \\(\u5e26\u7684\u6709\u6548\u80fd\u91cf\u8f6c\u79fb\uff0c\u4ece\u800c\u5bfc\u81f4\u5176\u4ea7\u751f\u53d1\u5c04\u3002\u5c3d\u7ba1\\) \\gamma \\(\u76f8\u4e2d\u7684\u7f3a\u9677\u6d53\u5ea6\u8f83\u9ad8\uff0c\u4f46\u8f83\u6df1\u9677\u9631\u4e2d\u7f3a\u9677\u7684\u5b58\u5728\uff08TL\u7ed3\u679c\uff0c\u56fe3e\uff09\u53ef\u80fd\u5bfc\u81f4\u4ece\u9677\u9631\u5230\\) \\text{Eu} ^{2+} \\(\u7684\u5fae\u5f31\u80fd\u91cf\u8f6c\u79fb\uff0c\u4ece\u800c\u5bfc\u81f4\u7a33\u5b9a\u6216\u964d\u4f4e\u53d1\u5c04\u5f3a\u5ea6\u3002\u56e0\u6b64\uff0c\u5728\\) \\text{NSPO:xEu} ^{2+} \\(\u4e2d\uff0c\u8f83\u4f4e\u7684\u63ba\u6742\u5ea6\uff08\\) (x=0.01$ \u548c \\(0.03)\\) \uff09\uff0c\u6e29\u5ea6\u7684\u5347\u9ad8\u5bfc\u81f4\u9ad8\u6d53\u5ea6\u7684\u7f3a\u9677\uff0c\u8fd9\u4e9b\u7f3a\u9677\u4f5c\u4e3a\u7535\u5b50\u4fd8\u83b7\u4e2d\u5fc3\u6765\u5b58\u50a8\u80fd\u91cf\u5e76\u5c06\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\) \u7684% \\(5d\\) -\u5e26\u3002\u8fd9\u4e9b\u7f3a\u9677\u5bfc\u81f4\u53d1\u5c04\u589e\u52a0\uff0c\u62b5\u6d88\u4e86\u9ad8\u6e29\u4e0b\u7531\u4e8e\u975e\u8f90\u5c04\u8dc3\u8fc1\u800c\u4ea7\u751f\u7684\u901a\u5e38\u53d1\u5c04\u635f\u8017\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u8f83\u9ad8\u7684 \\(\\text{Eu} ^{2+}\\) \u6d53\u5ea6 \\((x=0.07)\\) \u4e0b\uff0c\u60c5\u51b5\u6b63\u597d\u76f8\u53cd\uff0c\u56e0\u4e3a\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c\u7f3a\u9677\u8bf1\u5bfc\u53d1\u5c04\u7684\u589e\u52a0\u5728\u6570\u91cf\u4e0a\u4e0e\u975e\u8f90\u5c04\u8dc3\u8fc1\u5f15\u8d77\u7684\u53d1\u5c04\u635f\u8017\u76f8\u540c\uff08\u56fe2d\uff09\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236 \\(\\text{Eu} ^{2+}\\) \u6d53\u5ea6\u6765\u63a7\u5236\u96f6TQ\u6027\u80fd\u3002\u8003\u8651\u5230\u7f3a\u9677\u7684\u4f5c\u7528\uff0c\u5ba4\u6e29\u7684\u6f2b\u53cd\u5c04\u5149\u8c31\uff08\u8865\u5145\u56fe4\uff09\u8bc1\u5b9e\u4e86\u7f3a\u9677\u5438\u6536\u5e26\u975e\u5e38\u63a5\u8fd1\u6fc0\u53d1\u6ce2\u957f \\((370 nm )\\) \u3002 \u53d1\u73b0\u5bfc\u81f4\u53d1\u5c04\u589e\u52a0\u7684\u7f3a\u9677\u6c34\u5e73\u7684\u5b58\u5728\u5728 \\(250^{\\circ} C\\) \u4ee5\u4e0b\u662f\u7a33\u5b9a\u7684\uff0c\u751a\u81f3\u5728\u6e29\u5ea6\u4ece \\(250^{\\circ} C\\) \u964d\u5230 \\(25^{\\circ} C\\) \u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u7a33\u5b9a\u7684\uff08\u8865\u5145\u56fe5\uff09\u3002\u5728 \\(>100^{\\circ} C\\) \u4e0b\u8fde\u7eed\u76d1\u6d4b\u7ea6 \\(90 min\\) ,\u663e\u793a\u4e86\u5176\u5728\u9ad8\u6e29\u4e0b\u5f62\u6210\u9677\u9631\u7684\u9ad8\u7a33\u5b9a\u6027\uff08\u8865\u5145\u56fe6\uff09\u3002\u9677\u9631\u7684\u9ad8\u7a33\u5b9a\u6027\u5f52\u56e0\u4e8e\u5728LED\u8fd0\u884c\u671f\u95f4\uff0c\u901a\u8fc7UV\u82af\u7247\u4e0d\u95f4\u65ad\u5730\u63d0\u4f9b\u5149\u5b50\uff0c\u9677\u9631\u4e2d\u4e0d\u65ad\u5145\u6ee1\u7535\u5b50\u3002 \u5982\u524d\u6240\u8ff0\uff0c \\(\\text{Eu} ^{2+}\\) \u79bb\u5b50\u53ef\u4ee5\u5360\u636e\u5355\u659c\u76f8\u7684\u516d\u914d\u4f4d\u3001\u4e03\u914d\u4f4d\u6216\u516b\u914d\u4f4d\u7684 \\(\\text{Na} ^{+}\\) \u4f4d\u6216\u8005\u516d\u89d2\u76f8\u7684\u516d\u914d\u4f4d\u548c\u516b\u914d\u4f4d\u3002\u5bc6\u5ea6\u6cdb\u51fd\u7406\u8bba\uff08DFT\uff09\u8ba1\u7b97\uff08\u56fe4 b-f\uff09\u8868\u660e\uff0c\u5728\u4e24\u79cd\u591a\u6676\u578b\u4e2d\uff0c \\(\\text{Eu} ^{2+}\\) \u5728\u80fd\u91cf\u4e0a\u6700\u6709\u5229\u7684\u4f4d\u7f6e\u662f\u516b\u914d\u4f4d \\((\\text{NaO} _{8}) \\text{Na}\\) \u4f4d\u7f6e\uff08\u8865\u5145\u88683\uff09\u3002\u6b64\u5916\uff0c\u4e24\u79cd\u591a\u6676\u578b\u4e2d\u7684 \\((\\text{NaO} _{8})\\) \u5177\u6709\u7c7b\u4f3c\u7684 \\(\\text{Eu} ^{2+}\\) \u5c40\u57df\u7535\u5b50 \\(d\\) \u5e26\u7ed3\u6784\uff08\u56fe4 d,f\uff09\u3002\u5728\u4e24\u79cd\u4e0d\u540c\u7684\u591a\u6676\u578b\u4e2d\uff0c\u5177\u6709\u76f8\u540c\u914d\u4f4d\u7684\u5143\u7d20\u5177\u6709\u76f8\u4f3c\u7684\u80fd\u5e26\u7ed3\u6784\uff0c\u8fd9\u5bf9\u4e8e\u4efb\u4f55\u73b0\u6709\u7684\u8367\u5149\u7c89\u6765\u8bf4\u90fd\u662f\u4e00\u79cd\u7f55\u89c1\u7684\u73b0\u8c61\u3002\u8fd9\u8868\u9762\u4e86\u7ed3\u6784\u8f6c\u53d8\u76f8\u5173\u7684 \\(\\text{Eu} ^{2+}\\) \u53d1\u5c04\u66f2\u7ebf\u968f\u6e29\u5ea6\u5347\u9ad8\u7684\u76f8\u4f3c\u6027\uff08\u56fe2c\uff09\u5f52\u56e0\u4e8e \\((\\text{NaO} _{8})\\) \u4f4d\u7f6e\u5b58\u5728 \\(\\text{Eu} ^{2+}\\) \uff0c\u5728\u591a\u6676\u578b\uff08\u5355\u659c \\(\\alpha\\) \u76f8\u548c\u516d\u65b9 \\(\\gamma\\) \u76f8\uff09\u4e2d\u5177\u6709\u76f8\u540c\u7684\u7535\u5b50 \\(d\\) \u80fd\u5e26\u7ed3\u6784\u3002 \u8367\u5149\u8870\u51cf\u66f2\u7ebf\u901a\u8fc7\u4f7f\u7528\u4ee5\u4e0b\u65b9\u7a0b\u5f0f \\(^{8}\\) \u7684\u5355\u6307\u6570\u51fd\u6570\u8fdb\u884c\u62df\u5408\uff1a [ I=A \\exp ^{-(t / \\tau)} ] \u5f0f\u4e2d\uff0c \\(I\\) \u662f\u8367\u5149\u5f3a\u5ea6\uff0c \\(A\\) \u662f\u5e38\u6570\uff0c \\(t\\) \u662f\u65f6\u95f4\uff0c \\(\\tau\\) \u662f\u6307\u6570\u5206\u91cf\u7684\u8870\u51cf\u65f6\u95f4\u3002\u7528 \\(355 nm\\) \u6fc0\u5149\u7167\u5c04\u6d4b\u91cf\u7684 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u8870\u51cf\u66f2\u7ebf\u5bf9\u6240\u6709\u591a\u6676\u578b\u8fdb\u884c\u4e86\u5355\u6307\u6570\u8870\u51cf\u62df\u5408\uff08\u56fe4 b-f\uff09\uff0c\u8868\u660e \\(\\text{Eu} ^{2+}\\) \u5360\u636e\u4e86\u4e00\u4e2a\u4f4d\u70b9\uff0c\u5728\u5355\u659c\uff08 \\(\\alpha\\) \u76f8\uff09\u548c\u516d\u65b9\uff08 \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\uff09\u591a\u6676\u578b\u4e2d\uff0c\u80fd\u91cf\u6709\u5229\u7684 \\((\\text{NaO} _{8})\\) \u4f4d\uff08\u56fe \\(4 b-f\\) \u3002 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u8870\u51cf\u65f6\u95f4\u4ece \\(25^{\\circ} C\\) \u7684 \\(0.39 \\mu\\) \u5230 \\(50^{\\circ} C , 100^{\\circ} C\\) \u7684 \\(0.40 \\mu s , 0.43 \\mu s\\) \u548c \\(0.45 \\mu s\\) \u5206\u522b\u8868\u660e\uff0c\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c\u4ece\u7f3a\u9677\u80fd\u7ea7\uff08\u65bd\u4e3b\uff09\u5230 \\(\\text{Eu} ^{2+}\\) \uff08\u53d7\u4e3b\uff09\u7684 \\(5D\\) \u5e26\u53d1\u751f\u7684\u80fd\u91cf\u8f6c\u79fb\u8fc7\u7a0b\u5bfc\u81f4\u4e86 \\(\\text{Eu} ^{2+}\\) \u6fc0\u6d3b\u5242\u7684\u66f4\u957f\u5bff\u547d \\({ }^{33}\\) \u3002\u7136\u800c\uff0c\u4e0e \\(\\beta\\) \u76f8\u6bd4\uff0c \\(\\gamma\\) \u53d1\u5c04\uff080.42 \\mu s\u5728 \\(200^{\\circ} C\\) \uff09\u5904\u7684\u5bff\u547d\u7f29\u77ed\uff0c\u4f46\u9ad8\u4e8e \\(\\alpha\\) \uff0c\u8868\u660e\u6df1\u9677\u9631\u4e2d\u88ab\u4fd8\u83b7\u7684\u7535\u5b50\uff08TL\u7ed3\u679c\uff0c\u56fe3e\uff09\u76f8\u5bf9\u96be\u4ee5\u8fdb\u884c\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\) \u7684 \\(5d\\) \u5e26\u3002\u56e0\u6b64\uff0c\u5728\u9ad8\u6e29\u4e0b\uff0c\u4ece\u7f3a\u9677\u80fd\u7ea7\u5230 \\(5d\\) \u5e26\u7684\u80fd\u91cf\u8f6c\u79fb\u5728 \\(\\beta\\) \u76f8\u66f4\u4e3a\u660e\u663e\uff0c\u5176\u6b21\u662f \\(\\gamma\\) \u76f8\u3002\u5728 \\(x=0.01\\) \u548c \\(0.07\\) \u65f6\uff0c\u89c2\u5bdf\u5230 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u8870\u53d8\u65f6\u95f4\u4e5f\u6709\u7c7b\u4f3c\u7684\u589e\u52a0\uff08\u8865\u5145\u56fe7\u548c\u8865\u5145\u88684\uff09\u3002\u8fd9\u4e9b\u7ed3\u679c\u5f3a\u70c8\u8868\u660e\uff0c\u4ece\u7f3a\u9677\u80fd\u7ea7\u5230 \\(\\text{Eu} ^{2+}\\) \u7684 \\(5d\\) \u5e26\u7684\u80fd\u91cf\u8f6c\u79fb\u5bfc\u81f4\u8367\u5149\u7c89\u53d1\u5c04\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u589e\u52a0\u6216\u7a33\u5b9a\u3002 \u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\uff0c \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u589e\u52a0 \\((x=0.01,0.03)\\) \u548c\u7a33\u5b9a\u53d1\u5c04 \\((x=0.07)\\) \u7684\u673a\u5236\u53ef\u4ee5\u901a\u8fc7\u4e3b\u4f53\u6676\u683c\u4e2d\u7f3a\u9677\u80fd\u7ea7\u7684\u5b58\u5728\u6765\u89e3\u91ca\uff08\u56fe4h\uff09\u3002 \\(\\text{NSPO:xEu} ^{2+}\\) \u7684\u5355\u659c \\(\\alpha\\) \u76f8\u7684\u5e26\u9699\u4f30\u8ba1\u4e3a \\(4.65 eV\\) \uff0c\u516d\u8fb9\u5f62 \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\u7684\u5e26\u9699\u51cf\u5c0f\u5230 \\(4.54 eV\\) \uff08\u8865\u5145\u56fe8\uff09\u3002\u8003\u8651\u5230 \\(\\text{NSPO:xEu} ^{2+}\\) \\(\\alpha\\) \u76f8\u5ba4\u6e29\u65f6\u7684\u53d1\u5c04\u7684\u8bdd\uff0c \\(\\text{Eu} ^{2+}\\) \u662f\u552f\u4e00\u7684\u5438\u6536\u548c\u53d1\u5c04\u4e2d\u5fc3\u3002\u5728 \\(370 nm\\) \u6fc0\u53d1\u4e0b \\((3.35 eV )\\) \uff0c\u6765\u81ea \\(\\text{Eu} ^{2+}\\) \u57fa\u6001\u7684\u7535\u5b50\u88ab\u63d0\u5347\u5230 \\(4 f^{6} 5 d^{1}\\) \u5e26\uff0c\u5728\u65af\u6258\u514b\u65af\u4f4d\u79fb\u540e\u5728\u84dd\u8272\u533a\u57df\u4ee5 \\(453 nm (2.74 eV )\\) \u53d1\u5c04\u3002 \u5728\u8f83\u9ad8\u6e29\u5ea6\u4e0b \\(\\left(175^{\\circ} C \\right)\\) \uff0c\u5728\u76f8\u540c\u6fc0\u53d1\u80fd\u91cf\u4e0b\uff0c \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u7684\u53d1\u5c04\u5f3a\u5ea6\u589e\u52a0\u4e86\u4e24\u500d\uff0c\u800c\u4e0d\u6539\u53d8\u53d1\u5c04\u4f4d\u7f6e\u3002\u5728 \\(175^{\\circ} C\\) \u5904\u7684\u4e24\u500d\u53d1\u5c04\u589e\u52a0\u6e90\u4e8e\u4e24\u4e2a\u72ec\u7acb\u7684\u5438\u6536\u4e8b\u4ef6\uff0c\u4e00\u4e2a\u76f4\u63a5\u5728 \\(\\text{Eu} ^{2+}\\) \u4e2d\u5fc3\uff0c\u53e6\u4e00\u4e2a\u901a\u8fc7\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\) \u4e2d\u5fc3\uff0c\u4ece\u7f3a\u9677\u80fd\u7ea7/\u9677\u9631\uff0c\u5176\u4e2d \\(\\text{Eu} ^{2+}\\) \u662f\u552f\u4e00\u7684\u53d1\u5c04\u4e2d\u5fc3\u3002\u5728\u7d2b\u5916\u6fc0\u53d1\u4e0b\uff0c\u7535\u5b50\u586b\u5145\u9677\u9631\u5e76\u5728\u4ef7\u5e26\uff08VB\uff09\u540c\u65f6\u4ea7\u751f\u7a7a\u7a74\uff0c\u4ece\u800c\u5728\u9677\u9631\u4f4d\u7f6e\u53d1\u751f\u5438\u6536\u4e8b\u4ef6\u3002\u8fd9\u4e9b\u4ece\u4ef7\u5e26\u6355\u83b7\u7684\u7535\u5b50\u548c\u7a7a\u7a74\u968f\u540e\u5f62\u6210\u7535\u5b50-\u7a7a\u7a74\u5bf9\uff0c\u5e76\u5c06\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\uff0c\u8be5\u5e26\u5728\u9ad8\u6e29\u4e0b\u9664\u4e86\u76f4\u63a5\u5438\u6536 \\(\\text{Eu} ^{2+}\\) \u5916\uff0c\u8fd8\u6784\u6210 \\(\\text{Eu} ^{2+}\\) \u7684\u989d\u5916\u6fc0\u53d1\u80fd\u3002\u56e0\u6b64\uff0c \\(\\text{NSPO:xEu} ^{2+}\\) \u5728\u8f83\u9ad8\u6e29\u5ea6\u4e0b\u7684\u589e\u5f3a\u53d1\u5c04\u6e90\u4e8e \\(\\text{Eu} ^{2+}\\) \u4e2d\u5fc3\uff0c\u5e76\u901a\u8fc7\u4ece\u7535\u7a7f\u5b54\u5bf9\uff08\u7f3a\u9677\uff09\u5230 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u6709\u6548\u80fd\u91cf\u8f6c\u79fb\u4ea7\u751f\uff0c\u56e0\u4e3a\u5b83\u4eec\u5f7c\u6b64\u975e\u5e38\u63a5\u8fd1\u3002\u6b64\u5916\uff0c \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u7684\u4e24\u6b21\u53d1\u5c04\u4e5f\u53ef\u5f52\u56e0\u4e8e\u5728\u7d2b\u5916\u5149\u6fc0\u53d1\u4e0b\u9ad8\u6e29\u4e0b\u5f62\u6210 \\(\\text{Na} ^{+}\\) \u79bb\u5b50\u7684\u9677\u9631\u7684\u9ad8\u542b\u91cf\u6709\u5229\u4e8e\u7535\u5b50-\u7a7a\u7a74\u5bf9\u7684\u5927\u91cf\u5f62\u6210\u3002 \u6b64\u5916\uff0c\u5728\u8f83\u9ad8\u6e29\u5ea6\u4e0b\uff0cNSPO\u57fa\u8d28\u4e2d\u7f3a\u9677\u80fd\u7ea7\u7684\u4f4d\u7f6e\u51b3\u5b9a\u4e86\u80fd\u91cf\u8f6c\u79fb\u5230 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u6548\u7387\u3002\u5728 \\(\\beta\\) \u76f8\u4e2d\u5177\u6709\u8f83\u4f4e\u6d3b\u5316\u80fd \\(0.75 eV\\) \u548c \\(0.80 eV\\) \uff08\u6d45\u9677\u9631\uff09\u7684\u7f3a\u9677\u80fd\u7ea7\u8868\u660e\uff0c\u5728 \\(370nm\\) \u6fc0\u53d1\u4e0b\uff0c\u4ece\u9677\u9631\u5230 \\(Eu^{2+}5 d \\(\u5e26\u7684\u6709\u6548\u80fd\u91cf\u8f6c\u79fb\u5bfc\u81f4RT\u4ee5\u4e0a\u7684\u6700\u9ad8\u53d1\u5c04\u5f3a\u5ea6\uff08\u4f9d\u8d56\u4e8e\u6e29\u5ea6\u7684PL\u5149\u8c31\uff0c\u56fe4a\uff09\u3002\u7136\u800c\uff0c\u5728\\) 350\\) \u548c \\(420 nm\\) \u4e4b\u95f4\u7684\u4e0d\u540c\u6fc0\u53d1\u6ce2\u957f\u4e0b\u7684\u53d1\u5c04\u5149\u8c31\uff08\u8865\u5145\u56fe9\uff09\u5728 \\(\\gamma\\) \u76f8\u663e\u793a\u51fa\u6700\u5927\u53d1\u5c04\uff0c\u7279\u522b\u662f\u5728\u9ad8\u6fc0\u53d1\u80fd\u91cf \\(\\left(\\lambda_{ ex }=350\\right.\\) \u548c \\(360 nm\\) \u4e0b\uff09\u3002\u8fd9\u8868\u660e\u9ad8\u80fd\u6fc0\u53d1\u53ef\u4ee5\u91ca\u653e\u51fa\u5728 \\(\\gamma\\) \u76f8\u4e2d\u7684\u6df1\u9677\u9631\u7535\u5b50\uff0c\u4ece\u800c\u589e\u5f3a\u7f3a\u9677\u8bf1\u5bfc\u53d1\u5c04\u3002\u6b64\u5916\uff0c\u8d1f\u8d23\u96f6\u70ed\u731d\u706d\u6027\u8d28\u7684\u9677\u9631\u4e0d\u5b58\u5728\u4e8e\u79bb\u6563\u80fd\u7ea7\u4e2d\uff0c\u800c\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5bbd\u5e26\uff0c\u80fd\u91cf\u8303\u56f4\u4e3a \\(3.1-3.5 eV \\left(\\lambda_{ ex }=350-400 nm \\right)\\) \u3002\u8fd9\u4e9b\u7ed3\u679c\u5b8c\u5168\u5ffd\u7565\u4e86\u6211\u4eec\u53d1\u73b0\u7684\u5176\u4ed6\u53ef\u80fd\u89e3\u91ca\uff0c\u5373\u9ad8\u6e29\u9636\u6bb5 \\(\\beta\\) \u548c \\(\\gamma\\) \u76f8\u7684 \\(QE\\) \u66f4\u9ad8\u3002","title":"\\(\\text{NSPO:xEu} ^{2+}\\)\u7684\u96f6\u70ed\u731d\u706d\u6027\u80fd"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#led","text":"\\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u5b9e\u9645\u53ef\u884c\u6027\u901a\u8fc7\u4f7f\u7528\u8fd1\u7d2b\u5916LED\u82af\u7247 \\(\\left(\\lambda_{\\max }=365 nm \\right)\\) \u7684LED\u5236\u9020\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u7ed3\u679c\u5982\u56fe5\u6240\u793a\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5927\u529f\u7387LED\u7167\u660e\u91c7\u7528\u8303\u56f4\u4e3a \\(200-\\) \\(1,000 mA\\) \u7684\u9ad8\u901a\u91cf\u5de5\u4f5c\u7535\u6d41\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u548c\u5546\u7528 \\(Sr _{3} MgSi _{2} O _{8}: Eu ^{2+}\\left( SMS : Eu ^{2+}\\right)\\) \u8367\u5149\u7c89\u7684EL\u5f3a\u5ea6\u968f\u7740\u53c2\u8003UV LED\u82af\u7247\u7535\u6d41\u7684\u589e\u52a0\u800c\u589e\u52a0\uff08\u56fe5a\uff09\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684EL\u5f3a\u5ea6\u9ad8\u4e8e \\(600 mA\\) \uff0c\u800c\u5546\u4e1a \\(\\text{SMS:Eu}{ }^{2+}\\) \u548cUV LED\u82af\u7247\u7684EL\u5f3a\u5ea6\u5206\u522b\u7531\u4e8eLED\u7684\u9ad8 \\(TQ\\) \u548c\u6548\u7387\u4e0b\u964d\u800c\u964d\u4f4e\u5230 \\(800 mA\\) \u4ee5\u4e0a\uff08\u56fe5a\uff09\u3002\u5728WLED\u88c5\u7f6e\u4e2d\uff0c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \uff08\u7528\u4f5c\u84dd\u8272\u7ec4\u5206\uff09\u7684EL\u5728 \\(200-1000 mA\\) \u8303\u56f4\u5185\u589e\u52a0\uff0c\u5e76\u4e14\u4e0e \\(\\text{SMS:Eu}{ }^{2+}\\) \u76f8\u6bd4\u66f4\u9ad8\uff0c\u56e0\u4e3a\u540e\u8005\u7531\u4e8eTQ\u6027\u80fd\u5dee\u800c\u5728 \\(600 mA\\) \u4ee5\u4e0a\u6025\u5267\u964d\u4f4e\uff08\u56fe5b\uff0cc\uff09\u3002 \u5728\u5b9e\u9645\u7684WLED\u5c01\u88c5\u4e2d\uff0c\u70ed\u7a33\u5b9a\u8367\u5149\u7c89\u5c06\u5728\u5927\u529f\u7387LED\u64cd\u4f5c\u671f\u95f4\u7ef4\u6301\u989c\u8272\u5750\u6807 \\(^{4}\\) \u3002\u57fa\u4e8e \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684WLED\u7684\u989c\u8272\u5750\u6807\u5373\u4f7f\u5728 \\(1,000 mA\\) \u7684\u9ad8\u901a\u91cf\u7535\u6d41\u4e0b\u4ecd\u4fdd\u6301\u4e0d\u53d8\uff08\u56fe5d\uff09\u3002\u57fa\u4e8e \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684WLED\u7684\u663e\u8272\u6307\u6570\uff08CRI\uff09\u503c\u5728\u901a\u91cf\u7535\u6d41\u4e3a \\(1,000 mA\\) \u65f6\u9ad8\u8fbe88\uff0c\u5149\u901a\u91cf\u4e3a \\(\\sim 23 lm\\) \uff08\u8865\u5145\u88685\uff09\u3002\u5728 \\(1,000 mA\\) \u7535\u6d41\u4e0b\u7a33\u5b9a\u7684\u8272\u5750\u6807\u548c\u9ad8CRI\u503c\uff0888\uff09\u8bc1\u5b9e\u4e86 \\(\\text{NSPO:Eu} ^{2+}\\) \u8367\u5149\u7c89\u5728\u9ad8\u901a\u91cf\u7535\u6d41\u4e0b\u7684\u4f18\u5f02\u5149\u5b66\u548c\u96f6TQ\u6027\u80fd\u3002 \u6b64\u5916\uff0c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u84dd\u8272\u53d1\u5c04\u88ab\u5176\u4ed6\u8367\u5149\u7c89\u6210\u5206\u663e\u8457\u5438\u6536\uff0c\u5373\u9ec4\u8272\u53d1\u5c04 \\(La _{3} Si _{6} N _{11}: Ce ^{3+}\\) ( \\(LSN : Ce ^{3+}\\) ) \u548c\u7ea2\u8272\u53d1\u5c04 \\(( Sr , Ca ) AlSiN _{3}: Eu ^{2+}\\left( SCASN : Eu ^{2+}\\right)\\) \u8367\u5149\u7c89\u5236\u9020\uff08\u8865\u5145\u56fe10\uff09\uff0c\u63d0\u4f9b\u4e86 \\(\\text{NSPO:Eu} ^{2+}\\) \u7684\u84dd\u8272\u7ec4\u5206\u7684\u4f18\u52bf\uff0c\u53ef\u5728\u8f83\u9ad8\u6e29\u5ea6\u4e0b\u8fc7\u5ea6\u8865\u507f\u5176\u4ed6\u8367\u5149\u7c89\u6548\u7387\u7684\u4e0b\u964d\u3002 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027QE\u968f\u7740\u6e29\u5ea6\u7684\u5347\u9ad8\u800c\u589e\u52a0\u4ece\u5ba4\u6e29\u65f6\u7684 \\(\\left(64 \\%\\right.\\) \u589e\u52a0\u5230 \\(\\left.175^{\\circ} C \\right)\\) \u7684 \\(78 \\%\\) \uff0c\u8868\u73b0\u51fa\u96f6\u70ed\u731d\u706d\u7279\u6027\uff0c\u4e0e\u5546\u4e1a \\(LSN : Ce ^{3+}\\) \u548c \\(\\text{SCASN:Eu} ^{2+}\\) \u8367\u5149\u7c89\u4e0d\u540c\uff0c\u5b83\u4eec\u5728 \\(175^{\\circ} C\\) \u5904\u7684QE \\((\\sim 54-59 \\%)\\) \u8f83\u4f4e\uff08\u8865\u5145\u88686\uff09\u3002 \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u5438\u6536\u5206\u6570\u968f\u6e29\u5ea6\u5347\u9ad8\u800c\u4fdd\u6301\u4e0d\u53d8\uff0c\u8fd9\u8868\u660e\u589e\u5f3a\u7684QE\u4e0d\u662f\u7531\u9ad8\u6e29\u76f8\u5438\u6536\u5206\u6570\u7684\u589e\u52a0\u5f15\u8d77\u7684\uff08\u8865\u5145\u88687\uff09\u3002\u6240\u5236\u5907\u7684 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u57faWLED\uff08\u56fe5e\uff09\u5728 \\(1,000 mA\\) \u7684\u5916\u52a0\u7535\u6d41\u4e0b\u663e\u793a\u51fa\u660e\u4eae\u7684\u767d\u8272\u53d1\u5c04\uff08\u56fe5f\uff09\u3002\u8fd9\u4e9b\u7ed3\u679c\u8868\u660e\uff0c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u662f\u4e00\u79cd\u70ed\u7a33\u5b9a\u4e14\u7a33\u5b9a\u7684\u8367\u5149\u7c89\uff0c\u5177\u6709\u96f6\u70ed\u731d\u706d\u7279\u6027\uff0c\u53ef\u4ee5\u5728\u5927\u529f\u7387WLED\u7167\u660e\u4e2d\u7528\u4f5c\u84dd\u8272\u53d1\u5149\u8367\u5149\u7c89\u3002 \u603b\u4e4b\uff0c\u6211\u4eec\u901a\u8fc7\u5229\u7528\u9ad8\u6e29\u4e0b\u7f3a\u9677\u8bf1\u5bfc\u7684\u591a\u6001\u6027\uff0c\u6210\u529f\u5730\u5f00\u53d1\u4e86\u4e00\u79cd\u4e0d\u53d7\u70ed\u731d\u706d\u5f71\u54cd\u7684 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u3002\u8fd9\u79cd\u884c\u4e3a\u5f52\u56e0\u4e8e\u7531\u4e8e\u57fa\u8d28\u7684\u591a\u6001\u6027\u548c\u4ece\u7535\u5b50-\u7a7a\u7a74\u5bf9\u7ec4\u6210\u7684\u9677\u9631\u5230 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u80fd\u91cf\u8f6c\u79fb\u5bfc\u81f4\u8f90\u5c04\u590d\u5408\u800c\u5bfc\u81f4\u7684\u53d1\u5c04\u635f\u5931\u7684\u8865\u507f\u3002\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236NSPO\u57fa\u8d28\u4e2d\u7684 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u6d53\u5ea6\u6765\u63a7\u5236\u96f6\u70ed\u731d\u706d\u6027\u80fd\u3002\u5229\u7528\u79bb\u5b50\u5bfc\u7535\u591a\u6676\u6750\u6599\u7684\u6982\u5ff5\u6709\u671b\u4e3a\u5f00\u53d1\u4e0e\u7167\u660e\u6280\u672f\u76f8\u5173\u7684\u96f6\u70ed\u731d\u706d\u8367\u5149\u7c89\u6253\u5f00\u5927\u95e8\u3002","title":"\u767d\u5149LED\u7684\u5236\u5907\u4e0e\u6027\u80fd"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#_4","text":"\u56fe1|\u65b0\u578b\u84dd\u8272 \\(\\text{Na}_{3-2 x}\\text{Sc} _{2}(\\text{PO}_{4})_{3}: x \\text{Eu} ^{2+}( \\text{NSPO : x Eu} ^{2+})\\) \u8367\u5149\u7c89\u7684\u7ed3\u6784\u8868\u5f81 a, \u4e09\u79cd\u4e0d\u540c\u6676\u4f53\u5b66Na\u4f4d\u70b9\u7684\u56fe\u89e3\uff0c\u5373\uff1aNa1, Na2, \u548c Na3\uff0c\u5206\u522b\u5728 \\(\\text{NSPO:xEu }^{2+}\\) \u4e2d\u6709\u516d\u4e2a\u3001\u4e03\u4e2a\u548c\u516b\u4e2a\u4f4d\u70b9\u3002 b, \\(\\text{NSPO:xEu }^{2+}\\) \u7684\u6676\u4f53\u7ed3\u6784\uff0c\u6df1\u84dd\u8272\u3001\u6a59\u8272\u3001\u7ea2\u8272\u548c\u6d45\u84dd\u84dd\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u3001\u78f7\u5f62\u6210\u7684 \\(\\text{PO}_{4}\\) \u56db\u9762\u4f53\u5355\u5143\u3001\u94aa\u5f62\u6210\u7684 \\(\\text{ScO} _{6}\\) \u516b\u9762\u4f53\u5355\u5143\u548c\u94a0\u79bb\u5b50\u3002\u7531\u4e09\u4e2a \\(\\text{PO}_{4}\\) \u56db\u9762\u4f53\u9694\u5f00\uff0c\u5e76\u7531\u4e00\u4e2a\u5171\u4eab\u6c27\u6c14\u7684\u4e00\u89d2\u8fde\u63a5\u3002\u8fd9\u4e9b \\(2(\\text{ScO} _{6})-3(\\text{PO}_{4})\\) \u5355\u5143\u5c01\u88c5\u5728\u4e00\u4e2a\u51c6\u7acb\u65b9\u521a\u6027\u6846\u67b6\u4e2d\uff0c\u51b3\u5b9a\u4e86\u94a0\u79bb\u5b50\u5c40\u90e8\u5316\u7684\u76f8\u4ea4\u901a\u9053\u7684\u4e09\u7ef4\u6676\u683c\u3002 c\uff0cd, \u6839\u636e\u6d4b\u91cf\u6570\u636e\u548c\u57fa\u4e8eRietveld\u7cbe\u4fee\u7684\u8ba1\u7b97\u5256\u9762\uff0c\u5206\u522b\u5bf9 \\(\\text{NSPO:xEu }^{2+}\\) \u8fdb\u884cX\u5c04\u7ebf\u7c89\u672b\u884d\u5c04\u548c\u4e2d\u5b50\u7c89\u672b\u884d\u5c04\u3002 <<<<<<< HEAD \u56fe \\(2 \\mid\\) \\(\\text{NSPO : x Eu} ^{2+}\\) \u7684\u5149\u5b66\u548c\u96f6\u70ed\u731d\u706d\u6027\u80fd a\uff0c \\(\\text{NSPO : x Eu} ^{2+}\\) \u7684\u6fc0\u53d1\u548c\u53d1\u5c04\u5149\u8c31\u3002 b\uff0c \\(\\text{NSPO : x Eu} ^{2+}\\) \u5728 370 nm \u6fc0\u53d1\u4e0b\u7684\u5f52\u4e00\u5316\u53d1\u5c04\u5f3a\u5ea6\u4e0e \\(\\text{Eu}^{2+}\\) \u6d53\u5ea6\u7684\u51fd\u6570\u5173\u7cfb\u3002 c, \\(\\text{NSPO : 0.07 Eu}^{2+}\\) \u8367\u5149\u7c89\u5728 \\(370nm \\(\u6fc0\u53d1\u4e0b\u7684\u6e29\u5ea6\u68af\u5ea6\u53d1\u5c04\u5149\u8c31\uff0c\u6e29\u5ea6\u8303\u56f4\\) 25-200^{\\circ}C \\(\uff0c\u6e29\u5ea6\u95f4\u9694\\) 50^{\\circ}C (\u3002 d, \\(\\text{NSPO : 0.07 Eu}^{2+}\\) \u5728\\) 370 nm\\) \u6fc0\u53d1\u4e0b\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027\u5f52\u4e00\u5316\u53d1\u5c04\u5149\u8c31\uff0c\u4e0e\u52a0\u70ed\u5230 \\(200^{\\circ} C\\) \u65f6\u7684\u5e02\u552eLED\u8367\u5149\u7c89\u76f8\u6bd4\u3002 \u56fe3 | \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u591a\u6001\u6027\u53ca\u5176\u7f3a\u9677\u5f62\u6210 \u3002 a , b , \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u4ece25\u2103\u52a0\u70ed\u5230250\u2103\u5e76\u968f\u540e\u51b7\u5374\u5230 \\(25{ }^{\\circ} C\\) \u65f6\u7684NSPO\u7684\u6e29\u5ea6\u68af\u5ea6XRD\u56fe\uff08a\uff09\u548c\u9009\u5b9a\u7684XRD\u56fe\uff08b\uff09\u3002 c, \u4ece25\u2103\u52a0\u70ed\u81f3200\u2103\u5e76\u968f\u540e\u51b7\u5374\u81f325\u2103\u65f6 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u6e29\u5ea6\u76f8\u5173\u62c9\u66fc\u5149\u8c31\u3002\u56fe\u4e2d\u663e\u793a\u4e86 \\(Sc - O\\) \u548c \\(PO _{4}\\) \u56db\u9762\u4f53\u7684\u7ed3\u5408\uff0c\u5176\u4e2d\u7ea2\u8272\u3001\u6a59\u8272\u548c\u84dd\u8272\u7403\u4f53\u5206\u522b\u4ee3\u8868\u94aa\u3001\u78f7\u548c\u6c27\u3002 d, NSPO\u57fa\u8d28\u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684\u6e29\u5ea6\u76f8\u5173\u963b\u6297\u8c31\uff1a\u4ece25\u2103\u52a0\u70ed\u5230230\u2103\uff0c\u7136\u540e\u51b7\u5374\u523025\u2103\u3002 e, NSPO\u57fa\u8d28\u5728 \\(25-300^{\\circ} C\\) \u6e29\u5ea6\u8303\u56f4\u5185\u7684\u70ed\u91ca\u5149\u66f2\u7ebf\u3002 \u56fe4 | \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u96f6\u70ed\u731d\u706d\u8fc7\u7a0b\u3002 a, \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u5728370 nm\u6fc0\u53d1\u4e0b\uff0c\u572825\u81f3 \\(200^{\\circ} C\\) \u52a0\u70ed\u5e76\u968f\u540e\u5728\u7a7a\u6c14\u4e2d\u51b7\u5374\u81f3 \\(25^{\\circ} C\\) \u65f6\u7684\u6e29\u5ea6\u76f8\u5173\u5f52\u4e00\u5316\u53d1\u5c04\u5149\u8c31\uff08\u53d1\u5c04\u9762\u79ef\u548c\u9ad8\u5ea6\uff09\u3002 b-f\uff0c \u5177\u6709\u516d-\uff08b\uff09\u3001\u4e03-\uff08c\uff09\u548c\u516b\u914d\u4f4d\uff08d\uff09Na\u4f4d\u7684\u5355\u659c\u76f8 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u5bc6\u5ea6\u6cdb\u51fd\u7406\u8bba\u8ba1\u7b97\uff0c\u5176\u4e2d\u84dd\u8272\u548c\u6d77\u519b\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u79bb\u5b50\u548c\u94a0\u79bb\u5b50\uff0c\u4ee5\u53ca\u5177\u6709\u516d-\uff08e\uff09\u548c\u516b\u914d\u4f4d\uff08f\uff09Na\u4f4d\u7684\u516d\u89d2 \\(\\gamma\\) \u76f8\uff0c\u5176\u4e2d\u84dd\u8272\u548c\u7eff\u8272\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u79bb\u5b50\u548c\u94a0\u79bb\u5b50\u3002 g\uff0c NSPO\u7684\u8870\u53d8\u65f6\u95f4\u6d4b\u91cf\uff1a\u5728 355 nm \u6fc0\u53d1\u548c 453 nm \u53d1\u5c04\u6e29\u5ea6\u8303\u56f4\u5185\u76d1\u6d4b0 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \\(25-200^{\\circ} C\\) \u3002\u56fe\u4e2d\u63cf\u7ed8\u4e86\u8870\u51cf\u66f2\u7ebf\u7684\u660e\u663e\u5dee\u5f02\u3002 h, \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u96f6\u70ed\u731d\u706d\u8fc7\u7a0b\u673a\u7406\u7684\u793a\u610f\u56fe\u3002\u53d1\u5c04\u8fc7\u7a0b\u7684\u7ebf\u5bbd\u63cf\u8ff0\u4e86\u589e\u5f3a\u53d1\u5c04\u5f3a\u5ea6\u7684\u7a0b\u5ea6\u3002","title":"\u9644\u5f55"},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#_5","text":"\u56fe \\(2 \\mid\\) \\(\\text{NSPO : x Eu} ^{2+}\\) \u7684\u5149\u5b66\u548c\u96f6\u70ed\u731d\u706d\u6027\u80fd a\uff0c \\(\\text{NSPO : x Eu} ^{2+}\\) \u7684\u6fc0\u53d1\u548c\u53d1\u5c04\u5149\u8c31\u3002 b\uff0c \\(\\text{NSPO : x Eu} ^{2+}\\) \u5728 370 nm \u6fc0\u53d1\u4e0b\u7684\u5f52\u4e00\u5316\u53d1\u5c04\u5f3a\u5ea6\u4e0e \\(\\text{Eu}^{2+}\\) \u6d53\u5ea6\u7684\u51fd\u6570\u5173\u7cfb\u3002 c, \\(\\text{NSPO : 0.07 Eu}^{2+}\\) \u8367\u5149\u7c89\u5728 \\(370nm \\(\u6fc0\u53d1\u4e0b\u7684\u6e29\u5ea6\u68af\u5ea6\u53d1\u5c04\u5149\u8c31\uff0c\u6e29\u5ea6\u8303\u56f4\\) 25-200^{\\circ}C \\(\uff0c\u6e29\u5ea6\u95f4\u9694\\) 50^{\\circ}C (\u3002 d, \\(\\text{NSPO : 0.07 Eu}^{2+}\\) \u5728\\) 370 nm\\) \u6fc0\u53d1\u4e0b\u7684\u6e29\u5ea6\u4f9d\u8d56\u6027\u5f52\u4e00\u5316\u53d1\u5c04\u5149\u8c31\uff0c\u4e0e\u52a0\u70ed\u5230 \\(200^{\\circ} C\\) \u65f6\u7684\u5e02\u552eLED\u8367\u5149\u7c89\u76f8\u6bd4\u3002 \u56fe3 | \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u591a\u6001\u6027\u53ca\u5176\u7f3a\u9677\u5f62\u6210 \u3002 a , b , \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u4ece25\u2103\u52a0\u70ed\u5230250\u2103\u5e76\u968f\u540e\u51b7\u5374\u5230 \\(25{ }^{\\circ} C\\) \u65f6\u7684NSPO\u7684\u6e29\u5ea6\u68af\u5ea6XRD\u56fe\uff08a\uff09\u548c\u9009\u5b9a\u7684XRD\u56fe\uff08b\uff09\u3002 c, \u4ece25\u2103\u52a0\u70ed\u81f3200\u2103\u5e76\u968f\u540e\u51b7\u5374\u81f325\u2103\u65f6 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u6e29\u5ea6\u76f8\u5173\u62c9\u66fc\u5149\u8c31\u3002\u56fe\u4e2d\u663e\u793a\u4e86 \\(Sc - O\\) \u548c \\(PO _{4}\\) \u56db\u9762\u4f53\u7684\u7ed3\u5408\uff0c\u5176\u4e2d\u7ea2\u8272\u3001\u6a59\u8272\u548c\u84dd\u8272\u7403\u4f53\u5206\u522b\u4ee3\u8868\u94aa\u3001\u78f7\u548c\u6c27\u3002 d, NSPO\u57fa\u8d28\u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u7684\u6e29\u5ea6\u76f8\u5173\u963b\u6297\u8c31\uff1a\u4ece25\u2103\u52a0\u70ed\u5230230\u2103\uff0c\u7136\u540e\u51b7\u5374\u523025\u2103\u3002 e, NSPO\u57fa\u8d28\u5728 \\(25-300^{\\circ} C\\) \u6e29\u5ea6\u8303\u56f4\u5185\u7684\u70ed\u91ca\u5149\u66f2\u7ebf\u3002 \u56fe4 | \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u7684\u96f6\u70ed\u731d\u706d\u8fc7\u7a0b\u3002 a, \\(\\text{NSPO:0.01Eu} ^{2+}\\) \u548c \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u5728370 nm\u6fc0\u53d1\u4e0b\uff0c\u572825\u81f3 \\(200^{\\circ} C\\) \u52a0\u70ed\u5e76\u968f\u540e\u5728\u7a7a\u6c14\u4e2d\u51b7\u5374\u81f3 \\(25^{\\circ} C\\) \u65f6\u7684\u6e29\u5ea6\u76f8\u5173\u5f52\u4e00\u5316\u53d1\u5c04\u5149\u8c31\uff08\u53d1\u5c04\u9762\u79ef\u548c\u9ad8\u5ea6\uff09\u3002 b-f\uff0c \u5177\u6709\u516d-\uff08b\uff09\u3001\u4e03-\uff08c\uff09\u548c\u516b\u914d\u4f4d\uff08d\uff09Na\u4f4d\u7684\u5355\u659c\u76f8 \\(\\text{Eu} ^{2+}\\text{5d}\\) \u5e26\u7684\u5bc6\u5ea6\u6cdb\u51fd\u7406\u8bba\u8ba1\u7b97\uff0c\u5176\u4e2d\u84dd\u8272\u548c\u6d77\u519b\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u79bb\u5b50\u548c\u94a0\u79bb\u5b50\uff0c\u4ee5\u53ca\u5177\u6709\u516d-\uff08e\uff09\u548c\u516b\u914d\u4f4d\uff08f\uff09Na\u4f4d\u7684\u516d\u89d2 \\(\\gamma\\) \u76f8\uff0c\u5176\u4e2d\u84dd\u8272\u548c\u7eff\u8272\u7403\u4f53\u5206\u522b\u4ee3\u8868\u6c27\u79bb\u5b50\u548c\u94a0\u79bb\u5b50\u3002 g\uff0c NSPO\u7684\u8870\u53d8\u65f6\u95f4\u6d4b\u91cf\uff1a\u5728 355 nm \u6fc0\u53d1\u548c 453 nm \u53d1\u5c04\u6e29\u5ea6\u8303\u56f4\u5185\u76d1\u6d4b0 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \\(25-200^{\\circ} C\\) \u3002\u56fe\u4e2d\u63cf\u7ed8\u4e86\u8870\u51cf\u66f2\u7ebf\u7684\u660e\u663e\u5dee\u5f02\u3002 h, \\(\\text{NSPO:xEu} ^{2+}\\) \u8367\u5149\u7c89\u96f6\u70ed\u731d\u706d\u8fc7\u7a0b\u673a\u7406\u7684\u793a\u610f\u56fe\u3002\u53d1\u5c04\u8fc7\u7a0b\u7684\u7ebf\u5bbd\u63cf\u8ff0\u4e86\u589e\u5f3a\u53d1\u5c04\u5f3a\u5ea6\u7684\u7a0b\u5ea6\u3002 main \u56fe5 | \u5236\u4f5c\u7684pc-LED\u5728\u9ad8\u901a\u91cf\u5de5\u4f5c\u7535\u6d41\u4e0b\u7684\u6027\u80fd\u3002 a\uff0c \u5355\u4e2a\u84dd\u8272\u8367\u5149\u7c89\u7684\u7535\u81f4\u53d1\u5149\uff08EL\uff09\u5149\u8c31\uff0c\u5373 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u3001\u5546\u7528 \\(Sr _{3} MgSi _{2} O _{8}: Eu ^{2+}\\left( SMS : Eu ^{2+}\\right)\\) \uff0c\u5728100\u6beb\u5b89\u7684\u9ad8\u901a\u91cf\u5de5\u4f5c\u7535\u6d41\u4e0b\u6fc0\u53d1365 nm\uff0c\u5176\u4e2d\u5728 100 mA \u5904\u7684EL\u5f3a\u5ea6\u88ab\u6807\u51c6\u5316\u3002\u6240\u6709\u7684EL\u5149\u8c31\u90fd\u662f\u4f7f\u7528 365 nm LED \u82af\u7247\u4f5c\u4e3a\u6fc0\u53d1\u6e90\u6d4b\u91cf\u7684\u3002 b\uff0c \u4f7f\u7528 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u4f5c\u4e3a\u84dd\u8272\u7ec4\u5206\u7684WLED\u7684EL\uff0c\u4e0e\u5546\u4e1a \\(\\text{SMS:Eu}^{2+}\\) \u8367\u5149\u7c89\u4e0e\u9ec4\u8272\u53d1\u5c04 \\(\\text{LSN:Ce}^{3+}\\) \u548c\u7ea2\u8272\u53d1\u5c04 \\(\\text{SCASN:Eu}^{2+}\\) \u8367\u5149\u7c89\u7ec4\u5408\u76f8\u6bd4\u3002 c\uff0c \u4f7f\u7528 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u4f5c\u4e3a\u84dd\u8272\u7ec4\u5206\u7684WLED\u7684EL\u5149\u8c31\u3002 d\uff0c \u5236\u9020\u7684 \\(\\text{NSPO:0.03Eu} ^{2+}\\) \u539f\u578bWLED\u4e0e\u57fa\u4e8e\u5546\u7528\u84dd\u8272 \\(\\text{SMS:Eu}^{2+}\\) \u8367\u5149\u7c89\u7684WLED\u7684\u8272\u5ea6\u5750\u6807\u8fdb\u884c\u6bd4\u8f83\u3002 e\uff0cf\uff0c \\(\\text{NSPO:0.03Eu} ^{2+}\\) WLED \u539f\u578b\uff0c\u6ca1\u65bd\u52a0\uff08e\uff09\u548c\u65bd\u52a0\uff08f\uff09\u9ad8\u901a\u91cf\u5de5\u4f5c\u7535\u6d41\u7684\u56fe\u50cf\u3002","title":""},{"location":"%E6%AF%95%E8%AE%BE/%E7%BF%BB%E8%AF%91/#_6","text":"Reineke, S. Complementary LED technologies. Nat. Mater. 14, 459-462 (2015). Pust, P, Schmidt, P. J. \\& Schnick, W. A revolution in lighting. Nat. Mater. 14, 454-458 (2015). Xia, Z. \\& Liu, R.-S. Tunable blue-green color emission and energy transfer of \\(Ca _{2} Al _{3} O _{6} F : Ce ^{3+}, Tb ^{3+}\\) phosphors for near-UV white LEDs. J. Phys. Chem. \\(C\\) 116, 15604-15609 (2012). Lin, C. C. \\& Liu, R.-S. Advances in phosphors for light-emitting diodes. J. Phys. Chem. Lett. 2, 1268-1277 (2011). Daicho, H. et al. A novel phosphor for glareless white light-emitting diodes. Nat. Commun. 3, 1132 (2012). Zhu, H. et al. Highly efficient non-rare-earth red emitting phosphor for warm white light-emitting diodes. Nat. Commun. 5, 4312 (2014). Mu\u00f1oz, G. H., de la Cruz, C. L., Mu\u00f1oz, A. F. \\& Rubio, J. O. High-temperature luminescence properties of \\(Eu ^{2+}\\) -activated alkali halide phosphor materials. J. Mater. Sci. Lett. 7, 1310-1312 (1988). Blasse, G. \\& Grabmaier, B. Luminescent Materials (Springer, 1994). Dorenbos, P. Thermal quenching of \\(Eu ^{2+} 5 d-4 f\\) luminescence in inorganic compounds. J. Phys. Condens. Matter 17, 8103-8111 (2005). Blasse, G. Thermal quenching of characteristic fluorescence. J. Chem. Phys. 51, 3529-3530 (1969). Takeda, T., Hirosaki, N., Funahshi, S. \\& Xie, R.-J. Narrow-band green-emitting phosphor \\(Ba _{2} LiSi _{7} AlN _{12}: Eu ^{2+}\\) with high thermal stability discovered by a single particle diagnosis approach. Chem. Mater. 27, 5892-5898 (2015). Xie, R.-J. \\& Hirosaki, N. Silicon-based oxynitride and nitride phosphors for white LEDs-a review. Sci. Tech. Adv. Mater. 8, 588-600 (2007). Chen, L., Lin, C.-C., Yeh, C.-W. \\& Liu, R.-S. Light converting inorganic phosphors for white light-emitting diodes. Materials 3, 2172-2195 (2010). Bachmann, V. et al. Color point tuning for \\(( Sr , Ca , Ba ) Si _{2} O _{2} N _{2}\\) :Eu \\(^{2+}\\) for white light LEDs. Chem. Mater. 21, 316-325 (2009). Im, W. B. et al. Efficient and color-tunable oxyfluoride solid solution phosphors for solid-state white lighting. Adv. Mater. 23, 2300-2305 (2011). \\(Im , W . B\\) . et al. \\(Sr _{2.975-x} Ba _{x} Ce _{0.025} AlO _{4} F\\) : a highly efficient green-emitting oxyfluoride phosphor for solid state white lighting. Chem. Mater. 22, 2842-2849 (2010). Zhuang, J. et al. The improvement of moisture resistance and thermal stability of \\(Ca _{3} SiO _{4} Cl _{2}: Eu ^{2+}\\) phosphor coated with \\(SiO _{2}\\) . Appl. Surf. Sci. 257, \\(4350-4353(2011)\\) Lee, H. S. \\& Yoo, J. W. Yellow phosphors coated with \\(TiO _{2}\\) for the enhancement of photoluminescence and thermal stability. Appl. Surf. Sci. 257, 8355-8359 (2011). Nakanishi, T. \\& Tanabe, S. Preparation and luminescent properties of \\(Eu ^{2+}\\) -activated glass ceramic phosphor precipitated with \\(\\beta- Ca _{2} SiO _{4}\\) and \\(Ca _{3} Si _{2} O _{7}\\) . Phys. Status Solidi A 206, 919-922 (2009). Bykov, A. B. et al. Superionic conductors \\(Li _{3} M _{2}\\left( PO _{4}\\right)_{3}( M = Fe , Sc , Cr )\\) : Synthesis, structure and electrophysical properties. Solid State Ion. \\(3 8\\) , \\(31-52(1990)\\) . de la Roch\u00e8re, M. et al. NASICON type materials- \\(Na _{3} M _{2}\\left( PO _{4}\\right)_{3}( M = Sc , Cr\\) , \\(Fe ): Na ^{+}- Na ^{+}\\) correlations and phase transitions. Solid State Ion. 9-10, 825-828 (1983). Masui, T., Koyabu, K., Tamura, S. \\& Imanaka, N. Synthesis of a new NASICON-type blue luminescent material. J. Alloys Compd. 418, 73-76 (2006). Saradhi, M., Pralong, V., Varadaraju, U. \\& Raveau, B. Facile chemical insertion of lithium in \\(Eu _{0.33} Zr _{2}\\left( PO _{4}\\right)_{3}\\) -an elegant approach for tuning the photoluminescence properties. Chem. Mater. 21, 1793-1795 (2009). Delbecq, C. J., Marshall, S. A. \\& Susman, S. Evidence for a structural phase change in the fast-ion conductor \\(Na _{3} Sc _{2} P _{3} O _{12}\\) . Solid State Ion. 1 , 145-149 (1980). Mundy, J., Shenoy, G. \\& Vashishta, P. Fast ion transport in solids: electrodes, and electrolytes Proc. Int. Conf. Fast Ion Transport in Solids, Electrodes, and Electrolytes (Elsevier North Holland, 1979). Wickleder, M. S. Inorganic lanthanide compounds with complex anions. Chem.Rev. 102, 2011-2088 (2002). Sorokin, \\(N\\) . I. \\(Na ^{+}\\) -ion conductivity of double phosphate \\(Na _{3} Sc _{2}\\left( PO _{4}\\right)_{3}\\) in the region of the \\(\\beta-\\gamma\\) transition. Phys. Solid State 56, 678-681 \\((2014)\\) . Collin, G., Comes, \\(R\\) ., Boilot, J. \\& Colomban, P. Disorder of tetrahedra in Nasicon-type structure-I.: \\(Na _{3} Sc _{2}\\left( PO _{4}\\right)_{3}\\) : structures and ion-ion correlations.J. Phys. Chem. Solids 47, 843-854 \\((1986)\\) . Winand, J. M., Rulmont, A. \\& Tarte, P. Ionic conductivity of the \\(Na _{1+x} M _{x} IIIZr _{2-x}\\left( PO _{4}\\right)_{3}\\) systems \\(( M = Al , Ga , Cr , Fe , Sc , In , Y , Yb )\\) . J. Mater.Sci. 25, 4008-4013 (1990). Keen, D. A. Disordering phenomena in superionic conductors. J. Phys.Condens. Matter \\(14, R 819- R 857\\) (2002). Mazza, D. Modeling ionic conductivity in nasicon structures. J. Solid StateChem. 156, 154-160 (2001). Pan, Z., Lu, Y.-Y. \\& Liu, F. Sunlight-activated long-persistent luminescence in the near-infrared from \\(Cr ^{3+}\\) -doped zinc gallogermanates. Nat. Mater. 11, 58-63 (2012). Garlick, G. \\& Gibson, A. The electron trap mechanism of luminescence in sulphide and silicate phosphors. Proc. Phys. Soc. 60, 574-590 (1948). Van den Eeckhout, K., Smet, P. F. \\& Poelman, D. Persistent luminescence in \\(Eu ^{2+}\\) -doped compounds: a review. Materials 3, 2536-2566 (2010).","title":"\u53c2\u8003\u6587\u732e"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/","text":"1.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u6027\u8d28\u548c\u6839\u672c\u5b97\u65e8 \u00b6 \u6027\u8d28\uff1a \u4e2d\u56fd\u5171\u4ea7\u515a\u662f\u4e2d\u56fd\u5de5\u4eba\u9636\u7ea7\u7684\u5148\u950b\u961f\uff0c\u540c\u65f6\u662f\u4e2d\u56fd\u4eba\u6c11\u548c\u4e2d\u534e\u6c11\u65cf\u7684\u5148\u950b\u961f\uff0c\u662f\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u4e8b\u4e1a\u7684\u9886\u5bfc\u6838\u5fc3\uff0c\u4ee3\u8868\u4e2d\u56fd\u5148\u8fdb\u751f\u4ea7\u529b\u7684\u53d1\u5c55\u8981\u6c42\uff0c\u4ee3\u8868\u4e2d\u56fd\u5148\u8fdb\u6587\u5316\u7684\u524d\u8fdb\u65b9\u5411\uff0c\u4ee3\u8868\u4e2d\u56fd\u6700\u5e7f\u5927\u4eba\u6c11\u7684\u6839\u672c\u5229\u76ca\u3002 \u6839\u672c\u5b97\u65e8\uff1a \u5168\u5fc3\u5168\u610f\u4e3a\u4eba\u6c11\u670d\u52a1 2.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u884c\u52a8\u6307\u5357 \u00b6 \u4e2d\u56fd\u5171\u4ea7\u515a\u4ee5\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u3001\u6bdb\u6cfd\u4e1c\u601d\u60f3\u3001\u9093\u5c0f\u5e73\u7406\u8bba\u3001\u201c\u4e09\u4e2a\u4ee3\u8868\u201d\u91cd\u8981\u601d\u60f3\u3001\u79d1\u5b66\u53d1\u5c55\u89c2\u3001\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u601d\u60f3\u4f5c\u4e3a\u81ea\u5df1\u7684\u884c\u52a8\u6307\u5357\u3002 3.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u6700\u9ad8\u7406\u60f3\u548c\u594b\u6597\u76ee\u6807 \u00b6 \u515a\u7684\u6700\u9ad8\u7406\u60f3\u548c\u6700\u7ec8\u76ee\u6807\u662f\u5b9e\u73b0\u5171\u4ea7\u4e3b\u4e49\u3002 \u4eba\u6c11\u5bf9\u7f8e\u597d\u751f\u6d3b\u7684\u5411\u5f80\u5c31\u662f\u6211\u4eec\u7684\u594b\u6597\u76ee\u6807 4.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u7ec4\u7ec7\u5236\u5ea6\u548c\u9886\u5bfc\u5236\u5ea6 \u00b6 \u7ec4\u7ec7\u5236\u5ea6 \u00b6 \u7b2c\u5341\u6761\u3000\u515a\u662f\u6839\u636e\u81ea\u5df1\u7684\u7eb2\u9886\u548c\u7ae0\u7a0b\uff0c\u6309\u7167\u6c11\u4e3b\u96c6\u4e2d\u5236\u7ec4\u7ec7\u8d77\u6765\u7684\u7edf\u4e00\u6574\u4f53\u3002\u515a\u7684\u6c11\u4e3b\u96c6\u4e2d\u5236\u7684\u57fa\u672c\u539f\u5219\u662f\uff1a \uff08\u4e00\uff09\u515a\u5458\u4e2a\u4eba\u670d\u4ece\u515a\u7684\u7ec4\u7ec7\uff0c\u5c11\u6570\u670d\u4ece\u591a\u6570\uff0c\u4e0b\u7ea7\u7ec4\u7ec7\u670d\u4ece\u4e0a\u7ea7\u7ec4\u7ec7\uff0c\u5168\u515a\u5404\u4e2a\u7ec4\u7ec7\u548c\u5168\u4f53\u515a\u5458\u670d\u4ece\u515a\u7684\u5168\u56fd\u4ee3\u8868\u5927\u4f1a\u548c\u4e2d\u592e\u59d4\u5458\u4f1a\u3002 \uff08\u4e8c\uff09\u515a\u7684\u5404\u7ea7\u9886\u5bfc\u673a\u5173\uff0c\u9664\u5b83\u4eec\u6d3e\u51fa\u7684\u4ee3\u8868\u673a\u5173\u548c\u5728\u975e\u515a\u7ec4\u7ec7\u4e2d\u7684\u515a\u7ec4\u5916\uff0c\u90fd\u7531\u9009\u4e3e\u4ea7\u751f\u3002 \uff08\u4e09\uff09\u515a\u7684\u6700\u9ad8\u9886\u5bfc\u673a\u5173\uff0c\u662f\u515a\u7684\u5168\u56fd\u4ee3\u8868\u5927\u4f1a\u548c\u5b83\u6240\u4ea7\u751f\u7684\u4e2d\u592e\u59d4\u5458\u4f1a\u3002\u515a\u7684\u5730\u65b9\u5404\u7ea7\u9886\u5bfc\u673a\u5173\uff0c\u662f\u515a\u7684\u5730\u65b9\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u548c\u5b83\u4eec\u6240\u4ea7\u751f\u7684\u59d4\u5458\u4f1a\u3002\u515a\u7684\u5404\u7ea7\u59d4\u5458\u4f1a\u5411\u540c\u7ea7\u7684\u4ee3\u8868\u5927\u4f1a\u8d1f\u8d23\u5e76\u62a5\u544a\u5de5\u4f5c\u3002 \uff08\u56db\uff09\u515a\u7684\u4e0a\u7ea7\u7ec4\u7ec7\u8981\u7ecf\u5e38\u542c\u53d6\u4e0b\u7ea7\u7ec4\u7ec7\u548c\u515a\u5458\u7fa4\u4f17\u7684\u610f\u89c1\uff0c\u53ca\u65f6\u89e3\u51b3\u4ed6\u4eec\u63d0\u51fa\u7684\u95ee\u9898\u3002\u515a\u7684\u4e0b\u7ea7\u7ec4\u7ec7\u65e2\u8981\u5411\u4e0a\u7ea7\u7ec4\u7ec7\u8bf7\u793a\u548c\u62a5\u544a\u5de5\u4f5c\uff0c\u53c8\u8981\u72ec\u7acb\u8d1f\u8d23\u5730\u89e3\u51b3\u81ea\u5df1\u804c\u8d23\u8303\u56f4\u5185\u7684\u95ee\u9898\u3002\u4e0a\u4e0b\u7ea7\u7ec4\u7ec7\u4e4b\u95f4\u8981\u4e92\u901a\u60c5\u62a5\u3001\u4e92\u76f8\u652f\u6301\u548c\u4e92\u76f8\u76d1\u7763\u3002\u515a\u7684\u5404\u7ea7\u7ec4\u7ec7\u8981\u6309\u89c4\u5b9a\u5b9e\u884c\u515a\u52a1\u516c\u5f00\uff0c\u4f7f\u515a\u5458\u5bf9\u515a\u5185\u4e8b\u52a1\u6709\u66f4\u591a\u7684\u4e86\u89e3\u548c\u53c2\u4e0e\u3002 \uff08\u4e94\uff09\u515a\u7684\u5404\u7ea7\u59d4\u5458\u4f1a\u5b9e\u884c\u96c6\u4f53\u9886\u5bfc\u548c\u4e2a\u4eba\u5206\u5de5\u8d1f\u8d23\u76f8\u7ed3\u5408\u7684\u5236\u5ea6\u3002\u51e1\u5c5e\u91cd\u5927\u95ee\u9898\u90fd\u8981\u6309\u7167\u96c6\u4f53\u9886\u5bfc\u3001\u6c11\u4e3b\u96c6\u4e2d\u3001\u4e2a\u522b\u915d\u917f\u3001\u4f1a\u8bae\u51b3\u5b9a\u7684\u539f\u5219\uff0c\u7531\u515a\u7684\u59d4\u5458\u4f1a\u96c6\u4f53\u8ba8\u8bba\uff0c\u4f5c\u51fa\u51b3\u5b9a\uff1b\u59d4\u5458\u4f1a\u6210\u5458\u8981\u6839\u636e\u96c6\u4f53\u7684\u51b3\u5b9a\u548c\u5206\u5de5\uff0c\u5207\u5b9e\u5c65\u884c\u81ea\u5df1\u7684\u804c\u8d23\u3002 \uff08\u516d\uff09\u515a\u7981\u6b62\u4efb\u4f55\u5f62\u5f0f\u7684\u4e2a\u4eba\u5d07\u62dc\u3002\u8981\u4fdd\u8bc1\u515a\u7684\u9886\u5bfc\u4eba\u7684\u6d3b\u52a8\u5904\u4e8e\u515a\u548c\u4eba\u6c11\u7684\u76d1\u7763\u4e4b\u4e0b\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u5207\u4ee3\u8868\u515a\u548c\u4eba\u6c11\u5229\u76ca\u7684\u9886\u5bfc\u4eba\u7684\u5a01\u4fe1\u3002 \u7b2c\u5341\u4e00\u6761\u3000\u515a\u7684\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u7684\u4ee3\u8868\u548c\u59d4\u5458\u4f1a\u7684\u4ea7\u751f\uff0c\u8981\u4f53\u73b0\u9009\u4e3e\u4eba\u7684\u610f\u5fd7\u3002\u9009\u4e3e\u91c7\u7528\u65e0\u8bb0\u540d\u6295\u7968\u7684\u65b9\u5f0f\u3002\u5019\u9009\u4eba\u540d\u5355\u8981\u7531\u515a\u7ec4\u7ec7\u548c\u9009\u4e3e\u4eba\u5145\u5206\u915d\u917f\u8ba8\u8bba\u3002\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u5019\u9009\u4eba\u6570\u591a\u4e8e\u5e94\u9009\u4eba\u6570\u7684\u5dee\u989d\u9009\u4e3e\u529e\u6cd5\u8fdb\u884c\u6b63\u5f0f\u9009\u4e3e\u3002\u4e5f\u53ef\u4ee5\u5148\u91c7\u7528\u5dee\u989d\u9009\u4e3e\u529e\u6cd5\u8fdb\u884c\u9884\u9009\uff0c\u4ea7\u751f\u5019\u9009\u4eba\u540d\u5355\uff0c\u7136\u540e\u8fdb\u884c\u6b63\u5f0f\u9009\u4e3e\u3002\u9009\u4e3e\u4eba\u6709\u4e86\u89e3\u5019\u9009\u4eba\u60c5\u51b5\u3001\u8981\u6c42\u6539\u53d8\u5019\u9009\u4eba\u3001\u4e0d\u9009\u4efb\u4f55\u4e00\u4e2a\u5019\u9009\u4eba\u548c\u53e6\u9009\u4ed6\u4eba\u7684\u6743\u5229\u3002\u4efb\u4f55\u7ec4\u7ec7\u548c\u4e2a\u4eba\u4e0d\u5f97\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5f3a\u8feb\u9009\u4e3e\u4eba\u9009\u4e3e\u6216\u4e0d\u9009\u4e3e\u67d0\u4e2a\u4eba\u3002 \u515a\u7684\u5730\u65b9\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u548c\u57fa\u5c42\u4ee3\u8868\u5927\u4f1a\u7684\u9009\u4e3e\uff0c\u5982\u679c\u53d1\u751f\u8fdd\u53cd\u515a\u7ae0\u7684\u60c5\u51b5\uff0c\u4e0a\u4e00\u7ea7\u515a\u7684\u59d4\u5458\u4f1a\u5728\u8c03\u67e5\u6838\u5b9e\u540e\uff0c\u5e94\u4f5c\u51fa\u9009\u4e3e\u65e0\u6548\u548c\u91c7\u53d6\u76f8\u5e94\u63aa\u65bd\u7684\u51b3\u5b9a\uff0c\u5e76\u62a5\u518d\u4e0a\u4e00\u7ea7\u515a\u7684\u59d4\u5458\u4f1a\u5ba1\u67e5\u6279\u51c6\uff0c\u6b63\u5f0f\u5ba3\u5e03\u6267\u884c\u3002 \u515a\u7684\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u4ee3\u8868\u5b9e\u884c\u4efb\u671f\u5236\u3002 \u7b2c\u5341\u4e8c\u6761\u3000\u515a\u7684\u4e2d\u592e\u548c\u5730\u65b9\u5404\u7ea7\u59d4\u5458\u4f1a\u5728\u5fc5\u8981\u65f6\u53ec\u96c6\u4ee3\u8868\u4f1a\u8bae\uff0c\u8ba8\u8bba\u548c\u51b3\u5b9a\u9700\u8981\u53ca\u65f6\u89e3\u51b3\u7684\u91cd\u5927\u95ee\u9898\u3002\u4ee3\u8868\u4f1a\u8bae\u4ee3\u8868\u7684\u540d\u989d\u548c\u4ea7\u751f\u529e\u6cd5\uff0c\u7531\u53ec\u96c6\u4ee3\u8868\u4f1a\u8bae\u7684\u59d4\u5458\u4f1a\u51b3\u5b9a\u3002 \u7b2c\u5341\u4e09\u6761\u3000\u51e1\u662f\u6210\u7acb\u515a\u7684\u65b0\u7ec4\u7ec7\uff0c\u6216\u662f\u64a4\u9500\u515a\u7684\u539f\u6709\u7ec4\u7ec7\uff0c\u5fc5\u987b\u7531\u4e0a\u7ea7\u515a\u7ec4\u7ec7\u51b3\u5b9a\u3002 \u5728\u515a\u7684\u5730\u65b9\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u548c\u57fa\u5c42\u4ee3\u8868\u5927\u4f1a\u95ed\u4f1a\u671f\u95f4\uff0c\u4e0a\u7ea7\u515a\u7684\u7ec4\u7ec7\u8ba4\u4e3a\u6709\u5fc5\u8981\u65f6\uff0c\u53ef\u4ee5\u8c03\u52a8\u6216\u8005\u6307\u6d3e\u4e0b\u7ea7\u515a\u7ec4\u7ec7\u7684\u8d1f\u8d23\u4eba\u3002 \u515a\u7684\u4e2d\u592e\u548c\u5730\u65b9\u5404\u7ea7\u59d4\u5458\u4f1a\u53ef\u4ee5\u6d3e\u51fa\u4ee3\u8868\u673a\u5173\u3002 \u7b2c\u5341\u56db\u6761\u3000\u515a\u7684\u4e2d\u592e\u548c\u7701\u3001\u81ea\u6cbb\u533a\u3001\u76f4\u8f96\u5e02\u59d4\u5458\u4f1a\u5b9e\u884c\u5de1\u89c6\u5236\u5ea6\uff0c\u5728\u4e00\u5c4a\u4efb\u671f\u5185\uff0c\u5bf9\u6240\u7ba1\u7406\u7684\u5730\u65b9\u3001\u90e8\u95e8\u3001\u4f01\u4e8b\u4e1a\u5355\u4f4d\u515a\u7ec4\u7ec7\u5b9e\u73b0\u5de1\u89c6\u5168\u8986\u76d6\u3002 \u4e2d\u592e\u6709\u5173\u90e8\u59d4\u548c\u56fd\u5bb6\u673a\u5173\u90e8\u95e8\u515a\u7ec4\uff08\u515a\u59d4\uff09\u6839\u636e\u5de5\u4f5c\u9700\u8981\uff0c\u5f00\u5c55\u5de1\u89c6\u5de5\u4f5c\u3002 \u515a\u7684\u5e02\uff08\u5730\u3001\u5dde\u3001\u76df\uff09\u548c\u53bf\uff08\u5e02\u3001\u533a\u3001\u65d7\uff09\u59d4\u5458\u4f1a\u5efa\u7acb\u5de1\u5bdf\u5236\u5ea6\u3002 \u7b2c\u5341\u4e94\u6761\u3000\u515a\u7684\u5404\u7ea7\u9886\u5bfc\u673a\u5173\uff0c\u5bf9\u540c\u4e0b\u7ea7\u7ec4\u7ec7\u6709\u5173\u7684\u91cd\u8981\u95ee\u9898\u4f5c\u51fa\u51b3\u5b9a\u65f6\uff0c\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8981\u5f81\u6c42\u4e0b\u7ea7\u7ec4\u7ec7\u7684\u610f\u89c1\u3002\u8981\u4fdd\u8bc1\u4e0b\u7ea7\u7ec4\u7ec7\u80fd\u591f\u6b63\u5e38\u884c\u4f7f\u4ed6\u4eec\u7684\u804c\u6743\u3002\u51e1\u5c5e\u5e94\u7531\u4e0b\u7ea7\u7ec4\u7ec7\u5904\u7406\u7684\u95ee\u9898\uff0c\u5982\u65e0\u7279\u6b8a\u60c5\u51b5\uff0c\u4e0a\u7ea7\u9886\u5bfc\u673a\u5173\u4e0d\u8981\u5e72\u9884\u3002 \u7b2c\u5341\u516d\u6761\u3000\u6709\u5173\u5168\u56fd\u6027\u7684\u91cd\u5927\u653f\u7b56\u95ee\u9898\uff0c\u53ea\u6709\u515a\u4e2d\u592e\u6709\u6743\u4f5c\u51fa\u51b3\u5b9a\uff0c\u5404\u90e8\u95e8\u3001\u5404\u5730\u65b9\u7684\u515a\u7ec4\u7ec7\u53ef\u4ee5\u5411\u4e2d\u592e\u63d0\u51fa\u5efa\u8bae\uff0c\u4f46\u4e0d\u5f97\u64c5\u81ea\u4f5c\u51fa\u51b3\u5b9a\u548c\u5bf9\u5916\u53d1\u8868\u4e3b\u5f20\u3002 \u515a\u7684\u4e0b\u7ea7\u7ec4\u7ec7\u5fc5\u987b\u575a\u51b3\u6267\u884c\u4e0a\u7ea7\u7ec4\u7ec7\u7684\u51b3\u5b9a\u3002\u4e0b\u7ea7\u7ec4\u7ec7\u5982\u679c\u8ba4\u4e3a\u4e0a\u7ea7\u7ec4\u7ec7\u7684\u51b3\u5b9a\u4e0d\u7b26\u5408\u672c\u5730\u533a\u3001\u672c\u90e8\u95e8\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u53ef\u4ee5\u8bf7\u6c42\u6539\u53d8\uff1b\u5982\u679c\u4e0a\u7ea7\u7ec4\u7ec7\u575a\u6301\u539f\u51b3\u5b9a\uff0c\u4e0b\u7ea7\u7ec4\u7ec7\u5fc5\u987b\u6267\u884c\uff0c\u5e76\u4e0d\u5f97\u516c\u5f00\u53d1\u8868\u4e0d\u540c\u610f\u89c1\uff0c\u4f46\u6709\u6743\u5411\u518d\u4e0a\u4e00\u7ea7\u7ec4\u7ec7\u62a5\u544a\u3002 \u515a\u7684\u5404\u7ea7\u7ec4\u7ec7\u7684\u62a5\u520a\u548c\u5176\u4ed6\u5ba3\u4f20\u5de5\u5177\uff0c\u5fc5\u987b\u5ba3\u4f20\u515a\u7684\u8def\u7ebf\u3001\u65b9\u9488\u3001\u653f\u7b56\u548c\u51b3\u8bae\u3002 \u7b2c\u5341\u4e03\u6761\u3000\u515a\u7ec4\u7ec7\u8ba8\u8bba\u51b3\u5b9a\u95ee\u9898\uff0c\u5fc5\u987b\u6267\u884c\u5c11\u6570\u670d\u4ece\u591a\u6570\u7684\u539f\u5219\u3002\u51b3\u5b9a\u91cd\u8981\u95ee\u9898\uff0c\u8981\u8fdb\u884c\u8868\u51b3\u3002\u5bf9\u4e8e\u5c11\u6570\u4eba\u7684\u4e0d\u540c\u610f\u89c1\uff0c\u5e94\u5f53\u8ba4\u771f\u8003\u8651\u3002\u5982\u5bf9\u91cd\u8981\u95ee\u9898\u53d1\u751f\u4e89\u8bba\uff0c\u53cc\u65b9\u4eba\u6570\u63a5\u8fd1\uff0c\u9664\u4e86\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u5fc5\u987b\u6309\u591a\u6570\u610f\u89c1\u6267\u884c\u5916\uff0c\u5e94\u5f53\u6682\u7f13\u4f5c\u51fa\u51b3\u5b9a\uff0c\u8fdb\u4e00\u6b65\u8c03\u67e5\u7814\u7a76\uff0c\u4ea4\u6362\u610f\u89c1\uff0c\u4e0b\u6b21\u518d\u8868\u51b3\uff1b\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u5c06\u4e89\u8bba\u60c5\u51b5\u5411\u4e0a\u7ea7\u7ec4\u7ec7\u62a5\u544a\uff0c\u8bf7\u6c42\u88c1\u51b3\u3002 \u515a\u5458\u4e2a\u4eba\u4ee3\u8868\u515a\u7ec4\u7ec7\u53d1\u8868\u91cd\u8981\u4e3b\u5f20\uff0c\u5982\u679c\u8d85\u51fa\u515a\u7ec4\u7ec7\u5df2\u6709\u51b3\u5b9a\u7684\u8303\u56f4\uff0c\u5fc5\u987b\u63d0\u4ea4\u6240\u5728\u7684\u515a\u7ec4\u7ec7\u8ba8\u8bba\u51b3\u5b9a\uff0c\u6216\u5411\u4e0a\u7ea7\u515a\u7ec4\u7ec7\u8bf7\u793a\u3002\u4efb\u4f55\u515a\u5458\u4e0d\u8bba\u804c\u52a1\u9ad8\u4f4e\uff0c\u90fd\u4e0d\u80fd\u4e2a\u4eba\u51b3\u5b9a\u91cd\u5927\u95ee\u9898\uff1b\u5982\u9047\u7d27\u6025\u60c5\u51b5\uff0c\u5fc5\u987b\u7531\u4e2a\u4eba\u4f5c\u51fa\u51b3\u5b9a\u65f6\uff0c\u4e8b\u540e\u8981\u8fc5\u901f\u5411\u515a\u7ec4\u7ec7\u62a5\u544a\u3002\u4e0d\u5141\u8bb8\u4efb\u4f55\u9886\u5bfc\u4eba\u5b9e\u884c\u4e2a\u4eba\u4e13\u65ad\u548c\u628a\u4e2a\u4eba\u51cc\u9a7e\u4e8e\u7ec4\u7ec7\u4e4b\u4e0a\u3002 \u7b2c\u5341\u516b\u6761\u3000\u515a\u7684\u4e2d\u592e\u3001\u5730\u65b9\u548c\u57fa\u5c42\u7ec4\u7ec7\uff0c\u90fd\u5fc5\u987b\u91cd\u89c6\u515a\u7684\u5efa\u8bbe\uff0c\u7ecf\u5e38\u8ba8\u8bba\u548c\u68c0\u67e5\u515a\u7684\u5ba3\u4f20\u5de5\u4f5c\u3001\u6559\u80b2\u5de5\u4f5c\u3001\u7ec4\u7ec7\u5de5\u4f5c\u3001\u7eaa\u5f8b\u68c0\u67e5\u5de5\u4f5c\u3001\u7fa4\u4f17\u5de5\u4f5c\u3001\u7edf\u4e00\u6218\u7ebf\u5de5\u4f5c\u7b49\uff0c\u6ce8\u610f\u7814\u7a76\u515a\u5185\u5916\u7684\u601d\u60f3\u653f\u6cbb\u72b6\u51b5\u3002 \u9886\u5bfc\u5236\u5ea6 \u00b6 \u515a\u7684\u9886\u5bfc\u5236\u5ea6\u4f53\u7cfb\u8981\u603b\u63fd\u5168\u5c40\u3001\u534f\u8c03\u5404\u65b9 \u515a\u653f\u519b\u6c11\u5b66\u3001\u4e1c\u897f\u5357\u5317\u4e2d\uff0c\u515a\u662f\u9886\u5bfc\u4e00\u5207\u7684\u3002\u5982\u4f55\u9886\u5bfc?\u5c31\u662f\u8981\u5065\u5168\u603b\u63fd\u5168\u5c40\u3001\u534f\u8c03\u5404\u65b9\u7684\u515a\u7684\u9886\u5bfc\u5236\u5ea6\u4f53\u7cfb\u3002\u5168\u4f1a\u4ece\u516d\u65b9\u9762\u5bf9\u6b64\u8fdb\u884c\u4e86\u90e8\u7f72\uff0c\u5305\u62ec\u5efa\u7acb\u4e0d\u5fd8\u521d\u5fc3\u3001\u7262\u8bb0\u4f7f\u547d\u7684\u5236\u5ea6;\u5b8c\u5584\u575a\u5b9a\u7ef4\u62a4\u515a\u4e2d\u592e\u6743\u5a01\u548c\u96c6\u4e2d\u7edf\u4e00\u9886\u5bfc\u7684\u5404\u9879\u5236\u5ea6;\u5065\u5168\u515a\u7684\u5168\u9762\u9886\u5bfc\u5236\u5ea6;\u5065\u5168\u4e3a\u4eba\u6c11\u6267\u653f\u3001\u9760\u4eba\u6c11\u6267\u653f\u5404\u9879\u5236\u5ea6;\u5065\u5168\u63d0\u9ad8\u515a\u7684\u6267\u653f\u80fd\u529b\u548c\u9886\u5bfc\u6c34\u5e73\u5236\u5ea6;\u5b8c\u5584\u5168\u9762\u4ece\u4e25\u6cbb\u515a\u5236\u5ea6\u3002 5.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u6700\u5927\u653f\u6cbb\u4f18\u52bf \u00b6 \u6211\u4eec\u515a\u7684\u6700\u5927\u7684\u653f\u6cbb\u4f18\u52bf\u662f\u5bc6\u5207\u8054\u7cfb\u7fa4\u4f17\uff0c\u515a\u6267\u653f\u540e\u7684\u6700\u5927\u7684\u5371\u9669\u662f\u8131\u79bb\u7fa4\u4f17\u3002 6.\u4e2d\u56fd\u5171\u4ea7\u515a\u4e09\u5927\u4f18\u826f\u4f5c\u98ce \u00b6 \u4e09\u5927\u4f18\u826f\u4f5c\u98ce\u662f\u6307\u7406\u8bba\u4e0e\u5b9e\u9645\u76f8\u7ed3\u5408\u7684\u4f5c\u98ce\u3001\u4e0e\u4eba\u6c11\u7fa4\u4f17\u7d27\u5bc6\u5730\u8054\u7cfb\u5728\u4e00\u8d77\u7684\u4f5c\u98ce\u4ee5\u53ca\u6279\u8bc4\u4e0e\u81ea\u6211\u6279\u8bc4\u7684\u4f5c\u98ce\u3002 7.\u4e2d\u56fd\u5171\u4ea7\u515a\u515a\u5458\u7eaa\u5f8b\u5904\u5206\u79cd\u7c7b \u00b6 \uff08\u4e00\uff09\u8b66\u544a\uff1b \uff08\u4e8c\uff09\u4e25\u91cd\u8b66\u544a\uff1b \uff08\u4e09\uff09\u64a4\u9500\u515a\u5185\u804c\u52a1\uff1b \uff08\u56db\uff09\u7559\u515a\u5bdf\u770b\uff1b \uff08\u4e94\uff09\u5f00\u9664\u515a\u7c4d\u3002 8.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u515a\u65d7\u548c\u515a\u5fbd \u00b6 9.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u5168\u56fd\u4ee3\u8868\u5927\u4f1a\u804c\u6743 \u00b6 \u5236\u5b9a\u3001\u4fee\u6539\u5baa\u6cd5\u5e76\u76d1\u7763\u5176\u5b9e\u65bd\uff1b\u5236\u5b9a\u548c\u4fee\u6539\u56fd\u5bb6\u57fa\u672c\u6cd5\u5f8b\u548c\u5176\u4ed6\u6cd5\u5f8b\u3002\u5baa\u6cd5\u7684\u4fee\u6539\uff0c\u7531\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u5e38\u52a1\u59d4\u5458\u4f1a\u6216\u80051\uff0f5\u4ee5\u4e0a\u7684\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u4ee3\u8868\u63d0\u8bae\uff0c\u5e76\u7531\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u4ee5\u5168\u4f53\u4ee3\u8868\u76842\uff0f3\u4ee5\u4e0a\u7684\u591a\u6570\u901a\u8fc7\u3002\u6cd5\u5f8b\u548c\u5176\u4ed6\u8bae\u6848\u7531\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u4ee5\u5168\u4f53\u4ee3\u8868\u7684\u8fc7\u534a\u6570\u901a\u8fc7\u3002\u5baa\u6cd5\u8fd8\u89c4\u5b9a\uff0c\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u6709\u6743\u6539\u53d8\u6216\u8005\u64a4\u9500\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u5e38\u52a1\u59d4\u5458\u4f1a\u4e0d\u9002\u5f53\u7684\u51b3\u5b9a\u3002 \u9009\u4e3e\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u5e38\u52a1\u59d4\u5458\u4f1a\u7684\u7ec4\u6210\u4eba\u5458\uff1b\u9009\u4e3e\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e3b\u5e2d\u3001\u526f\u4e3b\u5e2d\uff1b\u6839\u636e\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e3b\u5e2d\u7684\u63d0\u540d\uff0c\u51b3\u5b9a\u56fd\u52a1\u9662\u603b\u7406\u7684\u4eba\u9009\uff1b\u6839\u636e\u56fd\u52a1\u9662\u603b\u7406\u7684\u63d0\u540d\uff0c\u51b3\u5b9a\u56fd\u52a1\u9662\u5176\u4ed6\u7ec4\u6210\u4eba\u5458\u7684\u4eba\u9009\uff1b\u9009\u4e3e\u4e2d\u592e\u519b\u4e8b\u59d4\u5458\u4f1a\u4e3b\u5e2d\uff1b\u6839\u636e\u4e2d\u592e\u519b\u4e8b\u59d4\u5458\u4f1a\u4e3b\u5e2d\u7684\u63d0\u540d\uff0c\u51b3\u5b9a\u4e2d\u592e\u519b\u59d4\u5176\u4ed6\u7ec4\u6210\u4eba\u5458\u7684\u4eba\u9009\uff1b\u9009\u4e3e\u6700\u9ad8\u4eba\u6c11\u6cd5\u9662\u9662\u957f\uff1b\u9009\u4e3e\u6700\u9ad8\u4eba\u6c11\u68c0\u5bdf\u9662\u68c0\u5bdf\u957f\u3002\u5bf9\u4ee5\u4e0a\u4eba\u5458\uff0c\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u90fd\u6709\u6743\u4e88\u4ee5\u7f62\u514d\u3002 \u5ba1\u67e5\u548c\u6279\u51c6\u56fd\u6c11\u7ecf\u6d4e\u548c\u793e\u4f1a\u53d1\u5c55\u8ba1\u5212\uff1b\u5ba1\u67e5\u548c\u6279\u51c6\u56fd\u5bb6\u7684\u9884\u7b97\u548c\u9884\u7b97\u6267\u884c\u60c5\u51b5\uff1b\u6279\u51c6\u7701\u3001\u81ea\u6cbb\u533a\u548c\u76f4\u8f96\u5e02\u7684\u5efa\u7f6e\uff1b\u51b3\u5b9a\u7279\u522b\u884c\u653f\u533a\u7684\u8bbe\u7acb\u53ca\u5176\u5236\u5ea6\uff1b\u51b3\u5b9a\u6218\u4e89\u548c\u548c\u5e73\u7684\u95ee\u9898\u3002 \u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u6709\u6743\u884c\u4f7f\u201c\u5e94\u5f53\u7531\u6700\u9ad8\u56fd\u5bb6\u6743\u529b\u673a\u5173\u884c\u4f7f\u7684\u5176\u4ed6\u804c\u6743\u201d\u3002 10.\u515a\u7ae0\u89c4\u5b9a\u7684\u201c\u56db\u4e2a\u670d\u4ece\u201d\u539f\u5219 \u00b6 \u515a\u7ae0\u89c4\u5b9a\uff1a\u515a\u5458\u4e2a\u4eba\u670d\u4ece\u515a\u7684\u7ec4\u7ec7\uff0c\u5c11\u6570\u670d\u4ece\u591a\u6570\uff0c\u4e0b\u7ea7\u7ec4\u7ec7\u670d\u4ece\u4e0a\u7ea7\u7ec4\u7ec7\uff0c\u5168\u515a\u5404\u4e2a\u7ec4\u7ec7\u548c\u5168\u4f53\u515a\u5458\u670d\u4ece\u515a\u7684\u5168\u56fd\u4ee3\u8868\u5927\u4f1a\u548c\u4e2d\u592e\u59d4\u5458\u4f1a\u3002\u8fd9\u4e00\u89c4\u5b9a\u88ab\u7b80\u79f0\u4e3a\u201c\u56db\u4e2a\u670d\u4ece\u201d\u3002 11.\u201c\u56db\u4e2a\u610f\u8bc6\u201d\u201c\u56db\u4e2a\u81ea\u4fe1\u201d \u201c\u4e24\u4e2a\u7ef4\u62a4\u201d \u00b6 \u56db\u4e2a\u610f\u8bc6:\u662f\u6307\u653f\u6cbb\u610f\u8bc6\u3001\u5927\u5c40\u610f\u8bc6\u3001\u6838\u5fc3\u610f\u8bc6\u3001\u770b\u9f50\u610f\u8bc6\u3002 \u56db\u4e2a\u81ea\u4fe1:\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u9053\u8def\u81ea\u4fe1\u3001\u7406\u8bba\u81ea\u4fe1\u3001\u5236\u5ea6\u81ea\u4fe1\u3001\u6587\u5316\u81ea\u4fe1\u3002 \u4e24\u4e2a\u7ef4\u62a4:\u6307\u575a\u51b3\u7ef4\u62a4\u4e60\u8fd1\u5e73\u603b\u4e66\u8bb0\u515a\u4e2d\u592e\u7684\u6838\u5fc3\u3001\u5168\u515a\u7684\u6838\u5fc3\u5730\u4f4d\uff0c\u575a\u51b3\u7ef4\u62a4\u515a\u4e2d\u592e\u6743\u5a01\u548c\u96c6\u4e2d\u7edf\u4e00\u9886\u5bfc\u3002 12.\u56db\u9879\u57fa\u672c\u539f\u5219\u7684\u4e3b\u8981\u5185\u5bb9 \u00b6 \u575a\u6301\u793e\u4f1a\u4e3b\u4e49\u9053\u8def\u3001\u575a\u6301\u4eba\u6c11\u6c11\u4e3b\u4e13\u653f\u3001\u575a\u6301\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u9886\u5bfc\u3001\u575a\u6301\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u6bdb\u6cfd\u4e1c\u601d\u60f3\uff0c\u662f\u6211\u4eec\u7684\u7acb\u56fd\u4e4b\u672c\u3002 13.\u515a\u5728\u793e\u4f1a\u4e3b\u4e49\u521d\u7ea7\u9636\u6bb5\u7684\u57fa\u672c\u8def\u7ebf \u00b6 \u9886\u5bfc\u548c\u56e2\u7ed3\u5168\u56fd\u5404\u65cf\u4eba\u6c11\uff0c\u4ee5\u7ecf\u6d4e\u5efa\u8bbe\u4e3a\u4e2d\u5fc3\uff0c\u575a\u6301\u56db\u9879\u57fa\u672c\u539f\u5219\uff0c\u575a\u6301\u6539\u9769\u5f00\u653e\uff0c\u81ea\u529b\u66f4\u751f\uff0c\u8270\u82e6\u521b\u4e1a\uff0c\u4e3a\u628a\u6211\u56fd\u5efa\u8bbe\u6210\u4e3a\u5bcc\u5f3a\u3001\u6c11\u4e3b\u3001\u6587\u660e\u3001\u548c\u8c10\u7684\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u56fd\u5bb6\u800c\u594b\u6597\u3002 14.\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u6700\u672c\u8d28\u7684\u7279\u5f81 \u00b6 \u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u6700\u672c\u8d28\u7279\u5f81\u662f\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u9886\u5bfc 15.\u515a\u7684\u5341\u4e5d\u5927\u63d0\u51fa\u6211\u56fd\u793e\u4f1a\u7684\u4e3b\u8981\u77db\u76fe \u00b6 \u4e60\u8fd1\u5e73\uff1a\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u8fdb\u5165\u65b0\u65f6\u4ee3\uff0c\u6211\u56fd\u793e\u4f1a\u4e3b\u8981\u77db\u76fe\u5df2\u7ecf\u8f6c\u5316\u4e3a\u4eba\u6c11\u65e5\u76ca\u589e\u957f\u7684\u7f8e\u597d\u751f\u6d3b\u9700\u8981\u548c\u4e0d\u5e73\u8861\u4e0d\u5145\u5206\u7684\u53d1\u5c55\u4e4b\u95f4\u7684\u77db\u76fe\u3002 16.\u5341\u4e5d\u5c4a\u516d\u4e2d\u5168\u4f1a\u63d0\u51fa\u7684\u201c\u4e24\u4e2a\u786e\u7acb\u201d \u00b6 \u515a\u786e\u7acb\u4e60\u8fd1\u5e73\u540c\u5fd7\u515a\u4e2d\u592e\u7684\u6838\u5fc3\u3001\u5168\u515a\u7684\u6838\u5fc3\u5730\u4f4d\uff0c\u786e\u7acb\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u601d\u60f3\u7684\u6307\u5bfc\u5730\u4f4d 17. \u201c\u4e24\u4e2a\u4e00\u767e\u5e74\u201d\u594b\u6597\u76ee\u6807 \u00b6 \u5728\u4e2d\u56fd\u5171\u4ea7\u515a\u6210\u7acb\u4e00\u767e\u5e74\u65f6\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a\uff0c\u5728\u65b0\u4e2d\u56fd\u6210\u7acb\u4e00\u767e\u5e74\u65f6\u5efa\u6210\u5bcc\u5f3a\u6c11\u4e3b\u6587\u660e\u548c\u8c10\u7684\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u56fd\u5bb6\u3002 18.\u793e\u4f1a\u4e3b\u4e49\u6838\u5fc3\u4ef7\u503c\u89c2 \u00b6 \u5bcc\u5f3a\u6c11\u4e3b\u6587\u660e\u548c\u8c10 \u81ea\u7531\u5e73\u7b49\u516c\u6b63\u6cd5\u6cbb \u7231\u56fd\u656c\u4e1a\u8bda\u4fe1\u53cb\u5584 19.\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u53d1\u5c55\u7684\u6218\u7565\u5b89\u6392 \u00b6 \u515a\u7684\u5341\u4e5d\u5927\u62a5\u544a\u63d0\u51fa\uff0c\u4ece\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a\u5230\u57fa\u672c\u5b9e\u73b0\u73b0\u4ee3\u5316\uff0c\u518d\u5230\u5168\u9762\u5efa\u6210\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5f3a\u56fd\uff0c\u662f\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u53d1\u5c55\u7684\u6218\u7565\u5b89\u6392\u3002 20.\u201c\u4e94\u4f4d\u4e00\u4f53\u201d\u3001\u201c\u56db\u4e2a\u5168\u9762\u201d \u5e03\u5c40 \u00b6 \u4e94\u4f4d\u4e00\u4f53\uff1a\u662f\u5341\u516b\u5927\u62a5\u544a\u7684\u201c\u65b0\u63d0\u6cd5\u201d\u4e4b\u4e00\u3002\u7ecf\u6d4e\u5efa\u8bbe\u3001\u653f\u6cbb\u5efa\u8bbe\u3001\u6587\u5316\u5efa\u8bbe\u3001\u793e\u4f1a\u5efa\u8bbe\u3001\u751f\u6001\u6587\u660e\u5efa\u8bbe\u2014\u2014\u7740\u773c\u4e8e\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a\u3001\u5b9e\u73b0\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u548c\u4e2d\u534e\u6c11\u65cf\u4f1f\u5927\u590d\u5174\uff0c\u662f\u515a\u7684\u5341\u516b\u5927\u62a5\u544a\u5bf9\u63a8\u8fdb\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u4e8b\u4e1a\u4f5c\u51fa\u201c\u4e94\u4f4d\u4e00\u4f53\u201d\u603b\u4f53\u5e03\u5c40\u3002 \u201c\u56db\u4e2a\u5168\u9762\u201d\u6218\u7565\u5e03\u5c40\uff1a\u5373\u201c\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a\u3001\u5168\u9762\u6df1\u5316\u6539\u9769\u3001\u5168\u9762\u4f9d\u6cd5\u6cbb\u56fd\u3001\u5168\u9762\u4ece\u4e25\u6cbb\u515a\u201d\uff0c\u662f\u515a\u4e2d\u592e\u6cbb\u56fd\u7406\u653f\u7684\u603b\u65b9\u7565\u3002 21.\u201c\u4e24\u5b66\u4e00\u505a\u201d\u3001\u201c\u4e09\u4f1a\u4e00\u8bfe\u201d \u7684\u4e3b\u8981\u5185\u5bb9 \u00b6 \u4e09\u4f1a\u4e00\u8bfe\uff1a - \u652f\u90e8\u515a\u5458\u5927\u4f1a - \u652f\u90e8\u59d4\u5458\u4f1a - \u515a\u5c0f\u7ec4\u4f1a \u6309\u65f6\u4e0a\u597d\u515a\u8bfe\u3002 \u4e24\u5b66\u4e00\u505a\uff1a \u5b66\u515a\u7ae0\u515a\u89c4\u3001\u5b66\u7cfb\u5217\u8bb2\u8bdd\uff0c\u505a\u5408\u683c\u515a\u5458 22.\u53d1\u5c55\u515a\u5458\u7684\u65b9\u9488\u53ca\u539f\u5219 \u00b6 \u575a\u6301\u6807\u51c6\uff0c\u4fdd\u8bc1\u8d28\u91cf\uff0c\u6539\u5584\u7ed3\u6784\uff0c\u614e\u91cd\u53d1\u5c55 23.\u7533\u8bf7\u5165\u515a\u9700\u8981\u5177\u5907\u7684\u57fa\u672c\u6761\u4ef6 \u00b6 \uff081\uff09\u5e74\u9f84\u572818\u5c81\u4ee5\u4e0a\u7684\u4e2d\u56fd\u516c\u6c11\u3002 \uff082\uff09\u627f\u8ba4\u515a\u7684\u7eb2\u9886\u548c\u7ae0\u7a0b\u3002 \uff083\uff09\u613f\u610f\u53c2\u52a0\u515a\u7684\u4e00\u4e2a\u7ec4\u7ec7\u5e76\u5728\u5176\u4e2d\u79ef\u6781\u5de5\u4f5c\u3002 \uff084\uff09\u613f\u610f\u6267\u884c\u515a\u7684\u51b3\u8bae\u3002 \uff085\uff09\u6309\u671f\u4ea4\u7eb3\u515a\u8d39\u3002 \u4e0b\u9762\u662f\u8be6\u7ec6\u7248\u54e6~ \u7533\u8bf7\u5165\u515a\u7684\u6761\u4ef6\u53c8\u79f0\u5165\u515a\u8d44\u683c\uff0c\u5373\u5177\u5907\u4ec0\u4e48\u6761\u4ef6\u7684\u4eba\u624d\u80fd\u7533\u8bf7\u5165\u515a\u3002\u6309\u7167\u515a\u7ae0\u89c4\u5b9a\uff0c\u7533\u8bf7\u52a0\u5165\u4e2d\u56fd\u5171\u4ea7\u515a\uff0c\u5fc5\u987b\u5177\u5907\u4e94\u4e2a\u57fa\u672c\u6761\u4ef6\uff1a \uff081\uff09\u5e74\u9f84\u572818\u5c81\u4ee5\u4e0a\u7684\u4e2d\u56fd\u516c\u6c11\u3002\u4e00\u4e2a\u4eba\u6210\u5e74\u540e\u624d\u53ef\u80fd\u6709\u6bd4\u8f83\u786e\u5b9a\u7684\u653f\u6cbb\u5224\u65ad\u529b\uff0c\u5e76\u786e\u7acb\u81ea\u5df1\u7684\u653f\u6cbb\u4fe1\u4ef0\u548c\u7ec8\u8eab\u5fd7\u5411\u3002\u52a0\u5165\u4e2d\u56fd\u5171\u4ea7\u515a\u5fc5\u987b\u662f\u5177\u6709\u4e2d\u56fd\u56fd\u7c4d\u7684\u5de5\u4eba\u3001\u519c\u6c11\u3001\u519b\u4eba\u3001\u77e5\u8bc6\u5206\u5b50\u548c\u5176\u4ed6\u793e\u4f1a\u9636\u5c42\u7684\u5148\u8fdb\u5206\u5b50\u3002\u7533\u8bf7\u5165\u515a\u7684\u4eba\u5fc5\u987b\u5e74\u6ee118\u5c81\uff0c\u7531\u672c\u4eba\u5411\u515a\u7ec4\u7ec7\u63d0\u51fa\u4e66\u9762\u5165\u515a\u7533\u8bf7\u3002 \uff082\uff09\u627f\u8ba4\u515a\u7684\u7eb2\u9886\u548c\u7ae0\u7a0b\u3002\u201c\u627f\u8ba4\u201d\uff0c\u4e0d\u4ec5\u662f\u53e3\u5934\u4e0a\u7684\u62e5\u62a4\u548c\u63a5\u53d7\uff0c\u66f4\u91cd\u8981\u7684\u662f\u6709\u5b9e\u73b0\u515a\u7684\u7eb2\u9886\u3001\u6267\u884c\u515a\u7684\u7ae0\u7a0b\u7684\u884c\u52a8\uff0c\u7acb\u5fd7\u4e3a\u5171\u4ea7\u4e3b\u4e49\u594b\u6597\u7ec8\u8eab\u3002 \uff083\uff09\u613f\u610f\u53c2\u52a0\u515a\u7684\u4e00\u4e2a\u7ec4\u7ec7\u5e76\u5728\u5176\u4e2d\u79ef\u6781\u5de5\u4f5c\u3002\u53ea\u6709\u5168\u4f53\u515a\u5458\u90fd\u53c2\u52a0\u515a\u7684\u4e00\u4e2a\u7ec4\u7ec7\u5e76\u79ef\u6781\u5de5\u4f5c\uff0c\u624d\u80fd\u4fdd\u8bc1\u5168\u515a\u5728\u601d\u60f3\u4e0a\u3001\u653f\u6cbb\u4e0a\u3001\u884c\u52a8\u4e0a\u7684\u9ad8\u5ea6\u4e00\u81f4\uff0c\u515a\u624d\u6709\u6218\u6597\u529b\u3002 \uff084\uff09\u613f\u610f\u6267\u884c\u515a\u7684\u51b3\u8bae\u3002\u515a\u7684\u51b3\u8bae\u4ee3\u8868\u5168\u515a\u7684\u610f\u5fd7\uff0c\u5fc5\u987b\u8d2f\u5f7b\u6267\u884c\u3002\u5982\u679c\u6bcf\u4e2a\u515a\u5458\u53ef\u4ee5\u81ea\u884c\u5176\u662f\uff0c\u515a\u7684\u56e2\u7ed3\u7edf\u4e00\u5c31\u4f1a\u53d7\u5230\u7834\u574f\uff0c\u515a\u5c31\u6ca1\u6709\u6218\u6597\u529b\u3002 \uff085\uff09\u6309\u671f\u4ea4\u7eb3\u515a\u8d39\u3002\u8fd9\u662f\u6bcf\u4e2a\u515a\u5458\u7684\u4e49\u52a1\uff0c\u662f\u515a\u5458\u5173\u5fc3\u515a\u7684\u4e8b\u4e1a\u3001\u6709\u7ec4\u7ec7\u89c2\u5ff5\u7684\u4e00\u79cd\u8868\u73b0\u3002 24.\u786e\u5b9a\u5165\u515a\u79ef\u6781\u5206\u5b50\u7684\u7a0b\u5e8f \u00b6 1\u3001\u91c6\u53d6\u515a\u5458\u63a8\u8350\u3001\u7fa4\u56e2\u7ec4\u7ec7\u63a8\u4f18\u7b49\u65b9\u5f0f\uff0c\u4ece\u5165\u515a\u7533\u8bf7\u4eba\u4e2d\u63a8\u8350\u5165\u515a\u79ef\u6781\u5206\u5b50\u4eba\u9009\u3002 2\u3001\u515a\u652f\u90e8\u8ba4\u771f\u542c\u53d6\u6709\u5173\u65b9\u9762\u610f\u89c1\u3002 3\u3001\u652f\u90e8\u59d4\u5458\u4f1a\uff08\u4e0d\u8bbe\u652f\u90e8\u59d4\u5458\u4f1a\u7684\u7531\u652f\u90e8\u5927\u4f1a\uff09\u5145\u5206\u8ba8\u8bba\uff0c\u7814\u7a76\u51b3\u5b9a\u5165\u515a\u79ef\u6781\u5206\u5b50\u3002 4\u3001\u515a\u652f\u90e8\u5c06\u5165\u515a\u79ef\u6781\u5206\u5b50\u6709\u5173\u60c5\u51b5\u62a5\u4e0a\u7ea7\u515a\u59d4\u5907\u6848\u3002 25.\u300a\u515a\u7ae0\u300b\u89c4\u5b9a\u5171\u4ea7\u515a\u5458\u5fc5\u987b\u5c65\u884c\u7684\u516b\u9879\u4e49\u52a1 \u00b6 \uff08\u4e00\uff09\u8ba4\u771f\u5b66\u4e60\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u3001\u6bdb\u6cfd\u4e1c\u601d\u60f3\u3001\u9093\u5c0f\u5e73\u7406\u8bba\u3001\u201c\u4e09\u4e2a\u4ee3\u8868\u201d\u548c\u79d1\u5b66\u53d1\u5c55\u89c2\u91cd\u8981\u601d\u60f3\uff0c\u5b66\u4e60\u515a\u7684\u8def\u7ebf\u3001\u65b9\u9488\u3001\u653f\u7b56\u53ca\u51b3\u8bae\uff0c\u5b66\u4e60\u515a\u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u5b66\u4e60\u79d1\u5b66\u3001\u6587\u5316\u3001\u6cd5\u5f8b\u548c\u4e1a\u52a1\u77e5\u8bc6\uff0c\u52aa\u529b\u63d0\u9ad8\u4e3a\u4eba\u6c11\u670d\u52a1\u7684\u672c\u9886\u3002 \uff08\u4e8c\uff09\u8d2f\u5f7b\u6267\u884c\u515a\u7684\u57fa\u672c\u8def\u7ebf\u548c\u5404\u9879\u65b9\u9488\u3001\u653f\u7b56\uff0c\u5e26\u5934\u53c2\u52a0\u6539\u9769\u5f00\u653e\u548c\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5efa\u8bbe\uff0c\u5e26\u52a8\u7fa4\u4f17\u4e3a\u7ecf\u6d4e\u53d1\u5c55\u548c\u793e\u4f1a\u8fdb\u6b65\u8270\u82e6\u594b\u6597\uff0c\u5728\u751f\u4ea7\u3001\u5de5\u4f5c\u3001\u5b66\u4e60\u548c\u793e\u4f1a\u751f\u6d3b\u4e2d\u8d77\u5148\u950b\u6a21\u8303\u4f5c\u7528\u3002 \uff08\u4e09\uff09\u575a\u6301\u515a\u548c\u4eba\u6c11\u7684\u5229\u76ca\u9ad8\u4e8e\u4e00\u5207\uff0c\u4e2a\u4eba\u5229\u76ca\u670d\u4ece\u515a\u548c\u4eba\u6c11\u7684\u5229\u76ca\uff0c\u5403\u82e6\u5728\u524d\uff0c\u4eab\u53d7\u5728\u540e\uff0c\u514b\u5df1\u5949\u516c\uff0c\u591a\u505a\u8d21\u732e\u3002 \uff08\u56db\uff09\u81ea\u89c9\u9075\u5b88\u515a\u7684\u7eaa\u5f8b\uff0c\u6a21\u8303\u9075\u5b88\u56fd\u5bb6\u7684\u6cd5\u5f8b\u6cd5\u89c4\uff0c\u4e25\u683c\u4fdd\u5b88\u515a\u548c\u56fd\u5bb6\u7684\u79d8\u5bc6\uff0c\u6267\u884c\u515a\u7684\u51b3\u5b9a\uff0c\u670d\u4ece\u7ec4\u7ec7\u5206\u914d\uff0c\u79ef\u6781\u5b8c\u6210\u515a\u7684\u4efb\u52a1\u3002 \uff08\u4e94\uff09\u7ef4\u62a4\u515a\u7684\u56e2\u7ed3\u548c\u7edf\u4e00\uff0c\u5bf9\u515a\u5fe0\u8bda\u8001\u5b9e\uff0c\u8a00\u884c\u4e00\u81f4\uff0c\u575a\u51b3\u53cd\u5bf9\u4e00\u5207\u6d3e\u522b\u7ec4\u7ec7\u548c\u5c0f\u96c6\u56e2\u6d3b\u52a8\uff0c\u53cd\u5bf9\u9633\u5949\u9634\u8fdd\u7684\u4e24\u9762\u6d3e\u884c\u4e3a\u548c\u4e00\u5207\u9634\u8c0b\u8be1\u8ba1\u3002 \uff08\u516d\uff09\u5207\u5b9e\u5f00\u5c55\u6279\u8bc4\u548c\u81ea\u6211\u6279\u8bc4\uff0c\u52c7\u4e8e\u63ed\u9732\u548c\u7ea0\u6b63\u5de5\u4f5c\u4e2d\u7684\u7f3a\u70b9\u3001\u9519\u8bef\uff0c\u575a\u51b3\u540c\u6d88\u6781\u8150\u8d25\u73b0\u8c61\u4f5c\u6597\u4e89\u3002 \uff08\u4e03\uff09\u5bc6\u5207\u8054\u7cfb\u7fa4\u4f17\uff0c\u5411\u7fa4\u4f17\u5ba3\u4f20\u515a\u7684\u4e3b\u5f20\uff0c\u9047\u4e8b\u540c\u7fa4\u4f17\u5546\u91cf\uff0c\u53ca\u65f6\u5411\u515a\u53cd\u6620\u7fa4\u4f17\u7684\u610f\u89c1\u548c\u8981\u6c42\uff0c\u7ef4\u62a4\u7fa4\u4f17\u7684\u6b63\u5f53\u5229\u76ca\u3002 \uff08\u516b\uff09\u53d1\u626c\u793e\u4f1a\u4e3b\u4e49\u65b0\u98ce\u5c1a\uff0c\u5e26\u5934\u5b9e\u8df5\u793e\u4f1a\u4e3b\u4e49\u8363\u8fb1\u89c2\uff0c\u63d0\u5021\u5171\u4ea7\u4e3b\u4e49\u9053\u5fb7\uff0c\u4e3a\u4e86\u4fdd\u62a4\u56fd\u5bb6\u548c\u4eba\u6c11\u7684\u5229\u76ca\uff0c\u5728\u4e00\u5207\u56f0\u96be\u548c\u5371\u9669\u7684\u65f6\u523b\u633a\u8eab\u800c\u51fa\uff0c\u82f1\u52c7\u6597\u4e89\uff0c\u4e0d\u6015\u727a\u7272\u3002","title":"\u515a\u8bad"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#1","text":"\u6027\u8d28\uff1a \u4e2d\u56fd\u5171\u4ea7\u515a\u662f\u4e2d\u56fd\u5de5\u4eba\u9636\u7ea7\u7684\u5148\u950b\u961f\uff0c\u540c\u65f6\u662f\u4e2d\u56fd\u4eba\u6c11\u548c\u4e2d\u534e\u6c11\u65cf\u7684\u5148\u950b\u961f\uff0c\u662f\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u4e8b\u4e1a\u7684\u9886\u5bfc\u6838\u5fc3\uff0c\u4ee3\u8868\u4e2d\u56fd\u5148\u8fdb\u751f\u4ea7\u529b\u7684\u53d1\u5c55\u8981\u6c42\uff0c\u4ee3\u8868\u4e2d\u56fd\u5148\u8fdb\u6587\u5316\u7684\u524d\u8fdb\u65b9\u5411\uff0c\u4ee3\u8868\u4e2d\u56fd\u6700\u5e7f\u5927\u4eba\u6c11\u7684\u6839\u672c\u5229\u76ca\u3002 \u6839\u672c\u5b97\u65e8\uff1a \u5168\u5fc3\u5168\u610f\u4e3a\u4eba\u6c11\u670d\u52a1","title":"1.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u6027\u8d28\u548c\u6839\u672c\u5b97\u65e8"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#2","text":"\u4e2d\u56fd\u5171\u4ea7\u515a\u4ee5\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u3001\u6bdb\u6cfd\u4e1c\u601d\u60f3\u3001\u9093\u5c0f\u5e73\u7406\u8bba\u3001\u201c\u4e09\u4e2a\u4ee3\u8868\u201d\u91cd\u8981\u601d\u60f3\u3001\u79d1\u5b66\u53d1\u5c55\u89c2\u3001\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u601d\u60f3\u4f5c\u4e3a\u81ea\u5df1\u7684\u884c\u52a8\u6307\u5357\u3002","title":"2.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u884c\u52a8\u6307\u5357"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#3","text":"\u515a\u7684\u6700\u9ad8\u7406\u60f3\u548c\u6700\u7ec8\u76ee\u6807\u662f\u5b9e\u73b0\u5171\u4ea7\u4e3b\u4e49\u3002 \u4eba\u6c11\u5bf9\u7f8e\u597d\u751f\u6d3b\u7684\u5411\u5f80\u5c31\u662f\u6211\u4eec\u7684\u594b\u6597\u76ee\u6807","title":"3.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u6700\u9ad8\u7406\u60f3\u548c\u594b\u6597\u76ee\u6807"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#4","text":"","title":"4.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u7ec4\u7ec7\u5236\u5ea6\u548c\u9886\u5bfc\u5236\u5ea6"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#_1","text":"\u7b2c\u5341\u6761\u3000\u515a\u662f\u6839\u636e\u81ea\u5df1\u7684\u7eb2\u9886\u548c\u7ae0\u7a0b\uff0c\u6309\u7167\u6c11\u4e3b\u96c6\u4e2d\u5236\u7ec4\u7ec7\u8d77\u6765\u7684\u7edf\u4e00\u6574\u4f53\u3002\u515a\u7684\u6c11\u4e3b\u96c6\u4e2d\u5236\u7684\u57fa\u672c\u539f\u5219\u662f\uff1a \uff08\u4e00\uff09\u515a\u5458\u4e2a\u4eba\u670d\u4ece\u515a\u7684\u7ec4\u7ec7\uff0c\u5c11\u6570\u670d\u4ece\u591a\u6570\uff0c\u4e0b\u7ea7\u7ec4\u7ec7\u670d\u4ece\u4e0a\u7ea7\u7ec4\u7ec7\uff0c\u5168\u515a\u5404\u4e2a\u7ec4\u7ec7\u548c\u5168\u4f53\u515a\u5458\u670d\u4ece\u515a\u7684\u5168\u56fd\u4ee3\u8868\u5927\u4f1a\u548c\u4e2d\u592e\u59d4\u5458\u4f1a\u3002 \uff08\u4e8c\uff09\u515a\u7684\u5404\u7ea7\u9886\u5bfc\u673a\u5173\uff0c\u9664\u5b83\u4eec\u6d3e\u51fa\u7684\u4ee3\u8868\u673a\u5173\u548c\u5728\u975e\u515a\u7ec4\u7ec7\u4e2d\u7684\u515a\u7ec4\u5916\uff0c\u90fd\u7531\u9009\u4e3e\u4ea7\u751f\u3002 \uff08\u4e09\uff09\u515a\u7684\u6700\u9ad8\u9886\u5bfc\u673a\u5173\uff0c\u662f\u515a\u7684\u5168\u56fd\u4ee3\u8868\u5927\u4f1a\u548c\u5b83\u6240\u4ea7\u751f\u7684\u4e2d\u592e\u59d4\u5458\u4f1a\u3002\u515a\u7684\u5730\u65b9\u5404\u7ea7\u9886\u5bfc\u673a\u5173\uff0c\u662f\u515a\u7684\u5730\u65b9\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u548c\u5b83\u4eec\u6240\u4ea7\u751f\u7684\u59d4\u5458\u4f1a\u3002\u515a\u7684\u5404\u7ea7\u59d4\u5458\u4f1a\u5411\u540c\u7ea7\u7684\u4ee3\u8868\u5927\u4f1a\u8d1f\u8d23\u5e76\u62a5\u544a\u5de5\u4f5c\u3002 \uff08\u56db\uff09\u515a\u7684\u4e0a\u7ea7\u7ec4\u7ec7\u8981\u7ecf\u5e38\u542c\u53d6\u4e0b\u7ea7\u7ec4\u7ec7\u548c\u515a\u5458\u7fa4\u4f17\u7684\u610f\u89c1\uff0c\u53ca\u65f6\u89e3\u51b3\u4ed6\u4eec\u63d0\u51fa\u7684\u95ee\u9898\u3002\u515a\u7684\u4e0b\u7ea7\u7ec4\u7ec7\u65e2\u8981\u5411\u4e0a\u7ea7\u7ec4\u7ec7\u8bf7\u793a\u548c\u62a5\u544a\u5de5\u4f5c\uff0c\u53c8\u8981\u72ec\u7acb\u8d1f\u8d23\u5730\u89e3\u51b3\u81ea\u5df1\u804c\u8d23\u8303\u56f4\u5185\u7684\u95ee\u9898\u3002\u4e0a\u4e0b\u7ea7\u7ec4\u7ec7\u4e4b\u95f4\u8981\u4e92\u901a\u60c5\u62a5\u3001\u4e92\u76f8\u652f\u6301\u548c\u4e92\u76f8\u76d1\u7763\u3002\u515a\u7684\u5404\u7ea7\u7ec4\u7ec7\u8981\u6309\u89c4\u5b9a\u5b9e\u884c\u515a\u52a1\u516c\u5f00\uff0c\u4f7f\u515a\u5458\u5bf9\u515a\u5185\u4e8b\u52a1\u6709\u66f4\u591a\u7684\u4e86\u89e3\u548c\u53c2\u4e0e\u3002 \uff08\u4e94\uff09\u515a\u7684\u5404\u7ea7\u59d4\u5458\u4f1a\u5b9e\u884c\u96c6\u4f53\u9886\u5bfc\u548c\u4e2a\u4eba\u5206\u5de5\u8d1f\u8d23\u76f8\u7ed3\u5408\u7684\u5236\u5ea6\u3002\u51e1\u5c5e\u91cd\u5927\u95ee\u9898\u90fd\u8981\u6309\u7167\u96c6\u4f53\u9886\u5bfc\u3001\u6c11\u4e3b\u96c6\u4e2d\u3001\u4e2a\u522b\u915d\u917f\u3001\u4f1a\u8bae\u51b3\u5b9a\u7684\u539f\u5219\uff0c\u7531\u515a\u7684\u59d4\u5458\u4f1a\u96c6\u4f53\u8ba8\u8bba\uff0c\u4f5c\u51fa\u51b3\u5b9a\uff1b\u59d4\u5458\u4f1a\u6210\u5458\u8981\u6839\u636e\u96c6\u4f53\u7684\u51b3\u5b9a\u548c\u5206\u5de5\uff0c\u5207\u5b9e\u5c65\u884c\u81ea\u5df1\u7684\u804c\u8d23\u3002 \uff08\u516d\uff09\u515a\u7981\u6b62\u4efb\u4f55\u5f62\u5f0f\u7684\u4e2a\u4eba\u5d07\u62dc\u3002\u8981\u4fdd\u8bc1\u515a\u7684\u9886\u5bfc\u4eba\u7684\u6d3b\u52a8\u5904\u4e8e\u515a\u548c\u4eba\u6c11\u7684\u76d1\u7763\u4e4b\u4e0b\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u5207\u4ee3\u8868\u515a\u548c\u4eba\u6c11\u5229\u76ca\u7684\u9886\u5bfc\u4eba\u7684\u5a01\u4fe1\u3002 \u7b2c\u5341\u4e00\u6761\u3000\u515a\u7684\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u7684\u4ee3\u8868\u548c\u59d4\u5458\u4f1a\u7684\u4ea7\u751f\uff0c\u8981\u4f53\u73b0\u9009\u4e3e\u4eba\u7684\u610f\u5fd7\u3002\u9009\u4e3e\u91c7\u7528\u65e0\u8bb0\u540d\u6295\u7968\u7684\u65b9\u5f0f\u3002\u5019\u9009\u4eba\u540d\u5355\u8981\u7531\u515a\u7ec4\u7ec7\u548c\u9009\u4e3e\u4eba\u5145\u5206\u915d\u917f\u8ba8\u8bba\u3002\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u5019\u9009\u4eba\u6570\u591a\u4e8e\u5e94\u9009\u4eba\u6570\u7684\u5dee\u989d\u9009\u4e3e\u529e\u6cd5\u8fdb\u884c\u6b63\u5f0f\u9009\u4e3e\u3002\u4e5f\u53ef\u4ee5\u5148\u91c7\u7528\u5dee\u989d\u9009\u4e3e\u529e\u6cd5\u8fdb\u884c\u9884\u9009\uff0c\u4ea7\u751f\u5019\u9009\u4eba\u540d\u5355\uff0c\u7136\u540e\u8fdb\u884c\u6b63\u5f0f\u9009\u4e3e\u3002\u9009\u4e3e\u4eba\u6709\u4e86\u89e3\u5019\u9009\u4eba\u60c5\u51b5\u3001\u8981\u6c42\u6539\u53d8\u5019\u9009\u4eba\u3001\u4e0d\u9009\u4efb\u4f55\u4e00\u4e2a\u5019\u9009\u4eba\u548c\u53e6\u9009\u4ed6\u4eba\u7684\u6743\u5229\u3002\u4efb\u4f55\u7ec4\u7ec7\u548c\u4e2a\u4eba\u4e0d\u5f97\u4ee5\u4efb\u4f55\u65b9\u5f0f\u5f3a\u8feb\u9009\u4e3e\u4eba\u9009\u4e3e\u6216\u4e0d\u9009\u4e3e\u67d0\u4e2a\u4eba\u3002 \u515a\u7684\u5730\u65b9\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u548c\u57fa\u5c42\u4ee3\u8868\u5927\u4f1a\u7684\u9009\u4e3e\uff0c\u5982\u679c\u53d1\u751f\u8fdd\u53cd\u515a\u7ae0\u7684\u60c5\u51b5\uff0c\u4e0a\u4e00\u7ea7\u515a\u7684\u59d4\u5458\u4f1a\u5728\u8c03\u67e5\u6838\u5b9e\u540e\uff0c\u5e94\u4f5c\u51fa\u9009\u4e3e\u65e0\u6548\u548c\u91c7\u53d6\u76f8\u5e94\u63aa\u65bd\u7684\u51b3\u5b9a\uff0c\u5e76\u62a5\u518d\u4e0a\u4e00\u7ea7\u515a\u7684\u59d4\u5458\u4f1a\u5ba1\u67e5\u6279\u51c6\uff0c\u6b63\u5f0f\u5ba3\u5e03\u6267\u884c\u3002 \u515a\u7684\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u4ee3\u8868\u5b9e\u884c\u4efb\u671f\u5236\u3002 \u7b2c\u5341\u4e8c\u6761\u3000\u515a\u7684\u4e2d\u592e\u548c\u5730\u65b9\u5404\u7ea7\u59d4\u5458\u4f1a\u5728\u5fc5\u8981\u65f6\u53ec\u96c6\u4ee3\u8868\u4f1a\u8bae\uff0c\u8ba8\u8bba\u548c\u51b3\u5b9a\u9700\u8981\u53ca\u65f6\u89e3\u51b3\u7684\u91cd\u5927\u95ee\u9898\u3002\u4ee3\u8868\u4f1a\u8bae\u4ee3\u8868\u7684\u540d\u989d\u548c\u4ea7\u751f\u529e\u6cd5\uff0c\u7531\u53ec\u96c6\u4ee3\u8868\u4f1a\u8bae\u7684\u59d4\u5458\u4f1a\u51b3\u5b9a\u3002 \u7b2c\u5341\u4e09\u6761\u3000\u51e1\u662f\u6210\u7acb\u515a\u7684\u65b0\u7ec4\u7ec7\uff0c\u6216\u662f\u64a4\u9500\u515a\u7684\u539f\u6709\u7ec4\u7ec7\uff0c\u5fc5\u987b\u7531\u4e0a\u7ea7\u515a\u7ec4\u7ec7\u51b3\u5b9a\u3002 \u5728\u515a\u7684\u5730\u65b9\u5404\u7ea7\u4ee3\u8868\u5927\u4f1a\u548c\u57fa\u5c42\u4ee3\u8868\u5927\u4f1a\u95ed\u4f1a\u671f\u95f4\uff0c\u4e0a\u7ea7\u515a\u7684\u7ec4\u7ec7\u8ba4\u4e3a\u6709\u5fc5\u8981\u65f6\uff0c\u53ef\u4ee5\u8c03\u52a8\u6216\u8005\u6307\u6d3e\u4e0b\u7ea7\u515a\u7ec4\u7ec7\u7684\u8d1f\u8d23\u4eba\u3002 \u515a\u7684\u4e2d\u592e\u548c\u5730\u65b9\u5404\u7ea7\u59d4\u5458\u4f1a\u53ef\u4ee5\u6d3e\u51fa\u4ee3\u8868\u673a\u5173\u3002 \u7b2c\u5341\u56db\u6761\u3000\u515a\u7684\u4e2d\u592e\u548c\u7701\u3001\u81ea\u6cbb\u533a\u3001\u76f4\u8f96\u5e02\u59d4\u5458\u4f1a\u5b9e\u884c\u5de1\u89c6\u5236\u5ea6\uff0c\u5728\u4e00\u5c4a\u4efb\u671f\u5185\uff0c\u5bf9\u6240\u7ba1\u7406\u7684\u5730\u65b9\u3001\u90e8\u95e8\u3001\u4f01\u4e8b\u4e1a\u5355\u4f4d\u515a\u7ec4\u7ec7\u5b9e\u73b0\u5de1\u89c6\u5168\u8986\u76d6\u3002 \u4e2d\u592e\u6709\u5173\u90e8\u59d4\u548c\u56fd\u5bb6\u673a\u5173\u90e8\u95e8\u515a\u7ec4\uff08\u515a\u59d4\uff09\u6839\u636e\u5de5\u4f5c\u9700\u8981\uff0c\u5f00\u5c55\u5de1\u89c6\u5de5\u4f5c\u3002 \u515a\u7684\u5e02\uff08\u5730\u3001\u5dde\u3001\u76df\uff09\u548c\u53bf\uff08\u5e02\u3001\u533a\u3001\u65d7\uff09\u59d4\u5458\u4f1a\u5efa\u7acb\u5de1\u5bdf\u5236\u5ea6\u3002 \u7b2c\u5341\u4e94\u6761\u3000\u515a\u7684\u5404\u7ea7\u9886\u5bfc\u673a\u5173\uff0c\u5bf9\u540c\u4e0b\u7ea7\u7ec4\u7ec7\u6709\u5173\u7684\u91cd\u8981\u95ee\u9898\u4f5c\u51fa\u51b3\u5b9a\u65f6\uff0c\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8981\u5f81\u6c42\u4e0b\u7ea7\u7ec4\u7ec7\u7684\u610f\u89c1\u3002\u8981\u4fdd\u8bc1\u4e0b\u7ea7\u7ec4\u7ec7\u80fd\u591f\u6b63\u5e38\u884c\u4f7f\u4ed6\u4eec\u7684\u804c\u6743\u3002\u51e1\u5c5e\u5e94\u7531\u4e0b\u7ea7\u7ec4\u7ec7\u5904\u7406\u7684\u95ee\u9898\uff0c\u5982\u65e0\u7279\u6b8a\u60c5\u51b5\uff0c\u4e0a\u7ea7\u9886\u5bfc\u673a\u5173\u4e0d\u8981\u5e72\u9884\u3002 \u7b2c\u5341\u516d\u6761\u3000\u6709\u5173\u5168\u56fd\u6027\u7684\u91cd\u5927\u653f\u7b56\u95ee\u9898\uff0c\u53ea\u6709\u515a\u4e2d\u592e\u6709\u6743\u4f5c\u51fa\u51b3\u5b9a\uff0c\u5404\u90e8\u95e8\u3001\u5404\u5730\u65b9\u7684\u515a\u7ec4\u7ec7\u53ef\u4ee5\u5411\u4e2d\u592e\u63d0\u51fa\u5efa\u8bae\uff0c\u4f46\u4e0d\u5f97\u64c5\u81ea\u4f5c\u51fa\u51b3\u5b9a\u548c\u5bf9\u5916\u53d1\u8868\u4e3b\u5f20\u3002 \u515a\u7684\u4e0b\u7ea7\u7ec4\u7ec7\u5fc5\u987b\u575a\u51b3\u6267\u884c\u4e0a\u7ea7\u7ec4\u7ec7\u7684\u51b3\u5b9a\u3002\u4e0b\u7ea7\u7ec4\u7ec7\u5982\u679c\u8ba4\u4e3a\u4e0a\u7ea7\u7ec4\u7ec7\u7684\u51b3\u5b9a\u4e0d\u7b26\u5408\u672c\u5730\u533a\u3001\u672c\u90e8\u95e8\u7684\u5b9e\u9645\u60c5\u51b5\uff0c\u53ef\u4ee5\u8bf7\u6c42\u6539\u53d8\uff1b\u5982\u679c\u4e0a\u7ea7\u7ec4\u7ec7\u575a\u6301\u539f\u51b3\u5b9a\uff0c\u4e0b\u7ea7\u7ec4\u7ec7\u5fc5\u987b\u6267\u884c\uff0c\u5e76\u4e0d\u5f97\u516c\u5f00\u53d1\u8868\u4e0d\u540c\u610f\u89c1\uff0c\u4f46\u6709\u6743\u5411\u518d\u4e0a\u4e00\u7ea7\u7ec4\u7ec7\u62a5\u544a\u3002 \u515a\u7684\u5404\u7ea7\u7ec4\u7ec7\u7684\u62a5\u520a\u548c\u5176\u4ed6\u5ba3\u4f20\u5de5\u5177\uff0c\u5fc5\u987b\u5ba3\u4f20\u515a\u7684\u8def\u7ebf\u3001\u65b9\u9488\u3001\u653f\u7b56\u548c\u51b3\u8bae\u3002 \u7b2c\u5341\u4e03\u6761\u3000\u515a\u7ec4\u7ec7\u8ba8\u8bba\u51b3\u5b9a\u95ee\u9898\uff0c\u5fc5\u987b\u6267\u884c\u5c11\u6570\u670d\u4ece\u591a\u6570\u7684\u539f\u5219\u3002\u51b3\u5b9a\u91cd\u8981\u95ee\u9898\uff0c\u8981\u8fdb\u884c\u8868\u51b3\u3002\u5bf9\u4e8e\u5c11\u6570\u4eba\u7684\u4e0d\u540c\u610f\u89c1\uff0c\u5e94\u5f53\u8ba4\u771f\u8003\u8651\u3002\u5982\u5bf9\u91cd\u8981\u95ee\u9898\u53d1\u751f\u4e89\u8bba\uff0c\u53cc\u65b9\u4eba\u6570\u63a5\u8fd1\uff0c\u9664\u4e86\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\u5fc5\u987b\u6309\u591a\u6570\u610f\u89c1\u6267\u884c\u5916\uff0c\u5e94\u5f53\u6682\u7f13\u4f5c\u51fa\u51b3\u5b9a\uff0c\u8fdb\u4e00\u6b65\u8c03\u67e5\u7814\u7a76\uff0c\u4ea4\u6362\u610f\u89c1\uff0c\u4e0b\u6b21\u518d\u8868\u51b3\uff1b\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u5c06\u4e89\u8bba\u60c5\u51b5\u5411\u4e0a\u7ea7\u7ec4\u7ec7\u62a5\u544a\uff0c\u8bf7\u6c42\u88c1\u51b3\u3002 \u515a\u5458\u4e2a\u4eba\u4ee3\u8868\u515a\u7ec4\u7ec7\u53d1\u8868\u91cd\u8981\u4e3b\u5f20\uff0c\u5982\u679c\u8d85\u51fa\u515a\u7ec4\u7ec7\u5df2\u6709\u51b3\u5b9a\u7684\u8303\u56f4\uff0c\u5fc5\u987b\u63d0\u4ea4\u6240\u5728\u7684\u515a\u7ec4\u7ec7\u8ba8\u8bba\u51b3\u5b9a\uff0c\u6216\u5411\u4e0a\u7ea7\u515a\u7ec4\u7ec7\u8bf7\u793a\u3002\u4efb\u4f55\u515a\u5458\u4e0d\u8bba\u804c\u52a1\u9ad8\u4f4e\uff0c\u90fd\u4e0d\u80fd\u4e2a\u4eba\u51b3\u5b9a\u91cd\u5927\u95ee\u9898\uff1b\u5982\u9047\u7d27\u6025\u60c5\u51b5\uff0c\u5fc5\u987b\u7531\u4e2a\u4eba\u4f5c\u51fa\u51b3\u5b9a\u65f6\uff0c\u4e8b\u540e\u8981\u8fc5\u901f\u5411\u515a\u7ec4\u7ec7\u62a5\u544a\u3002\u4e0d\u5141\u8bb8\u4efb\u4f55\u9886\u5bfc\u4eba\u5b9e\u884c\u4e2a\u4eba\u4e13\u65ad\u548c\u628a\u4e2a\u4eba\u51cc\u9a7e\u4e8e\u7ec4\u7ec7\u4e4b\u4e0a\u3002 \u7b2c\u5341\u516b\u6761\u3000\u515a\u7684\u4e2d\u592e\u3001\u5730\u65b9\u548c\u57fa\u5c42\u7ec4\u7ec7\uff0c\u90fd\u5fc5\u987b\u91cd\u89c6\u515a\u7684\u5efa\u8bbe\uff0c\u7ecf\u5e38\u8ba8\u8bba\u548c\u68c0\u67e5\u515a\u7684\u5ba3\u4f20\u5de5\u4f5c\u3001\u6559\u80b2\u5de5\u4f5c\u3001\u7ec4\u7ec7\u5de5\u4f5c\u3001\u7eaa\u5f8b\u68c0\u67e5\u5de5\u4f5c\u3001\u7fa4\u4f17\u5de5\u4f5c\u3001\u7edf\u4e00\u6218\u7ebf\u5de5\u4f5c\u7b49\uff0c\u6ce8\u610f\u7814\u7a76\u515a\u5185\u5916\u7684\u601d\u60f3\u653f\u6cbb\u72b6\u51b5\u3002","title":"\u7ec4\u7ec7\u5236\u5ea6"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#_2","text":"\u515a\u7684\u9886\u5bfc\u5236\u5ea6\u4f53\u7cfb\u8981\u603b\u63fd\u5168\u5c40\u3001\u534f\u8c03\u5404\u65b9 \u515a\u653f\u519b\u6c11\u5b66\u3001\u4e1c\u897f\u5357\u5317\u4e2d\uff0c\u515a\u662f\u9886\u5bfc\u4e00\u5207\u7684\u3002\u5982\u4f55\u9886\u5bfc?\u5c31\u662f\u8981\u5065\u5168\u603b\u63fd\u5168\u5c40\u3001\u534f\u8c03\u5404\u65b9\u7684\u515a\u7684\u9886\u5bfc\u5236\u5ea6\u4f53\u7cfb\u3002\u5168\u4f1a\u4ece\u516d\u65b9\u9762\u5bf9\u6b64\u8fdb\u884c\u4e86\u90e8\u7f72\uff0c\u5305\u62ec\u5efa\u7acb\u4e0d\u5fd8\u521d\u5fc3\u3001\u7262\u8bb0\u4f7f\u547d\u7684\u5236\u5ea6;\u5b8c\u5584\u575a\u5b9a\u7ef4\u62a4\u515a\u4e2d\u592e\u6743\u5a01\u548c\u96c6\u4e2d\u7edf\u4e00\u9886\u5bfc\u7684\u5404\u9879\u5236\u5ea6;\u5065\u5168\u515a\u7684\u5168\u9762\u9886\u5bfc\u5236\u5ea6;\u5065\u5168\u4e3a\u4eba\u6c11\u6267\u653f\u3001\u9760\u4eba\u6c11\u6267\u653f\u5404\u9879\u5236\u5ea6;\u5065\u5168\u63d0\u9ad8\u515a\u7684\u6267\u653f\u80fd\u529b\u548c\u9886\u5bfc\u6c34\u5e73\u5236\u5ea6;\u5b8c\u5584\u5168\u9762\u4ece\u4e25\u6cbb\u515a\u5236\u5ea6\u3002","title":"\u9886\u5bfc\u5236\u5ea6"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#5","text":"\u6211\u4eec\u515a\u7684\u6700\u5927\u7684\u653f\u6cbb\u4f18\u52bf\u662f\u5bc6\u5207\u8054\u7cfb\u7fa4\u4f17\uff0c\u515a\u6267\u653f\u540e\u7684\u6700\u5927\u7684\u5371\u9669\u662f\u8131\u79bb\u7fa4\u4f17\u3002","title":"5.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u6700\u5927\u653f\u6cbb\u4f18\u52bf"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#6","text":"\u4e09\u5927\u4f18\u826f\u4f5c\u98ce\u662f\u6307\u7406\u8bba\u4e0e\u5b9e\u9645\u76f8\u7ed3\u5408\u7684\u4f5c\u98ce\u3001\u4e0e\u4eba\u6c11\u7fa4\u4f17\u7d27\u5bc6\u5730\u8054\u7cfb\u5728\u4e00\u8d77\u7684\u4f5c\u98ce\u4ee5\u53ca\u6279\u8bc4\u4e0e\u81ea\u6211\u6279\u8bc4\u7684\u4f5c\u98ce\u3002","title":"6.\u4e2d\u56fd\u5171\u4ea7\u515a\u4e09\u5927\u4f18\u826f\u4f5c\u98ce"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#7","text":"\uff08\u4e00\uff09\u8b66\u544a\uff1b \uff08\u4e8c\uff09\u4e25\u91cd\u8b66\u544a\uff1b \uff08\u4e09\uff09\u64a4\u9500\u515a\u5185\u804c\u52a1\uff1b \uff08\u56db\uff09\u7559\u515a\u5bdf\u770b\uff1b \uff08\u4e94\uff09\u5f00\u9664\u515a\u7c4d\u3002","title":"7.\u4e2d\u56fd\u5171\u4ea7\u515a\u515a\u5458\u7eaa\u5f8b\u5904\u5206\u79cd\u7c7b"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#8","text":"","title":"8.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u515a\u65d7\u548c\u515a\u5fbd"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#9","text":"\u5236\u5b9a\u3001\u4fee\u6539\u5baa\u6cd5\u5e76\u76d1\u7763\u5176\u5b9e\u65bd\uff1b\u5236\u5b9a\u548c\u4fee\u6539\u56fd\u5bb6\u57fa\u672c\u6cd5\u5f8b\u548c\u5176\u4ed6\u6cd5\u5f8b\u3002\u5baa\u6cd5\u7684\u4fee\u6539\uff0c\u7531\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u5e38\u52a1\u59d4\u5458\u4f1a\u6216\u80051\uff0f5\u4ee5\u4e0a\u7684\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u4ee3\u8868\u63d0\u8bae\uff0c\u5e76\u7531\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u4ee5\u5168\u4f53\u4ee3\u8868\u76842\uff0f3\u4ee5\u4e0a\u7684\u591a\u6570\u901a\u8fc7\u3002\u6cd5\u5f8b\u548c\u5176\u4ed6\u8bae\u6848\u7531\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u4ee5\u5168\u4f53\u4ee3\u8868\u7684\u8fc7\u534a\u6570\u901a\u8fc7\u3002\u5baa\u6cd5\u8fd8\u89c4\u5b9a\uff0c\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u6709\u6743\u6539\u53d8\u6216\u8005\u64a4\u9500\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u5e38\u52a1\u59d4\u5458\u4f1a\u4e0d\u9002\u5f53\u7684\u51b3\u5b9a\u3002 \u9009\u4e3e\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u5e38\u52a1\u59d4\u5458\u4f1a\u7684\u7ec4\u6210\u4eba\u5458\uff1b\u9009\u4e3e\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e3b\u5e2d\u3001\u526f\u4e3b\u5e2d\uff1b\u6839\u636e\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u4e3b\u5e2d\u7684\u63d0\u540d\uff0c\u51b3\u5b9a\u56fd\u52a1\u9662\u603b\u7406\u7684\u4eba\u9009\uff1b\u6839\u636e\u56fd\u52a1\u9662\u603b\u7406\u7684\u63d0\u540d\uff0c\u51b3\u5b9a\u56fd\u52a1\u9662\u5176\u4ed6\u7ec4\u6210\u4eba\u5458\u7684\u4eba\u9009\uff1b\u9009\u4e3e\u4e2d\u592e\u519b\u4e8b\u59d4\u5458\u4f1a\u4e3b\u5e2d\uff1b\u6839\u636e\u4e2d\u592e\u519b\u4e8b\u59d4\u5458\u4f1a\u4e3b\u5e2d\u7684\u63d0\u540d\uff0c\u51b3\u5b9a\u4e2d\u592e\u519b\u59d4\u5176\u4ed6\u7ec4\u6210\u4eba\u5458\u7684\u4eba\u9009\uff1b\u9009\u4e3e\u6700\u9ad8\u4eba\u6c11\u6cd5\u9662\u9662\u957f\uff1b\u9009\u4e3e\u6700\u9ad8\u4eba\u6c11\u68c0\u5bdf\u9662\u68c0\u5bdf\u957f\u3002\u5bf9\u4ee5\u4e0a\u4eba\u5458\uff0c\u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u90fd\u6709\u6743\u4e88\u4ee5\u7f62\u514d\u3002 \u5ba1\u67e5\u548c\u6279\u51c6\u56fd\u6c11\u7ecf\u6d4e\u548c\u793e\u4f1a\u53d1\u5c55\u8ba1\u5212\uff1b\u5ba1\u67e5\u548c\u6279\u51c6\u56fd\u5bb6\u7684\u9884\u7b97\u548c\u9884\u7b97\u6267\u884c\u60c5\u51b5\uff1b\u6279\u51c6\u7701\u3001\u81ea\u6cbb\u533a\u548c\u76f4\u8f96\u5e02\u7684\u5efa\u7f6e\uff1b\u51b3\u5b9a\u7279\u522b\u884c\u653f\u533a\u7684\u8bbe\u7acb\u53ca\u5176\u5236\u5ea6\uff1b\u51b3\u5b9a\u6218\u4e89\u548c\u548c\u5e73\u7684\u95ee\u9898\u3002 \u5168\u56fd\u4eba\u6c11\u4ee3\u8868\u5927\u4f1a\u6709\u6743\u884c\u4f7f\u201c\u5e94\u5f53\u7531\u6700\u9ad8\u56fd\u5bb6\u6743\u529b\u673a\u5173\u884c\u4f7f\u7684\u5176\u4ed6\u804c\u6743\u201d\u3002","title":"9.\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u5168\u56fd\u4ee3\u8868\u5927\u4f1a\u804c\u6743"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#10","text":"\u515a\u7ae0\u89c4\u5b9a\uff1a\u515a\u5458\u4e2a\u4eba\u670d\u4ece\u515a\u7684\u7ec4\u7ec7\uff0c\u5c11\u6570\u670d\u4ece\u591a\u6570\uff0c\u4e0b\u7ea7\u7ec4\u7ec7\u670d\u4ece\u4e0a\u7ea7\u7ec4\u7ec7\uff0c\u5168\u515a\u5404\u4e2a\u7ec4\u7ec7\u548c\u5168\u4f53\u515a\u5458\u670d\u4ece\u515a\u7684\u5168\u56fd\u4ee3\u8868\u5927\u4f1a\u548c\u4e2d\u592e\u59d4\u5458\u4f1a\u3002\u8fd9\u4e00\u89c4\u5b9a\u88ab\u7b80\u79f0\u4e3a\u201c\u56db\u4e2a\u670d\u4ece\u201d\u3002","title":"10.\u515a\u7ae0\u89c4\u5b9a\u7684\u201c\u56db\u4e2a\u670d\u4ece\u201d\u539f\u5219"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#11","text":"\u56db\u4e2a\u610f\u8bc6:\u662f\u6307\u653f\u6cbb\u610f\u8bc6\u3001\u5927\u5c40\u610f\u8bc6\u3001\u6838\u5fc3\u610f\u8bc6\u3001\u770b\u9f50\u610f\u8bc6\u3002 \u56db\u4e2a\u81ea\u4fe1:\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u9053\u8def\u81ea\u4fe1\u3001\u7406\u8bba\u81ea\u4fe1\u3001\u5236\u5ea6\u81ea\u4fe1\u3001\u6587\u5316\u81ea\u4fe1\u3002 \u4e24\u4e2a\u7ef4\u62a4:\u6307\u575a\u51b3\u7ef4\u62a4\u4e60\u8fd1\u5e73\u603b\u4e66\u8bb0\u515a\u4e2d\u592e\u7684\u6838\u5fc3\u3001\u5168\u515a\u7684\u6838\u5fc3\u5730\u4f4d\uff0c\u575a\u51b3\u7ef4\u62a4\u515a\u4e2d\u592e\u6743\u5a01\u548c\u96c6\u4e2d\u7edf\u4e00\u9886\u5bfc\u3002","title":"11.\u201c\u56db\u4e2a\u610f\u8bc6\u201d\u201c\u56db\u4e2a\u81ea\u4fe1\u201d \u201c\u4e24\u4e2a\u7ef4\u62a4\u201d"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#12","text":"\u575a\u6301\u793e\u4f1a\u4e3b\u4e49\u9053\u8def\u3001\u575a\u6301\u4eba\u6c11\u6c11\u4e3b\u4e13\u653f\u3001\u575a\u6301\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u9886\u5bfc\u3001\u575a\u6301\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u6bdb\u6cfd\u4e1c\u601d\u60f3\uff0c\u662f\u6211\u4eec\u7684\u7acb\u56fd\u4e4b\u672c\u3002","title":"12.\u56db\u9879\u57fa\u672c\u539f\u5219\u7684\u4e3b\u8981\u5185\u5bb9"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#13","text":"\u9886\u5bfc\u548c\u56e2\u7ed3\u5168\u56fd\u5404\u65cf\u4eba\u6c11\uff0c\u4ee5\u7ecf\u6d4e\u5efa\u8bbe\u4e3a\u4e2d\u5fc3\uff0c\u575a\u6301\u56db\u9879\u57fa\u672c\u539f\u5219\uff0c\u575a\u6301\u6539\u9769\u5f00\u653e\uff0c\u81ea\u529b\u66f4\u751f\uff0c\u8270\u82e6\u521b\u4e1a\uff0c\u4e3a\u628a\u6211\u56fd\u5efa\u8bbe\u6210\u4e3a\u5bcc\u5f3a\u3001\u6c11\u4e3b\u3001\u6587\u660e\u3001\u548c\u8c10\u7684\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u56fd\u5bb6\u800c\u594b\u6597\u3002","title":"13.\u515a\u5728\u793e\u4f1a\u4e3b\u4e49\u521d\u7ea7\u9636\u6bb5\u7684\u57fa\u672c\u8def\u7ebf"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#14","text":"\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u6700\u672c\u8d28\u7279\u5f81\u662f\u4e2d\u56fd\u5171\u4ea7\u515a\u7684\u9886\u5bfc","title":"14.\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u6700\u672c\u8d28\u7684\u7279\u5f81"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#15","text":"\u4e60\u8fd1\u5e73\uff1a\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u8fdb\u5165\u65b0\u65f6\u4ee3\uff0c\u6211\u56fd\u793e\u4f1a\u4e3b\u8981\u77db\u76fe\u5df2\u7ecf\u8f6c\u5316\u4e3a\u4eba\u6c11\u65e5\u76ca\u589e\u957f\u7684\u7f8e\u597d\u751f\u6d3b\u9700\u8981\u548c\u4e0d\u5e73\u8861\u4e0d\u5145\u5206\u7684\u53d1\u5c55\u4e4b\u95f4\u7684\u77db\u76fe\u3002","title":"15.\u515a\u7684\u5341\u4e5d\u5927\u63d0\u51fa\u6211\u56fd\u793e\u4f1a\u7684\u4e3b\u8981\u77db\u76fe"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#16","text":"\u515a\u786e\u7acb\u4e60\u8fd1\u5e73\u540c\u5fd7\u515a\u4e2d\u592e\u7684\u6838\u5fc3\u3001\u5168\u515a\u7684\u6838\u5fc3\u5730\u4f4d\uff0c\u786e\u7acb\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u601d\u60f3\u7684\u6307\u5bfc\u5730\u4f4d","title":"16.\u5341\u4e5d\u5c4a\u516d\u4e2d\u5168\u4f1a\u63d0\u51fa\u7684\u201c\u4e24\u4e2a\u786e\u7acb\u201d"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#17","text":"\u5728\u4e2d\u56fd\u5171\u4ea7\u515a\u6210\u7acb\u4e00\u767e\u5e74\u65f6\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a\uff0c\u5728\u65b0\u4e2d\u56fd\u6210\u7acb\u4e00\u767e\u5e74\u65f6\u5efa\u6210\u5bcc\u5f3a\u6c11\u4e3b\u6587\u660e\u548c\u8c10\u7684\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u56fd\u5bb6\u3002","title":"17. \u201c\u4e24\u4e2a\u4e00\u767e\u5e74\u201d\u594b\u6597\u76ee\u6807"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#18","text":"\u5bcc\u5f3a\u6c11\u4e3b\u6587\u660e\u548c\u8c10 \u81ea\u7531\u5e73\u7b49\u516c\u6b63\u6cd5\u6cbb \u7231\u56fd\u656c\u4e1a\u8bda\u4fe1\u53cb\u5584","title":"18.\u793e\u4f1a\u4e3b\u4e49\u6838\u5fc3\u4ef7\u503c\u89c2"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#19","text":"\u515a\u7684\u5341\u4e5d\u5927\u62a5\u544a\u63d0\u51fa\uff0c\u4ece\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a\u5230\u57fa\u672c\u5b9e\u73b0\u73b0\u4ee3\u5316\uff0c\u518d\u5230\u5168\u9762\u5efa\u6210\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5f3a\u56fd\uff0c\u662f\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u53d1\u5c55\u7684\u6218\u7565\u5b89\u6392\u3002","title":"19.\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u53d1\u5c55\u7684\u6218\u7565\u5b89\u6392"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#20","text":"\u4e94\u4f4d\u4e00\u4f53\uff1a\u662f\u5341\u516b\u5927\u62a5\u544a\u7684\u201c\u65b0\u63d0\u6cd5\u201d\u4e4b\u4e00\u3002\u7ecf\u6d4e\u5efa\u8bbe\u3001\u653f\u6cbb\u5efa\u8bbe\u3001\u6587\u5316\u5efa\u8bbe\u3001\u793e\u4f1a\u5efa\u8bbe\u3001\u751f\u6001\u6587\u660e\u5efa\u8bbe\u2014\u2014\u7740\u773c\u4e8e\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a\u3001\u5b9e\u73b0\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u548c\u4e2d\u534e\u6c11\u65cf\u4f1f\u5927\u590d\u5174\uff0c\u662f\u515a\u7684\u5341\u516b\u5927\u62a5\u544a\u5bf9\u63a8\u8fdb\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u4e8b\u4e1a\u4f5c\u51fa\u201c\u4e94\u4f4d\u4e00\u4f53\u201d\u603b\u4f53\u5e03\u5c40\u3002 \u201c\u56db\u4e2a\u5168\u9762\u201d\u6218\u7565\u5e03\u5c40\uff1a\u5373\u201c\u5168\u9762\u5efa\u6210\u5c0f\u5eb7\u793e\u4f1a\u3001\u5168\u9762\u6df1\u5316\u6539\u9769\u3001\u5168\u9762\u4f9d\u6cd5\u6cbb\u56fd\u3001\u5168\u9762\u4ece\u4e25\u6cbb\u515a\u201d\uff0c\u662f\u515a\u4e2d\u592e\u6cbb\u56fd\u7406\u653f\u7684\u603b\u65b9\u7565\u3002","title":"20.\u201c\u4e94\u4f4d\u4e00\u4f53\u201d\u3001\u201c\u56db\u4e2a\u5168\u9762\u201d \u5e03\u5c40"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#21","text":"\u4e09\u4f1a\u4e00\u8bfe\uff1a - \u652f\u90e8\u515a\u5458\u5927\u4f1a - \u652f\u90e8\u59d4\u5458\u4f1a - \u515a\u5c0f\u7ec4\u4f1a \u6309\u65f6\u4e0a\u597d\u515a\u8bfe\u3002 \u4e24\u5b66\u4e00\u505a\uff1a \u5b66\u515a\u7ae0\u515a\u89c4\u3001\u5b66\u7cfb\u5217\u8bb2\u8bdd\uff0c\u505a\u5408\u683c\u515a\u5458","title":"21.\u201c\u4e24\u5b66\u4e00\u505a\u201d\u3001\u201c\u4e09\u4f1a\u4e00\u8bfe\u201d \u7684\u4e3b\u8981\u5185\u5bb9"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#22","text":"\u575a\u6301\u6807\u51c6\uff0c\u4fdd\u8bc1\u8d28\u91cf\uff0c\u6539\u5584\u7ed3\u6784\uff0c\u614e\u91cd\u53d1\u5c55","title":"22.\u53d1\u5c55\u515a\u5458\u7684\u65b9\u9488\u53ca\u539f\u5219"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#23","text":"\uff081\uff09\u5e74\u9f84\u572818\u5c81\u4ee5\u4e0a\u7684\u4e2d\u56fd\u516c\u6c11\u3002 \uff082\uff09\u627f\u8ba4\u515a\u7684\u7eb2\u9886\u548c\u7ae0\u7a0b\u3002 \uff083\uff09\u613f\u610f\u53c2\u52a0\u515a\u7684\u4e00\u4e2a\u7ec4\u7ec7\u5e76\u5728\u5176\u4e2d\u79ef\u6781\u5de5\u4f5c\u3002 \uff084\uff09\u613f\u610f\u6267\u884c\u515a\u7684\u51b3\u8bae\u3002 \uff085\uff09\u6309\u671f\u4ea4\u7eb3\u515a\u8d39\u3002 \u4e0b\u9762\u662f\u8be6\u7ec6\u7248\u54e6~ \u7533\u8bf7\u5165\u515a\u7684\u6761\u4ef6\u53c8\u79f0\u5165\u515a\u8d44\u683c\uff0c\u5373\u5177\u5907\u4ec0\u4e48\u6761\u4ef6\u7684\u4eba\u624d\u80fd\u7533\u8bf7\u5165\u515a\u3002\u6309\u7167\u515a\u7ae0\u89c4\u5b9a\uff0c\u7533\u8bf7\u52a0\u5165\u4e2d\u56fd\u5171\u4ea7\u515a\uff0c\u5fc5\u987b\u5177\u5907\u4e94\u4e2a\u57fa\u672c\u6761\u4ef6\uff1a \uff081\uff09\u5e74\u9f84\u572818\u5c81\u4ee5\u4e0a\u7684\u4e2d\u56fd\u516c\u6c11\u3002\u4e00\u4e2a\u4eba\u6210\u5e74\u540e\u624d\u53ef\u80fd\u6709\u6bd4\u8f83\u786e\u5b9a\u7684\u653f\u6cbb\u5224\u65ad\u529b\uff0c\u5e76\u786e\u7acb\u81ea\u5df1\u7684\u653f\u6cbb\u4fe1\u4ef0\u548c\u7ec8\u8eab\u5fd7\u5411\u3002\u52a0\u5165\u4e2d\u56fd\u5171\u4ea7\u515a\u5fc5\u987b\u662f\u5177\u6709\u4e2d\u56fd\u56fd\u7c4d\u7684\u5de5\u4eba\u3001\u519c\u6c11\u3001\u519b\u4eba\u3001\u77e5\u8bc6\u5206\u5b50\u548c\u5176\u4ed6\u793e\u4f1a\u9636\u5c42\u7684\u5148\u8fdb\u5206\u5b50\u3002\u7533\u8bf7\u5165\u515a\u7684\u4eba\u5fc5\u987b\u5e74\u6ee118\u5c81\uff0c\u7531\u672c\u4eba\u5411\u515a\u7ec4\u7ec7\u63d0\u51fa\u4e66\u9762\u5165\u515a\u7533\u8bf7\u3002 \uff082\uff09\u627f\u8ba4\u515a\u7684\u7eb2\u9886\u548c\u7ae0\u7a0b\u3002\u201c\u627f\u8ba4\u201d\uff0c\u4e0d\u4ec5\u662f\u53e3\u5934\u4e0a\u7684\u62e5\u62a4\u548c\u63a5\u53d7\uff0c\u66f4\u91cd\u8981\u7684\u662f\u6709\u5b9e\u73b0\u515a\u7684\u7eb2\u9886\u3001\u6267\u884c\u515a\u7684\u7ae0\u7a0b\u7684\u884c\u52a8\uff0c\u7acb\u5fd7\u4e3a\u5171\u4ea7\u4e3b\u4e49\u594b\u6597\u7ec8\u8eab\u3002 \uff083\uff09\u613f\u610f\u53c2\u52a0\u515a\u7684\u4e00\u4e2a\u7ec4\u7ec7\u5e76\u5728\u5176\u4e2d\u79ef\u6781\u5de5\u4f5c\u3002\u53ea\u6709\u5168\u4f53\u515a\u5458\u90fd\u53c2\u52a0\u515a\u7684\u4e00\u4e2a\u7ec4\u7ec7\u5e76\u79ef\u6781\u5de5\u4f5c\uff0c\u624d\u80fd\u4fdd\u8bc1\u5168\u515a\u5728\u601d\u60f3\u4e0a\u3001\u653f\u6cbb\u4e0a\u3001\u884c\u52a8\u4e0a\u7684\u9ad8\u5ea6\u4e00\u81f4\uff0c\u515a\u624d\u6709\u6218\u6597\u529b\u3002 \uff084\uff09\u613f\u610f\u6267\u884c\u515a\u7684\u51b3\u8bae\u3002\u515a\u7684\u51b3\u8bae\u4ee3\u8868\u5168\u515a\u7684\u610f\u5fd7\uff0c\u5fc5\u987b\u8d2f\u5f7b\u6267\u884c\u3002\u5982\u679c\u6bcf\u4e2a\u515a\u5458\u53ef\u4ee5\u81ea\u884c\u5176\u662f\uff0c\u515a\u7684\u56e2\u7ed3\u7edf\u4e00\u5c31\u4f1a\u53d7\u5230\u7834\u574f\uff0c\u515a\u5c31\u6ca1\u6709\u6218\u6597\u529b\u3002 \uff085\uff09\u6309\u671f\u4ea4\u7eb3\u515a\u8d39\u3002\u8fd9\u662f\u6bcf\u4e2a\u515a\u5458\u7684\u4e49\u52a1\uff0c\u662f\u515a\u5458\u5173\u5fc3\u515a\u7684\u4e8b\u4e1a\u3001\u6709\u7ec4\u7ec7\u89c2\u5ff5\u7684\u4e00\u79cd\u8868\u73b0\u3002","title":"23.\u7533\u8bf7\u5165\u515a\u9700\u8981\u5177\u5907\u7684\u57fa\u672c\u6761\u4ef6"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#24","text":"1\u3001\u91c6\u53d6\u515a\u5458\u63a8\u8350\u3001\u7fa4\u56e2\u7ec4\u7ec7\u63a8\u4f18\u7b49\u65b9\u5f0f\uff0c\u4ece\u5165\u515a\u7533\u8bf7\u4eba\u4e2d\u63a8\u8350\u5165\u515a\u79ef\u6781\u5206\u5b50\u4eba\u9009\u3002 2\u3001\u515a\u652f\u90e8\u8ba4\u771f\u542c\u53d6\u6709\u5173\u65b9\u9762\u610f\u89c1\u3002 3\u3001\u652f\u90e8\u59d4\u5458\u4f1a\uff08\u4e0d\u8bbe\u652f\u90e8\u59d4\u5458\u4f1a\u7684\u7531\u652f\u90e8\u5927\u4f1a\uff09\u5145\u5206\u8ba8\u8bba\uff0c\u7814\u7a76\u51b3\u5b9a\u5165\u515a\u79ef\u6781\u5206\u5b50\u3002 4\u3001\u515a\u652f\u90e8\u5c06\u5165\u515a\u79ef\u6781\u5206\u5b50\u6709\u5173\u60c5\u51b5\u62a5\u4e0a\u7ea7\u515a\u59d4\u5907\u6848\u3002","title":"24.\u786e\u5b9a\u5165\u515a\u79ef\u6781\u5206\u5b50\u7684\u7a0b\u5e8f"},{"location":"%E8%87%B4%E5%B0%8F%E5%B0%8F%E9%99%88/%E5%85%9A%E8%AE%AD/#25","text":"\uff08\u4e00\uff09\u8ba4\u771f\u5b66\u4e60\u9a6c\u514b\u601d\u5217\u5b81\u4e3b\u4e49\u3001\u6bdb\u6cfd\u4e1c\u601d\u60f3\u3001\u9093\u5c0f\u5e73\u7406\u8bba\u3001\u201c\u4e09\u4e2a\u4ee3\u8868\u201d\u548c\u79d1\u5b66\u53d1\u5c55\u89c2\u91cd\u8981\u601d\u60f3\uff0c\u5b66\u4e60\u515a\u7684\u8def\u7ebf\u3001\u65b9\u9488\u3001\u653f\u7b56\u53ca\u51b3\u8bae\uff0c\u5b66\u4e60\u515a\u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u5b66\u4e60\u79d1\u5b66\u3001\u6587\u5316\u3001\u6cd5\u5f8b\u548c\u4e1a\u52a1\u77e5\u8bc6\uff0c\u52aa\u529b\u63d0\u9ad8\u4e3a\u4eba\u6c11\u670d\u52a1\u7684\u672c\u9886\u3002 \uff08\u4e8c\uff09\u8d2f\u5f7b\u6267\u884c\u515a\u7684\u57fa\u672c\u8def\u7ebf\u548c\u5404\u9879\u65b9\u9488\u3001\u653f\u7b56\uff0c\u5e26\u5934\u53c2\u52a0\u6539\u9769\u5f00\u653e\u548c\u793e\u4f1a\u4e3b\u4e49\u73b0\u4ee3\u5316\u5efa\u8bbe\uff0c\u5e26\u52a8\u7fa4\u4f17\u4e3a\u7ecf\u6d4e\u53d1\u5c55\u548c\u793e\u4f1a\u8fdb\u6b65\u8270\u82e6\u594b\u6597\uff0c\u5728\u751f\u4ea7\u3001\u5de5\u4f5c\u3001\u5b66\u4e60\u548c\u793e\u4f1a\u751f\u6d3b\u4e2d\u8d77\u5148\u950b\u6a21\u8303\u4f5c\u7528\u3002 \uff08\u4e09\uff09\u575a\u6301\u515a\u548c\u4eba\u6c11\u7684\u5229\u76ca\u9ad8\u4e8e\u4e00\u5207\uff0c\u4e2a\u4eba\u5229\u76ca\u670d\u4ece\u515a\u548c\u4eba\u6c11\u7684\u5229\u76ca\uff0c\u5403\u82e6\u5728\u524d\uff0c\u4eab\u53d7\u5728\u540e\uff0c\u514b\u5df1\u5949\u516c\uff0c\u591a\u505a\u8d21\u732e\u3002 \uff08\u56db\uff09\u81ea\u89c9\u9075\u5b88\u515a\u7684\u7eaa\u5f8b\uff0c\u6a21\u8303\u9075\u5b88\u56fd\u5bb6\u7684\u6cd5\u5f8b\u6cd5\u89c4\uff0c\u4e25\u683c\u4fdd\u5b88\u515a\u548c\u56fd\u5bb6\u7684\u79d8\u5bc6\uff0c\u6267\u884c\u515a\u7684\u51b3\u5b9a\uff0c\u670d\u4ece\u7ec4\u7ec7\u5206\u914d\uff0c\u79ef\u6781\u5b8c\u6210\u515a\u7684\u4efb\u52a1\u3002 \uff08\u4e94\uff09\u7ef4\u62a4\u515a\u7684\u56e2\u7ed3\u548c\u7edf\u4e00\uff0c\u5bf9\u515a\u5fe0\u8bda\u8001\u5b9e\uff0c\u8a00\u884c\u4e00\u81f4\uff0c\u575a\u51b3\u53cd\u5bf9\u4e00\u5207\u6d3e\u522b\u7ec4\u7ec7\u548c\u5c0f\u96c6\u56e2\u6d3b\u52a8\uff0c\u53cd\u5bf9\u9633\u5949\u9634\u8fdd\u7684\u4e24\u9762\u6d3e\u884c\u4e3a\u548c\u4e00\u5207\u9634\u8c0b\u8be1\u8ba1\u3002 \uff08\u516d\uff09\u5207\u5b9e\u5f00\u5c55\u6279\u8bc4\u548c\u81ea\u6211\u6279\u8bc4\uff0c\u52c7\u4e8e\u63ed\u9732\u548c\u7ea0\u6b63\u5de5\u4f5c\u4e2d\u7684\u7f3a\u70b9\u3001\u9519\u8bef\uff0c\u575a\u51b3\u540c\u6d88\u6781\u8150\u8d25\u73b0\u8c61\u4f5c\u6597\u4e89\u3002 \uff08\u4e03\uff09\u5bc6\u5207\u8054\u7cfb\u7fa4\u4f17\uff0c\u5411\u7fa4\u4f17\u5ba3\u4f20\u515a\u7684\u4e3b\u5f20\uff0c\u9047\u4e8b\u540c\u7fa4\u4f17\u5546\u91cf\uff0c\u53ca\u65f6\u5411\u515a\u53cd\u6620\u7fa4\u4f17\u7684\u610f\u89c1\u548c\u8981\u6c42\uff0c\u7ef4\u62a4\u7fa4\u4f17\u7684\u6b63\u5f53\u5229\u76ca\u3002 \uff08\u516b\uff09\u53d1\u626c\u793e\u4f1a\u4e3b\u4e49\u65b0\u98ce\u5c1a\uff0c\u5e26\u5934\u5b9e\u8df5\u793e\u4f1a\u4e3b\u4e49\u8363\u8fb1\u89c2\uff0c\u63d0\u5021\u5171\u4ea7\u4e3b\u4e49\u9053\u5fb7\uff0c\u4e3a\u4e86\u4fdd\u62a4\u56fd\u5bb6\u548c\u4eba\u6c11\u7684\u5229\u76ca\uff0c\u5728\u4e00\u5207\u56f0\u96be\u548c\u5371\u9669\u7684\u65f6\u523b\u633a\u8eab\u800c\u51fa\uff0c\u82f1\u52c7\u6597\u4e89\uff0c\u4e0d\u6015\u727a\u7272\u3002","title":"25.\u300a\u515a\u7ae0\u300b\u89c4\u5b9a\u5171\u4ea7\u515a\u5458\u5fc5\u987b\u5c65\u884c\u7684\u516b\u9879\u4e49\u52a1"}]}